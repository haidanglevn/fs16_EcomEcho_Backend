// <auto-generated />
using System;
using EcommerceAPI.Core.src.Entity;
using EcommerceAPI.WebAPI.src.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace EcommerceAPI.WebAPI.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20231227041336_AddOrderRelationUser2")]
    partial class AddOrderRelationUser2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresEnum(modelBuilder, "color", new[] { "black", "silver", "gray", "white", "maroon", "red", "purple", "fuchsia", "green", "lime", "olive", "yellow", "navy", "blue", "teal", "aqua", "orange", "alice_blue", "coral", "dark_blue" });
            NpgsqlModelBuilderExtensions.HasPostgresEnum(modelBuilder, "role", new[] { "customer", "admin" });
            NpgsqlModelBuilderExtensions.HasPostgresEnum(modelBuilder, "size", new[] { "xs", "s", "m", "l", "xl", "xxl", "xxxl" });
            NpgsqlModelBuilderExtensions.HasPostgresEnum(modelBuilder, "status", new[] { "pending", "shipping", "received" });
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.Address", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("city");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("country");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("postal_code");

                    b.Property<string>("State")
                        .HasColumnType("text")
                        .HasColumnName("state");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("street");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated_at");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_addresses");

                    b.HasIndex("UserId")
                        .HasDatabaseName("ix_addresses_user_id");

                    b.ToTable("addresses", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("a1a1a1a1-1234-1234-1234-1234567890ab"),
                            City = "Helsinki",
                            Country = "Finland",
                            CreatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(4458),
                            PostalCode = "00100",
                            Street = "Street 1",
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(4460),
                            UserId = new Guid("ad0ad1be-f7e5-47c7-b4c3-c17250cbebab")
                        },
                        new
                        {
                            Id = new Guid("a2a2a2a2-1234-1234-1234-1234567890ab"),
                            City = "Helsinki",
                            Country = "Finland",
                            CreatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(4465),
                            PostalCode = "00200",
                            Street = "Street 2",
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(4467),
                            UserId = new Guid("ad0ad1be-f7e5-47c7-b4c3-c17250cbebab")
                        },
                        new
                        {
                            Id = new Guid("a3a3a3a3-1234-1234-1234-1234567890ab"),
                            City = "Helsinki",
                            Country = "Finland",
                            CreatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(4469),
                            PostalCode = "00300",
                            Street = "Street 3",
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(4471),
                            UserId = new Guid("ad0ad1be-f7e5-47c7-b4c3-c17250cbebab")
                        },
                        new
                        {
                            Id = new Guid("b1b1b1b1-1234-1234-1234-1234567890ab"),
                            City = "Espoo",
                            Country = "Finland",
                            CreatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(4473),
                            PostalCode = "02100",
                            Street = "Street 1",
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(4475),
                            UserId = new Guid("760454fa-4af1-4ae6-9b18-ed3aec4be2a9")
                        },
                        new
                        {
                            Id = new Guid("b2b2b2b2-1234-1234-1234-1234567890ab"),
                            City = "Espoo",
                            Country = "Finland",
                            CreatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(4478),
                            PostalCode = "02100",
                            Street = "Street 2",
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(4479),
                            UserId = new Guid("760454fa-4af1-4ae6-9b18-ed3aec4be2a9")
                        },
                        new
                        {
                            Id = new Guid("b3b3b3b3-1234-1234-1234-1234567890ab"),
                            City = "Espoo",
                            Country = "Finland",
                            CreatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(4483),
                            PostalCode = "02100",
                            Street = "Street 3",
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(4484),
                            UserId = new Guid("760454fa-4af1-4ae6-9b18-ed3aec4be2a9")
                        },
                        new
                        {
                            Id = new Guid("c1c1c1c1-1234-1234-1234-1234567890ab"),
                            City = "Tampere",
                            Country = "Finland",
                            CreatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(4487),
                            PostalCode = "33100",
                            Street = "Street 3",
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(4488),
                            UserId = new Guid("611a0192-8b2e-4997-a8c8-59b93674d33b")
                        },
                        new
                        {
                            Id = new Guid("c2c2c2c2-1234-1234-1234-1234567890ab"),
                            City = "Tampere",
                            Country = "Finland",
                            CreatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(4491),
                            PostalCode = "33100",
                            Street = "Street 4",
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(4493),
                            UserId = new Guid("611a0192-8b2e-4997-a8c8-59b93674d33b")
                        },
                        new
                        {
                            Id = new Guid("c3c3c3c3-1234-1234-1234-1234567890ab"),
                            City = "Tampere",
                            Country = "Finland",
                            CreatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(4496),
                            PostalCode = "33100",
                            Street = "Street 6",
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(4497),
                            UserId = new Guid("611a0192-8b2e-4997-a8c8-59b93674d33b")
                        });
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("image");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id")
                        .HasName("pk_categories");

                    b.ToTable("categories", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("88499694-269b-4308-a64d-0e903a1f503d"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(3452),
                            Image = "https://picsum.photos/1000/1000?random=99",
                            Name = "Fashion",
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(3457)
                        },
                        new
                        {
                            Id = new Guid("23b984f8-26f7-49a5-82ea-f4f5ddd16eca"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(3462),
                            Image = "https://picsum.photos/1000/1000?random=100",
                            Name = "Sport",
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(3464)
                        },
                        new
                        {
                            Id = new Guid("e842529a-ac4a-48f4-9377-1786d94dd4e8"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(3466),
                            Image = "https://picsum.photos/1000/1000?random=101",
                            Name = "Home",
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(3467)
                        });
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.Image", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid")
                        .HasColumnName("product_id");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated_at");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("url");

                    b.HasKey("Id")
                        .HasName("pk_images");

                    b.HasIndex("ProductId")
                        .HasDatabaseName("ix_images_product_id");

                    b.ToTable("images", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("cbe6ea41-b379-4fe6-8816-e346d9826eb0"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(3713),
                            ProductId = new Guid("bc2983a5-b13c-49a4-9a6c-29c4dad9c355"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(3716),
                            Url = "https://picsum.photos/1000/1000?random=1"
                        },
                        new
                        {
                            Id = new Guid("817e9c0e-f066-49ad-92cc-b2a850015d58"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(3739),
                            ProductId = new Guid("bc2983a5-b13c-49a4-9a6c-29c4dad9c355"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(3741),
                            Url = "https://picsum.photos/1000/1000?random=2"
                        },
                        new
                        {
                            Id = new Guid("02be318d-e2e0-4eec-8a5a-08820d565d01"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(3746),
                            ProductId = new Guid("bc2983a5-b13c-49a4-9a6c-29c4dad9c355"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(3748),
                            Url = "https://picsum.photos/1000/1000?random=3"
                        },
                        new
                        {
                            Id = new Guid("d743f218-2cca-4d8a-956e-4cb550ec62ef"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(3766),
                            ProductId = new Guid("fedfd1c9-a73a-47bf-a635-370c193fc1df"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(3768),
                            Url = "https://picsum.photos/1000/1000?random=4"
                        },
                        new
                        {
                            Id = new Guid("b5129947-ba1a-461f-bfe0-7780a94eaf6a"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(3773),
                            ProductId = new Guid("fedfd1c9-a73a-47bf-a635-370c193fc1df"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(3775),
                            Url = "https://picsum.photos/1000/1000?random=5"
                        },
                        new
                        {
                            Id = new Guid("94a81ce2-310b-41d3-8aa1-7cda15d6122e"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(3780),
                            ProductId = new Guid("fedfd1c9-a73a-47bf-a635-370c193fc1df"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(3782),
                            Url = "https://picsum.photos/1000/1000?random=6"
                        },
                        new
                        {
                            Id = new Guid("36515797-65a5-4f1d-8b74-a3ac0d74d06d"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(3786),
                            ProductId = new Guid("865770da-89af-4719-b00c-310b57d535e1"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(3787),
                            Url = "https://picsum.photos/1000/1000?random=7"
                        },
                        new
                        {
                            Id = new Guid("9f3d6fb3-5d8a-41fb-8ef0-7cab7201c8e9"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(3790),
                            ProductId = new Guid("865770da-89af-4719-b00c-310b57d535e1"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(3792),
                            Url = "https://picsum.photos/1000/1000?random=8"
                        },
                        new
                        {
                            Id = new Guid("a3ace735-345f-48d6-9b56-afe68c19e6e5"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(3795),
                            ProductId = new Guid("865770da-89af-4719-b00c-310b57d535e1"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(3797),
                            Url = "https://picsum.photos/1000/1000?random=9"
                        },
                        new
                        {
                            Id = new Guid("64fd0472-6edd-4c60-922d-e2ef2f6ba63e"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(3801),
                            ProductId = new Guid("bf49c60a-9173-4533-8ca6-182cc7f685eb"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(3802),
                            Url = "https://picsum.photos/1000/1000?random=10"
                        },
                        new
                        {
                            Id = new Guid("a9825585-10a9-4743-8f15-4275a936e456"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(3805),
                            ProductId = new Guid("bf49c60a-9173-4533-8ca6-182cc7f685eb"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(3807),
                            Url = "https://picsum.photos/1000/1000?random=11"
                        },
                        new
                        {
                            Id = new Guid("e64afa39-2e3b-4d0a-930b-2e1e81e78cff"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(3814),
                            ProductId = new Guid("bf49c60a-9173-4533-8ca6-182cc7f685eb"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(3815),
                            Url = "https://picsum.photos/1000/1000?random=12"
                        },
                        new
                        {
                            Id = new Guid("11d6bc24-03e9-493e-b807-384c264faeeb"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(3818),
                            ProductId = new Guid("271309f9-03ae-4a21-a98c-cb2b911d7996"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(3820),
                            Url = "https://picsum.photos/1000/1000?random=13"
                        },
                        new
                        {
                            Id = new Guid("cc8ab216-0cf1-45b2-94f1-6e91367174d0"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(3823),
                            ProductId = new Guid("271309f9-03ae-4a21-a98c-cb2b911d7996"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(3824),
                            Url = "https://picsum.photos/1000/1000?random=14"
                        },
                        new
                        {
                            Id = new Guid("5bc83b83-cbf0-408f-82d8-f1d37343a8d1"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(3827),
                            ProductId = new Guid("271309f9-03ae-4a21-a98c-cb2b911d7996"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(3828),
                            Url = "https://picsum.photos/1000/1000?random=15"
                        },
                        new
                        {
                            Id = new Guid("465a6ef2-3d54-49c1-9d12-f37ff592d5fa"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(3831),
                            ProductId = new Guid("46e235cb-57a7-4eaa-b8c0-fc8096daee7b"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(3833),
                            Url = "https://picsum.photos/1000/1000?random=16"
                        },
                        new
                        {
                            Id = new Guid("a1eed97c-122b-409e-811d-57e54075a7fc"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(3836),
                            ProductId = new Guid("46e235cb-57a7-4eaa-b8c0-fc8096daee7b"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(3837),
                            Url = "https://picsum.photos/1000/1000?random=17"
                        },
                        new
                        {
                            Id = new Guid("498fdb21-4cfc-4403-aabe-3c3896a0a490"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(3841),
                            ProductId = new Guid("46e235cb-57a7-4eaa-b8c0-fc8096daee7b"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(3843),
                            Url = "https://picsum.photos/1000/1000?random=18"
                        },
                        new
                        {
                            Id = new Guid("7c7b8160-0d5a-4099-b347-e42aa27a8643"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(3846),
                            ProductId = new Guid("425f57d3-5bcd-42cd-a401-9a3a9af83c8f"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(3847),
                            Url = "https://picsum.photos/1000/1000?random=19"
                        },
                        new
                        {
                            Id = new Guid("50064b67-fed0-44ad-80df-a0bb6f60b003"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(3853),
                            ProductId = new Guid("425f57d3-5bcd-42cd-a401-9a3a9af83c8f"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(3855),
                            Url = "https://picsum.photos/1000/1000?random=20"
                        },
                        new
                        {
                            Id = new Guid("f2e572a6-9e50-4add-8fea-7a9bd9413e98"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(3858),
                            ProductId = new Guid("425f57d3-5bcd-42cd-a401-9a3a9af83c8f"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(3859),
                            Url = "https://picsum.photos/1000/1000?random=21"
                        },
                        new
                        {
                            Id = new Guid("e9a8a09e-693c-4936-a445-e6a0c5dfd314"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(3862),
                            ProductId = new Guid("30c4e1a7-3b0f-40e9-be69-903936c22290"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(3864),
                            Url = "https://picsum.photos/1000/1000?random=22"
                        },
                        new
                        {
                            Id = new Guid("86914db0-0f5b-46d5-982a-e65a03ccff10"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(3867),
                            ProductId = new Guid("30c4e1a7-3b0f-40e9-be69-903936c22290"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(3868),
                            Url = "https://picsum.photos/1000/1000?random=23"
                        },
                        new
                        {
                            Id = new Guid("2e28d637-41c7-4cee-9122-ca36d216ebbf"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(3871),
                            ProductId = new Guid("30c4e1a7-3b0f-40e9-be69-903936c22290"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(3872),
                            Url = "https://picsum.photos/1000/1000?random=24"
                        },
                        new
                        {
                            Id = new Guid("77eb52a3-e705-4f8c-b5c8-fe05452fbe27"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(3875),
                            ProductId = new Guid("7f49c05a-d60c-49e6-b804-f3eb5a65522f"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(3876),
                            Url = "https://picsum.photos/1000/1000?random=25"
                        },
                        new
                        {
                            Id = new Guid("b503a738-6b47-4775-b6a8-514c2191e2e3"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(3879),
                            ProductId = new Guid("7f49c05a-d60c-49e6-b804-f3eb5a65522f"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(3881),
                            Url = "https://picsum.photos/1000/1000?random=26"
                        },
                        new
                        {
                            Id = new Guid("2c57004a-280b-4edf-89b4-12ddcbe4d28b"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(3883),
                            ProductId = new Guid("7f49c05a-d60c-49e6-b804-f3eb5a65522f"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(3885),
                            Url = "https://picsum.photos/1000/1000?random=27"
                        },
                        new
                        {
                            Id = new Guid("d238e6f6-5b15-494d-a5c9-e5d9dca8b0fd"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(3891),
                            ProductId = new Guid("ead99f26-fbfb-4b83-bf74-2ef2fd2b4754"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(3892),
                            Url = "https://picsum.photos/1000/1000?random=28"
                        },
                        new
                        {
                            Id = new Guid("4ea1d228-e802-4b34-b449-fd2d85d8c391"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(3895),
                            ProductId = new Guid("ead99f26-fbfb-4b83-bf74-2ef2fd2b4754"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(3897),
                            Url = "https://picsum.photos/1000/1000?random=29"
                        },
                        new
                        {
                            Id = new Guid("1d10d282-f6c7-4a95-9807-9bd1df8a483f"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(3900),
                            ProductId = new Guid("ead99f26-fbfb-4b83-bf74-2ef2fd2b4754"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(3901),
                            Url = "https://picsum.photos/1000/1000?random=30"
                        },
                        new
                        {
                            Id = new Guid("8da5fbac-aecc-4b92-bf01-345ddf484fcc"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(3904),
                            ProductId = new Guid("052e6003-3e9b-43f3-9d59-0656df90989e"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(3906),
                            Url = "https://picsum.photos/1000/1000?random=31"
                        },
                        new
                        {
                            Id = new Guid("950b7228-4cd7-4b0b-86d4-b5a79f04115f"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(3909),
                            ProductId = new Guid("052e6003-3e9b-43f3-9d59-0656df90989e"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(3910),
                            Url = "https://picsum.photos/1000/1000?random=32"
                        },
                        new
                        {
                            Id = new Guid("9f4a8833-2b02-421c-af15-903a5d3c8af7"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(3913),
                            ProductId = new Guid("052e6003-3e9b-43f3-9d59-0656df90989e"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(3914),
                            Url = "https://picsum.photos/1000/1000?random=33"
                        },
                        new
                        {
                            Id = new Guid("0e9f35c5-ba7a-4869-a09c-ecc9ebc49f23"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(3919),
                            ProductId = new Guid("b4143d6b-c302-4215-82e9-c9123d2f2ee5"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(3920),
                            Url = "https://picsum.photos/1000/1000?random=34"
                        },
                        new
                        {
                            Id = new Guid("d8a852a1-5784-4e9a-8e2b-f4367f8d5d04"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(3923),
                            ProductId = new Guid("b4143d6b-c302-4215-82e9-c9123d2f2ee5"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(3925),
                            Url = "https://picsum.photos/1000/1000?random=35"
                        },
                        new
                        {
                            Id = new Guid("8e08155f-8889-4b6a-a618-18b47d13388c"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(3930),
                            ProductId = new Guid("b4143d6b-c302-4215-82e9-c9123d2f2ee5"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(3932),
                            Url = "https://picsum.photos/1000/1000?random=36"
                        },
                        new
                        {
                            Id = new Guid("2f174b02-9432-4fe3-8e37-07b12e867951"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(3935),
                            ProductId = new Guid("41dde13b-dbcc-4f51-a31c-2231f94ddcab"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(3936),
                            Url = "https://picsum.photos/1000/1000?random=37"
                        },
                        new
                        {
                            Id = new Guid("3af328ed-9a3e-446e-a2ce-c0b393d80352"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(3939),
                            ProductId = new Guid("41dde13b-dbcc-4f51-a31c-2231f94ddcab"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(3941),
                            Url = "https://picsum.photos/1000/1000?random=38"
                        },
                        new
                        {
                            Id = new Guid("8ad3623e-fab3-4b3b-aea1-81b3c49e0bbd"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(3944),
                            ProductId = new Guid("41dde13b-dbcc-4f51-a31c-2231f94ddcab"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(3945),
                            Url = "https://picsum.photos/1000/1000?random=39"
                        },
                        new
                        {
                            Id = new Guid("ff484588-ceb8-452c-b23a-d7911a6fef2f"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(3948),
                            ProductId = new Guid("9101df8f-38e3-40de-a46a-8ca66c26222d"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(3949),
                            Url = "https://picsum.photos/1000/1000?random=40"
                        },
                        new
                        {
                            Id = new Guid("37e6d1ef-6b52-4e7a-8a75-affb6d4f9e0a"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(3952),
                            ProductId = new Guid("9101df8f-38e3-40de-a46a-8ca66c26222d"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(3954),
                            Url = "https://picsum.photos/1000/1000?random=41"
                        },
                        new
                        {
                            Id = new Guid("2ff033c1-ce64-43d2-bee7-1df40620370e"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(3957),
                            ProductId = new Guid("9101df8f-38e3-40de-a46a-8ca66c26222d"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(3958),
                            Url = "https://picsum.photos/1000/1000?random=42"
                        },
                        new
                        {
                            Id = new Guid("c5e04b99-2bcf-40c5-91c2-216479ac3add"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(3961),
                            ProductId = new Guid("8b441114-e030-4412-8952-2370a4b7f05a"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(3963),
                            Url = "https://picsum.photos/1000/1000?random=43"
                        },
                        new
                        {
                            Id = new Guid("9a9ffcfc-db72-4a91-866b-2a3c09778a11"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(3967),
                            ProductId = new Guid("8b441114-e030-4412-8952-2370a4b7f05a"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(3969),
                            Url = "https://picsum.photos/1000/1000?random=44"
                        },
                        new
                        {
                            Id = new Guid("b4b532b0-cf7a-4f77-953a-acdc3c47429d"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(3972),
                            ProductId = new Guid("8b441114-e030-4412-8952-2370a4b7f05a"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(3973),
                            Url = "https://picsum.photos/1000/1000?random=45"
                        });
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<Status>("Status")
                        .HasColumnType("status")
                        .HasColumnName("status");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated_at");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_orders");

                    b.HasIndex("UserId")
                        .HasDatabaseName("ix_orders_user_id");

                    b.ToTable("orders", (string)null);
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.OrderItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uuid")
                        .HasColumnName("order_id");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric")
                        .HasColumnName("price");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid")
                        .HasColumnName("product_id");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer")
                        .HasColumnName("quantity");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated_at");

                    b.Property<Guid>("VariantId")
                        .HasColumnType("uuid")
                        .HasColumnName("variant_id");

                    b.HasKey("Id")
                        .HasName("pk_order_items");

                    b.HasIndex("OrderId")
                        .HasDatabaseName("ix_order_items_order_id");

                    b.HasIndex("ProductId")
                        .HasDatabaseName("ix_order_items_product_id");

                    b.HasIndex("VariantId")
                        .HasDatabaseName("ix_order_items_variant_id");

                    b.ToTable("order_items", (string)null);
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uuid")
                        .HasColumnName("category_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric")
                        .HasColumnName("price");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id")
                        .HasName("pk_products");

                    b.HasIndex("CategoryId")
                        .HasDatabaseName("ix_products_category_id");

                    b.ToTable("products", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("bc2983a5-b13c-49a4-9a6c-29c4dad9c355"),
                            CategoryId = new Guid("88499694-269b-4308-a64d-0e903a1f503d"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(3505),
                            Description = "Description for Fashion Product 1",
                            Price = 100m,
                            Title = "Fashion Product 1",
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(3507)
                        },
                        new
                        {
                            Id = new Guid("fedfd1c9-a73a-47bf-a635-370c193fc1df"),
                            CategoryId = new Guid("88499694-269b-4308-a64d-0e903a1f503d"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(3582),
                            Description = "Description for Fashion Product 2",
                            Price = 140m,
                            Title = "Fashion Product 2",
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(3585)
                        },
                        new
                        {
                            Id = new Guid("865770da-89af-4719-b00c-310b57d535e1"),
                            CategoryId = new Guid("88499694-269b-4308-a64d-0e903a1f503d"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(3589),
                            Description = "Description for Fashion Product 3",
                            Price = 120m,
                            Title = "Fashion Product 3",
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(3590)
                        },
                        new
                        {
                            Id = new Guid("bf49c60a-9173-4533-8ca6-182cc7f685eb"),
                            CategoryId = new Guid("88499694-269b-4308-a64d-0e903a1f503d"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(3594),
                            Description = "Description for Fashion Product 4",
                            Price = 200m,
                            Title = "Fashion Product 4",
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(3596)
                        },
                        new
                        {
                            Id = new Guid("271309f9-03ae-4a21-a98c-cb2b911d7996"),
                            CategoryId = new Guid("88499694-269b-4308-a64d-0e903a1f503d"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(3599),
                            Description = "Description for Fashion Product 5",
                            Price = 104m,
                            Title = "Fashion Product 5",
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(3601)
                        },
                        new
                        {
                            Id = new Guid("46e235cb-57a7-4eaa-b8c0-fc8096daee7b"),
                            CategoryId = new Guid("23b984f8-26f7-49a5-82ea-f4f5ddd16eca"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(3610),
                            Description = "Description for Sport Product 1",
                            Price = 200m,
                            Title = "Sport Product 1",
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(3612)
                        },
                        new
                        {
                            Id = new Guid("425f57d3-5bcd-42cd-a401-9a3a9af83c8f"),
                            CategoryId = new Guid("23b984f8-26f7-49a5-82ea-f4f5ddd16eca"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(3615),
                            Description = "Description for Sport Product 2",
                            Price = 240m,
                            Title = "Sport Product 2",
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(3617)
                        },
                        new
                        {
                            Id = new Guid("30c4e1a7-3b0f-40e9-be69-903936c22290"),
                            CategoryId = new Guid("23b984f8-26f7-49a5-82ea-f4f5ddd16eca"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(3620),
                            Description = "Description for Sport Product 3",
                            Price = 154m,
                            Title = "Sport Product 3",
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(3622)
                        },
                        new
                        {
                            Id = new Guid("7f49c05a-d60c-49e6-b804-f3eb5a65522f"),
                            CategoryId = new Guid("23b984f8-26f7-49a5-82ea-f4f5ddd16eca"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(3626),
                            Description = "Description for Sport Product 4",
                            Price = 333m,
                            Title = "Sport Product 4",
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(3628)
                        },
                        new
                        {
                            Id = new Guid("ead99f26-fbfb-4b83-bf74-2ef2fd2b4754"),
                            CategoryId = new Guid("23b984f8-26f7-49a5-82ea-f4f5ddd16eca"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(3632),
                            Description = "Description for Sport Product 5",
                            Price = 205m,
                            Title = "Sport Product 5",
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(3634)
                        },
                        new
                        {
                            Id = new Guid("052e6003-3e9b-43f3-9d59-0656df90989e"),
                            CategoryId = new Guid("e842529a-ac4a-48f4-9377-1786d94dd4e8"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(3638),
                            Description = "Description for Home Product 1",
                            Price = 300m,
                            Title = "Home Product 1",
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(3640)
                        },
                        new
                        {
                            Id = new Guid("b4143d6b-c302-4215-82e9-c9123d2f2ee5"),
                            CategoryId = new Guid("e842529a-ac4a-48f4-9377-1786d94dd4e8"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(3643),
                            Description = "Description for Home Product 2",
                            Price = 32m,
                            Title = "Home Product 2",
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(3645)
                        },
                        new
                        {
                            Id = new Guid("41dde13b-dbcc-4f51-a31c-2231f94ddcab"),
                            CategoryId = new Guid("e842529a-ac4a-48f4-9377-1786d94dd4e8"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(3648),
                            Description = "Description for Home Product 3",
                            Price = 56m,
                            Title = "Home Product 3",
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(3650)
                        },
                        new
                        {
                            Id = new Guid("9101df8f-38e3-40de-a46a-8ca66c26222d"),
                            CategoryId = new Guid("e842529a-ac4a-48f4-9377-1786d94dd4e8"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(3653),
                            Description = "Description for Home Product 4",
                            Price = 143m,
                            Title = "Home Product 4",
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(3655)
                        },
                        new
                        {
                            Id = new Guid("8b441114-e030-4412-8952-2370a4b7f05a"),
                            CategoryId = new Guid("e842529a-ac4a-48f4-9377-1786d94dd4e8"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(3658),
                            Description = "Description for Home Product 5",
                            Price = 3000m,
                            Title = "Home Product 5",
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(3660)
                        });
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.Review", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("comment");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid")
                        .HasColumnName("product_id");

                    b.Property<int>("Rating")
                        .HasColumnType("integer")
                        .HasColumnName("rating");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated_at");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_reviews");

                    b.HasIndex("ProductId")
                        .HasDatabaseName("ix_reviews_product_id");

                    b.HasIndex("UserId", "ProductId")
                        .IsUnique()
                        .HasDatabaseName("ix_reviews_user_id_product_id");

                    b.ToTable("reviews", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("c9e3c10d-b843-434d-bcbe-bfe35e17dd52"),
                            Comment = "Great product!",
                            CreatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(4346),
                            ProductId = new Guid("bc2983a5-b13c-49a4-9a6c-29c4dad9c355"),
                            Rating = 5,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(4348),
                            UserId = new Guid("ad0ad1be-f7e5-47c7-b4c3-c17250cbebab")
                        },
                        new
                        {
                            Id = new Guid("71dd6268-f87a-4816-a5bf-c94769a51473"),
                            Comment = "Really enjoyed this.",
                            CreatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(4355),
                            ProductId = new Guid("425f57d3-5bcd-42cd-a401-9a3a9af83c8f"),
                            Rating = 4,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(4356),
                            UserId = new Guid("760454fa-4af1-4ae6-9b18-ed3aec4be2a9")
                        },
                        new
                        {
                            Id = new Guid("eb57b891-c019-46c9-9c6e-630a79d19787"),
                            Comment = "Good quality, but expensive.",
                            CreatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(4359),
                            ProductId = new Guid("41dde13b-dbcc-4f51-a31c-2231f94ddcab"),
                            Rating = 3,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(4360),
                            UserId = new Guid("ad0ad1be-f7e5-47c7-b4c3-c17250cbebab")
                        },
                        new
                        {
                            Id = new Guid("9aa483ac-872b-468c-af4f-2c1f94beec3a"),
                            Comment = "Loved the design!",
                            CreatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(4363),
                            ProductId = new Guid("bf49c60a-9173-4533-8ca6-182cc7f685eb"),
                            Rating = 4,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(4365),
                            UserId = new Guid("760454fa-4af1-4ae6-9b18-ed3aec4be2a9")
                        },
                        new
                        {
                            Id = new Guid("ca5b7d5d-309c-4973-ad8c-132a4142b5c1"),
                            Comment = "Perfect for my needs!",
                            CreatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(4367),
                            ProductId = new Guid("ead99f26-fbfb-4b83-bf74-2ef2fd2b4754"),
                            Rating = 5,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(4369),
                            UserId = new Guid("611a0192-8b2e-4997-a8c8-59b93674d33b")
                        },
                        new
                        {
                            Id = new Guid("a4438f9a-a573-4967-96c3-6a38fcfb6132"),
                            Comment = "Nice product, quick delivery.",
                            CreatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(4372),
                            ProductId = new Guid("fedfd1c9-a73a-47bf-a635-370c193fc1df"),
                            Rating = 4,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(4374),
                            UserId = new Guid("611a0192-8b2e-4997-a8c8-59b93674d33b")
                        },
                        new
                        {
                            Id = new Guid("c2cd9d37-25d0-4b5d-a336-8214ce83b648"),
                            Comment = "Outstanding quality!",
                            CreatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(4377),
                            ProductId = new Guid("052e6003-3e9b-43f3-9d59-0656df90989e"),
                            Rating = 5,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(4378),
                            UserId = new Guid("611a0192-8b2e-4997-a8c8-59b93674d33b")
                        },
                        new
                        {
                            Id = new Guid("dfc6ffd5-140c-4505-9428-7fe852a93afc"),
                            Comment = "Decent, but expected more.",
                            CreatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(4380),
                            ProductId = new Guid("865770da-89af-4719-b00c-310b57d535e1"),
                            Rating = 3,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(4382),
                            UserId = new Guid("ad0ad1be-f7e5-47c7-b4c3-c17250cbebab")
                        },
                        new
                        {
                            Id = new Guid("38fb4093-965e-4e3f-a7a2-c19103fc239e"),
                            Comment = "Absolutely love this!",
                            CreatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(4384),
                            ProductId = new Guid("8b441114-e030-4412-8952-2370a4b7f05a"),
                            Rating = 5,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(4386),
                            UserId = new Guid("760454fa-4af1-4ae6-9b18-ed3aec4be2a9")
                        },
                        new
                        {
                            Id = new Guid("30a4ff5e-3bd1-429d-9981-adbcd46e2537"),
                            Comment = "Not as described, disappointed.",
                            CreatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(4389),
                            ProductId = new Guid("30c4e1a7-3b0f-40e9-be69-903936c22290"),
                            Rating = 2,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(4391),
                            UserId = new Guid("611a0192-8b2e-4997-a8c8-59b93674d33b")
                        });
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Avatar")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("avatar");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("first_name");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("last_name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("password");

                    b.Property<Role>("Role")
                        .HasColumnType("role")
                        .HasColumnName("role");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id")
                        .HasName("pk_users");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasDatabaseName("ix_users_email");

                    b.ToTable("users", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("ad0ad1be-f7e5-47c7-b4c3-c17250cbebab"),
                            Avatar = "https://picsum.photos/1000/1000?random=150",
                            CreatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 192, DateTimeKind.Local).AddTicks(1143),
                            Email = "admin@mail.com",
                            FirstName = "Admin",
                            LastName = "admin",
                            Password = "4UTu46u/WlG0vRUY032dmw==;xGzf2AkGZ3biLh5zLhDWM3JE+3Lxk8md5hm+MczmfMY=",
                            Role = Role.Admin,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 192, DateTimeKind.Local).AddTicks(1194)
                        },
                        new
                        {
                            Id = new Guid("760454fa-4af1-4ae6-9b18-ed3aec4be2a9"),
                            Avatar = "https://picsum.photos/1000/1000?random=151",
                            CreatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 193, DateTimeKind.Local).AddTicks(5357),
                            Email = "cena@mail.com",
                            FirstName = "John",
                            LastName = "Cena",
                            Password = "nbQ2gFwaaoJ+ChuZum9jhw==;GZY9V+rm5lTtI2hzVucxo+qRUF9I+WwpmW3UFC4o8hw=",
                            Role = Role.Customer,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 193, DateTimeKind.Local).AddTicks(5367)
                        },
                        new
                        {
                            Id = new Guid("611a0192-8b2e-4997-a8c8-59b93674d33b"),
                            Avatar = "https://picsum.photos/1000/1000?random=152",
                            CreatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 194, DateTimeKind.Local).AddTicks(9321),
                            Email = "doe@mail.com",
                            FirstName = "John",
                            LastName = "Doe",
                            Password = "5HWsTxCY7xKJpIPZVWzq/A==;c0iRygi4RSsyycvNDV4kVpNjCR3J/Agcilsi9xX/yhY=",
                            Role = Role.Customer,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 194, DateTimeKind.Local).AddTicks(9326)
                        });
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.Variant", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Color>("Color")
                        .HasColumnType("color")
                        .HasColumnName("color");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid")
                        .HasColumnName("product_id");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer")
                        .HasColumnName("quantity");

                    b.Property<Size>("Size")
                        .HasColumnType("size")
                        .HasColumnName("size");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id")
                        .HasName("pk_variants");

                    b.HasIndex("ProductId")
                        .HasDatabaseName("ix_variants_product_id");

                    b.ToTable("variants", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("edc6c946-ca54-49de-9588-cacfabd96b65"),
                            Color = Color.Red,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(4065),
                            ProductId = new Guid("bc2983a5-b13c-49a4-9a6c-29c4dad9c355"),
                            Quantity = 10,
                            Size = Size.L,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(4067)
                        },
                        new
                        {
                            Id = new Guid("f02656fc-8e71-4391-a9f2-a7aad4ce33bd"),
                            Color = Color.Blue,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(4074),
                            ProductId = new Guid("bc2983a5-b13c-49a4-9a6c-29c4dad9c355"),
                            Quantity = 20,
                            Size = Size.XL,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(4076)
                        },
                        new
                        {
                            Id = new Guid("1228a483-d400-44bf-ab38-6737de33835b"),
                            Color = Color.Black,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(4079),
                            ProductId = new Guid("bc2983a5-b13c-49a4-9a6c-29c4dad9c355"),
                            Quantity = 30,
                            Size = Size.XXXL,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(4080)
                        },
                        new
                        {
                            Id = new Guid("1a268b61-14af-48c3-a373-ce7d9c138f9e"),
                            Color = Color.Red,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(4083),
                            ProductId = new Guid("fedfd1c9-a73a-47bf-a635-370c193fc1df"),
                            Quantity = 20,
                            Size = Size.L,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(4085)
                        },
                        new
                        {
                            Id = new Guid("9860cd50-814a-4969-9578-ba2652a44b98"),
                            Color = Color.Blue,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(4088),
                            ProductId = new Guid("fedfd1c9-a73a-47bf-a635-370c193fc1df"),
                            Quantity = 20,
                            Size = Size.XL,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(4090)
                        },
                        new
                        {
                            Id = new Guid("26b7133e-f33e-4e31-b833-47ff3fd8b995"),
                            Color = Color.Black,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(4094),
                            ProductId = new Guid("fedfd1c9-a73a-47bf-a635-370c193fc1df"),
                            Quantity = 30,
                            Size = Size.XXXL,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(4095)
                        },
                        new
                        {
                            Id = new Guid("ec60f1d9-112f-455a-8c89-ea8b1dd9dc5b"),
                            Color = Color.Red,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(4101),
                            ProductId = new Guid("865770da-89af-4719-b00c-310b57d535e1"),
                            Quantity = 10,
                            Size = Size.L,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(4102)
                        },
                        new
                        {
                            Id = new Guid("24cda3f0-f41d-4c0e-aa90-3b6b442445cf"),
                            Color = Color.Blue,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(4105),
                            ProductId = new Guid("865770da-89af-4719-b00c-310b57d535e1"),
                            Quantity = 20,
                            Size = Size.XL,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(4107)
                        },
                        new
                        {
                            Id = new Guid("e858ce85-2270-4bb3-98db-6733b2be279d"),
                            Color = Color.Black,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(4110),
                            ProductId = new Guid("865770da-89af-4719-b00c-310b57d535e1"),
                            Quantity = 30,
                            Size = Size.XXXL,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(4112)
                        },
                        new
                        {
                            Id = new Guid("99f349df-499f-46ac-bd61-b168f3da7649"),
                            Color = Color.Red,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(4116),
                            ProductId = new Guid("bf49c60a-9173-4533-8ca6-182cc7f685eb"),
                            Quantity = 10,
                            Size = Size.L,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(4117)
                        },
                        new
                        {
                            Id = new Guid("2fea385c-37ee-4b19-a336-9e12745f6778"),
                            Color = Color.Blue,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(4120),
                            ProductId = new Guid("bf49c60a-9173-4533-8ca6-182cc7f685eb"),
                            Quantity = 20,
                            Size = Size.XL,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(4122)
                        },
                        new
                        {
                            Id = new Guid("a2cdea24-7801-4c07-a199-928b8be1b637"),
                            Color = Color.Black,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(4125),
                            ProductId = new Guid("bf49c60a-9173-4533-8ca6-182cc7f685eb"),
                            Quantity = 30,
                            Size = Size.XXXL,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(4126)
                        },
                        new
                        {
                            Id = new Guid("772c5bc9-6339-48de-b8d1-6be7872e4e5a"),
                            Color = Color.Red,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(4130),
                            ProductId = new Guid("271309f9-03ae-4a21-a98c-cb2b911d7996"),
                            Quantity = 10,
                            Size = Size.L,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(4131)
                        },
                        new
                        {
                            Id = new Guid("37a9f6d2-abe8-4226-b98a-c9724fad1f51"),
                            Color = Color.Blue,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(4134),
                            ProductId = new Guid("271309f9-03ae-4a21-a98c-cb2b911d7996"),
                            Quantity = 20,
                            Size = Size.XL,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(4136)
                        },
                        new
                        {
                            Id = new Guid("379c36d5-9c41-4dc2-99a3-0917e9fabdca"),
                            Color = Color.Black,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(4141),
                            ProductId = new Guid("271309f9-03ae-4a21-a98c-cb2b911d7996"),
                            Quantity = 30,
                            Size = Size.XXXL,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(4142)
                        },
                        new
                        {
                            Id = new Guid("5e2aad41-bf11-4c41-8e42-60cc38b5b1b5"),
                            Color = Color.Red,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(4145),
                            ProductId = new Guid("46e235cb-57a7-4eaa-b8c0-fc8096daee7b"),
                            Quantity = 10,
                            Size = Size.L,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(4147)
                        },
                        new
                        {
                            Id = new Guid("b4854c5b-0e94-466f-9082-09920afa0ae8"),
                            Color = Color.Blue,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(4150),
                            ProductId = new Guid("46e235cb-57a7-4eaa-b8c0-fc8096daee7b"),
                            Quantity = 20,
                            Size = Size.XL,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(4152)
                        },
                        new
                        {
                            Id = new Guid("850348bb-bdc5-428e-ad9a-dd4a4ed437f7"),
                            Color = Color.Black,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(4156),
                            ProductId = new Guid("46e235cb-57a7-4eaa-b8c0-fc8096daee7b"),
                            Quantity = 30,
                            Size = Size.XXXL,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(4157)
                        },
                        new
                        {
                            Id = new Guid("ff96a9a2-77fa-4a02-a3bc-ea2b88bb76f9"),
                            Color = Color.Red,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(4161),
                            ProductId = new Guid("425f57d3-5bcd-42cd-a401-9a3a9af83c8f"),
                            Quantity = 10,
                            Size = Size.L,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(4162)
                        },
                        new
                        {
                            Id = new Guid("6cc47e02-03db-455a-9506-4ce9327b5cbe"),
                            Color = Color.Blue,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(4165),
                            ProductId = new Guid("425f57d3-5bcd-42cd-a401-9a3a9af83c8f"),
                            Quantity = 20,
                            Size = Size.XL,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(4167)
                        },
                        new
                        {
                            Id = new Guid("3e4d79f5-2844-4744-9c4d-035c539e51b7"),
                            Color = Color.Black,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(4170),
                            ProductId = new Guid("425f57d3-5bcd-42cd-a401-9a3a9af83c8f"),
                            Quantity = 30,
                            Size = Size.XXXL,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(4171)
                        },
                        new
                        {
                            Id = new Guid("1b59c5e5-1ec0-41a0-ac46-0e328826d0a2"),
                            Color = Color.Red,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(4174),
                            ProductId = new Guid("30c4e1a7-3b0f-40e9-be69-903936c22290"),
                            Quantity = 10,
                            Size = Size.L,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(4176)
                        },
                        new
                        {
                            Id = new Guid("8308c842-4a3a-4be1-8518-e31fde3b499c"),
                            Color = Color.Blue,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(4181),
                            ProductId = new Guid("30c4e1a7-3b0f-40e9-be69-903936c22290"),
                            Quantity = 20,
                            Size = Size.XL,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(4182)
                        },
                        new
                        {
                            Id = new Guid("4dd078cf-22c6-4345-9553-2fe60427c5ce"),
                            Color = Color.Black,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(4186),
                            ProductId = new Guid("30c4e1a7-3b0f-40e9-be69-903936c22290"),
                            Quantity = 30,
                            Size = Size.XXXL,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(4187)
                        },
                        new
                        {
                            Id = new Guid("851c8219-53bb-4575-86d3-e24bc7c61b3d"),
                            Color = Color.Red,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(4190),
                            ProductId = new Guid("7f49c05a-d60c-49e6-b804-f3eb5a65522f"),
                            Quantity = 10,
                            Size = Size.L,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(4192)
                        },
                        new
                        {
                            Id = new Guid("3ea43075-1e66-4e34-8389-86f2dc93cbb4"),
                            Color = Color.Blue,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(4195),
                            ProductId = new Guid("7f49c05a-d60c-49e6-b804-f3eb5a65522f"),
                            Quantity = 20,
                            Size = Size.XL,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(4197)
                        },
                        new
                        {
                            Id = new Guid("bf099820-cec2-4ec4-bc80-5ae416f002bb"),
                            Color = Color.Black,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(4200),
                            ProductId = new Guid("7f49c05a-d60c-49e6-b804-f3eb5a65522f"),
                            Quantity = 30,
                            Size = Size.XXXL,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(4201)
                        },
                        new
                        {
                            Id = new Guid("86443275-b7e0-401d-ba98-adfd69fe54e4"),
                            Color = Color.Red,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(4204),
                            ProductId = new Guid("ead99f26-fbfb-4b83-bf74-2ef2fd2b4754"),
                            Quantity = 10,
                            Size = Size.L,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(4206)
                        },
                        new
                        {
                            Id = new Guid("a933f209-7ac4-41e2-9ec5-150fb283769e"),
                            Color = Color.Blue,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(4209),
                            ProductId = new Guid("ead99f26-fbfb-4b83-bf74-2ef2fd2b4754"),
                            Quantity = 20,
                            Size = Size.XL,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(4210)
                        },
                        new
                        {
                            Id = new Guid("e60e3cbd-8028-4902-b9d7-cefc297e0434"),
                            Color = Color.Black,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(4214),
                            ProductId = new Guid("ead99f26-fbfb-4b83-bf74-2ef2fd2b4754"),
                            Quantity = 30,
                            Size = Size.XXXL,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(4215)
                        },
                        new
                        {
                            Id = new Guid("21759c8e-cc17-4252-80e0-11b43592b8c7"),
                            Color = Color.Red,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(4220),
                            ProductId = new Guid("052e6003-3e9b-43f3-9d59-0656df90989e"),
                            Quantity = 10,
                            Size = Size.L,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(4222)
                        },
                        new
                        {
                            Id = new Guid("ef0d410b-7a6e-4043-8928-c63c9ceb4498"),
                            Color = Color.Blue,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(4225),
                            ProductId = new Guid("052e6003-3e9b-43f3-9d59-0656df90989e"),
                            Quantity = 20,
                            Size = Size.XL,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(4226)
                        },
                        new
                        {
                            Id = new Guid("f25fe360-c4fb-4c28-94b9-425e8c23deab"),
                            Color = Color.Black,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(4230),
                            ProductId = new Guid("052e6003-3e9b-43f3-9d59-0656df90989e"),
                            Quantity = 30,
                            Size = Size.XXXL,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(4232)
                        },
                        new
                        {
                            Id = new Guid("07677433-f8e7-4520-9cc5-927537383019"),
                            Color = Color.Red,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(4237),
                            ProductId = new Guid("b4143d6b-c302-4215-82e9-c9123d2f2ee5"),
                            Quantity = 10,
                            Size = Size.L,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(4238)
                        },
                        new
                        {
                            Id = new Guid("b579b676-cc66-44fd-b5ca-f27da43118e9"),
                            Color = Color.Blue,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(4241),
                            ProductId = new Guid("b4143d6b-c302-4215-82e9-c9123d2f2ee5"),
                            Quantity = 20,
                            Size = Size.XL,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(4243)
                        },
                        new
                        {
                            Id = new Guid("542a6d72-05a4-4a0f-a1c0-e9edb7a12141"),
                            Color = Color.Black,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(4246),
                            ProductId = new Guid("b4143d6b-c302-4215-82e9-c9123d2f2ee5"),
                            Quantity = 30,
                            Size = Size.XXXL,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(4247)
                        },
                        new
                        {
                            Id = new Guid("a7234533-8ef5-413c-838e-d92a0cdd3e9c"),
                            Color = Color.Red,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(4250),
                            ProductId = new Guid("41dde13b-dbcc-4f51-a31c-2231f94ddcab"),
                            Quantity = 10,
                            Size = Size.L,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(4252)
                        },
                        new
                        {
                            Id = new Guid("491dc0fa-ff52-4b52-bf5b-e9e19d82fa93"),
                            Color = Color.Blue,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(4255),
                            ProductId = new Guid("41dde13b-dbcc-4f51-a31c-2231f94ddcab"),
                            Quantity = 20,
                            Size = Size.XL,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(4257)
                        },
                        new
                        {
                            Id = new Guid("24bcffdc-4f92-42b1-81ed-17db71e4b8f2"),
                            Color = Color.Black,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(4262),
                            ProductId = new Guid("41dde13b-dbcc-4f51-a31c-2231f94ddcab"),
                            Quantity = 30,
                            Size = Size.XXXL,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(4263)
                        },
                        new
                        {
                            Id = new Guid("c4908643-d8a7-4660-9fb0-8ef682805e4e"),
                            Color = Color.Red,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(4266),
                            ProductId = new Guid("9101df8f-38e3-40de-a46a-8ca66c26222d"),
                            Quantity = 10,
                            Size = Size.L,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(4268)
                        },
                        new
                        {
                            Id = new Guid("4c22b11d-6704-429a-ae91-6658aecc5cba"),
                            Color = Color.Blue,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(4271),
                            ProductId = new Guid("9101df8f-38e3-40de-a46a-8ca66c26222d"),
                            Quantity = 20,
                            Size = Size.XL,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(4272)
                        },
                        new
                        {
                            Id = new Guid("0c0545d5-ad12-4a9b-9e8c-70036875643a"),
                            Color = Color.Black,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(4275),
                            ProductId = new Guid("9101df8f-38e3-40de-a46a-8ca66c26222d"),
                            Quantity = 30,
                            Size = Size.XXXL,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(4277)
                        },
                        new
                        {
                            Id = new Guid("301cc04d-3618-4a60-9f74-a34743f3c0fa"),
                            Color = Color.Red,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(4280),
                            ProductId = new Guid("8b441114-e030-4412-8952-2370a4b7f05a"),
                            Quantity = 10,
                            Size = Size.L,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(4281)
                        },
                        new
                        {
                            Id = new Guid("506f6fb7-c219-4002-9d3e-fa08ad44d0bb"),
                            Color = Color.Blue,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(4284),
                            ProductId = new Guid("8b441114-e030-4412-8952-2370a4b7f05a"),
                            Quantity = 20,
                            Size = Size.XL,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(4286)
                        },
                        new
                        {
                            Id = new Guid("1df4e8bc-62d6-4d73-95e0-904fc80df670"),
                            Color = Color.Black,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(4289),
                            ProductId = new Guid("8b441114-e030-4412-8952-2370a4b7f05a"),
                            Quantity = 30,
                            Size = Size.XXXL,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 13, 36, 196, DateTimeKind.Local).AddTicks(4290)
                        });
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.Address", b =>
                {
                    b.HasOne("EcommerceAPI.Core.src.Entity.User", null)
                        .WithMany("Addresses")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_addresses_users_user_id");
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.Image", b =>
                {
                    b.HasOne("EcommerceAPI.Core.src.Entity.Product", null)
                        .WithMany("Images")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_images_products_product_id");
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.Order", b =>
                {
                    b.HasOne("EcommerceAPI.Core.src.Entity.User", null)
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_orders_users_user_id");
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.OrderItem", b =>
                {
                    b.HasOne("EcommerceAPI.Core.src.Entity.Order", null)
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_order_items_orders_order_id");

                    b.HasOne("EcommerceAPI.Core.src.Entity.Product", null)
                        .WithMany("OrderItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_order_items_products_product_id");

                    b.HasOne("EcommerceAPI.Core.src.Entity.Variant", null)
                        .WithMany("OrderItems")
                        .HasForeignKey("VariantId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_order_items_variants_variant_id");
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.Product", b =>
                {
                    b.HasOne("EcommerceAPI.Core.src.Entity.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_products_categories_category_id");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.Review", b =>
                {
                    b.HasOne("EcommerceAPI.Core.src.Entity.Product", null)
                        .WithMany("Reviews")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_reviews_products_product_id");

                    b.HasOne("EcommerceAPI.Core.src.Entity.User", null)
                        .WithMany("Reviews")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_reviews_users_user_id");
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.Variant", b =>
                {
                    b.HasOne("EcommerceAPI.Core.src.Entity.Product", null)
                        .WithMany("Variants")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_variants_products_product_id");
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.Order", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.Product", b =>
                {
                    b.Navigation("Images");

                    b.Navigation("OrderItems");

                    b.Navigation("Reviews");

                    b.Navigation("Variants");
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.User", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("Orders");

                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.Variant", b =>
                {
                    b.Navigation("OrderItems");
                });
#pragma warning restore 612, 618
        }
    }
}
