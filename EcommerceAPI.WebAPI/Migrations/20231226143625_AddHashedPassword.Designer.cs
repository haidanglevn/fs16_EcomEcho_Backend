// <auto-generated />
using System;
using EcommerceAPI.Core.src.Entity;
using EcommerceAPI.WebAPI.src.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace EcommerceAPI.WebAPI.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20231226143625_AddHashedPassword")]
    partial class AddHashedPassword
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresEnum(modelBuilder, "color", new[] { "black", "silver", "gray", "white", "maroon", "red", "purple", "fuchsia", "green", "lime", "olive", "yellow", "navy", "blue", "teal", "aqua", "orange", "alice_blue", "coral", "dark_blue" });
            NpgsqlModelBuilderExtensions.HasPostgresEnum(modelBuilder, "role", new[] { "customer", "admin" });
            NpgsqlModelBuilderExtensions.HasPostgresEnum(modelBuilder, "size", new[] { "xs", "s", "m", "l", "xl", "xxl", "xxxl" });
            NpgsqlModelBuilderExtensions.HasPostgresEnum(modelBuilder, "status", new[] { "pending", "shipping", "received" });
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.Address", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("city");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("country");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("postal_code");

                    b.Property<string>("State")
                        .HasColumnType("text")
                        .HasColumnName("state");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("street");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated_at");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_addresses");

                    b.HasIndex("UserId")
                        .HasDatabaseName("ix_addresses_user_id");

                    b.ToTable("addresses", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("a1a1a1a1-1234-1234-1234-1234567890ab"),
                            City = "Helsinki",
                            Country = "Finland",
                            CreatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(4566),
                            PostalCode = "00100",
                            Street = "Street 1",
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(4569),
                            UserId = new Guid("ad0ad1be-f7e5-47c7-b4c3-c17250cbebab")
                        },
                        new
                        {
                            Id = new Guid("a2a2a2a2-1234-1234-1234-1234567890ab"),
                            City = "Helsinki",
                            Country = "Finland",
                            CreatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(4576),
                            PostalCode = "00200",
                            Street = "Street 2",
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(4578),
                            UserId = new Guid("ad0ad1be-f7e5-47c7-b4c3-c17250cbebab")
                        },
                        new
                        {
                            Id = new Guid("a3a3a3a3-1234-1234-1234-1234567890ab"),
                            City = "Helsinki",
                            Country = "Finland",
                            CreatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(4582),
                            PostalCode = "00300",
                            Street = "Street 3",
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(4584),
                            UserId = new Guid("ad0ad1be-f7e5-47c7-b4c3-c17250cbebab")
                        },
                        new
                        {
                            Id = new Guid("b1b1b1b1-1234-1234-1234-1234567890ab"),
                            City = "Espoo",
                            Country = "Finland",
                            CreatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(4587),
                            PostalCode = "02100",
                            Street = "Street 1",
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(4590),
                            UserId = new Guid("760454fa-4af1-4ae6-9b18-ed3aec4be2a9")
                        },
                        new
                        {
                            Id = new Guid("b2b2b2b2-1234-1234-1234-1234567890ab"),
                            City = "Espoo",
                            Country = "Finland",
                            CreatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(4593),
                            PostalCode = "02100",
                            Street = "Street 2",
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(4595),
                            UserId = new Guid("760454fa-4af1-4ae6-9b18-ed3aec4be2a9")
                        },
                        new
                        {
                            Id = new Guid("b3b3b3b3-1234-1234-1234-1234567890ab"),
                            City = "Espoo",
                            Country = "Finland",
                            CreatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(4599),
                            PostalCode = "02100",
                            Street = "Street 3",
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(4601),
                            UserId = new Guid("760454fa-4af1-4ae6-9b18-ed3aec4be2a9")
                        },
                        new
                        {
                            Id = new Guid("c1c1c1c1-1234-1234-1234-1234567890ab"),
                            City = "Tampere",
                            Country = "Finland",
                            CreatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(4605),
                            PostalCode = "33100",
                            Street = "Street 3",
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(4607),
                            UserId = new Guid("611a0192-8b2e-4997-a8c8-59b93674d33b")
                        },
                        new
                        {
                            Id = new Guid("c2c2c2c2-1234-1234-1234-1234567890ab"),
                            City = "Tampere",
                            Country = "Finland",
                            CreatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(4610),
                            PostalCode = "33100",
                            Street = "Street 4",
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(4612),
                            UserId = new Guid("611a0192-8b2e-4997-a8c8-59b93674d33b")
                        },
                        new
                        {
                            Id = new Guid("c3c3c3c3-1234-1234-1234-1234567890ab"),
                            City = "Tampere",
                            Country = "Finland",
                            CreatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(4616),
                            PostalCode = "33100",
                            Street = "Street 6",
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(4618),
                            UserId = new Guid("611a0192-8b2e-4997-a8c8-59b93674d33b")
                        });
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("image");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id")
                        .HasName("pk_categories");

                    b.ToTable("categories", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("88499694-269b-4308-a64d-0e903a1f503d"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(3382),
                            Image = "https://picsum.photos/1000/1000?random=99",
                            Name = "Fashion",
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(3386)
                        },
                        new
                        {
                            Id = new Guid("23b984f8-26f7-49a5-82ea-f4f5ddd16eca"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(3392),
                            Image = "https://picsum.photos/1000/1000?random=100",
                            Name = "Sport",
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(3395)
                        },
                        new
                        {
                            Id = new Guid("e842529a-ac4a-48f4-9377-1786d94dd4e8"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(3398),
                            Image = "https://picsum.photos/1000/1000?random=101",
                            Name = "Home",
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(3400)
                        });
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.Image", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid")
                        .HasColumnName("product_id");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated_at");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("url");

                    b.HasKey("Id")
                        .HasName("pk_images");

                    b.HasIndex("ProductId")
                        .HasDatabaseName("ix_images_product_id");

                    b.ToTable("images", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("6d123bea-1fbf-4c8a-81ae-6b4db0b026b7"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(3575),
                            ProductId = new Guid("bc2983a5-b13c-49a4-9a6c-29c4dad9c355"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(3577),
                            Url = "https://picsum.photos/1000/1000?random=1"
                        },
                        new
                        {
                            Id = new Guid("537fb337-90e7-4db3-90dc-2eb64d68c9af"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(3599),
                            ProductId = new Guid("bc2983a5-b13c-49a4-9a6c-29c4dad9c355"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(3601),
                            Url = "https://picsum.photos/1000/1000?random=2"
                        },
                        new
                        {
                            Id = new Guid("92422218-d4d1-4cdf-9742-f1d5dc78a217"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(3605),
                            ProductId = new Guid("bc2983a5-b13c-49a4-9a6c-29c4dad9c355"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(3607),
                            Url = "https://picsum.photos/1000/1000?random=3"
                        },
                        new
                        {
                            Id = new Guid("ca2e59ab-6950-448b-8fcb-cec319367f29"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(3611),
                            ProductId = new Guid("fedfd1c9-a73a-47bf-a635-370c193fc1df"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(3613),
                            Url = "https://picsum.photos/1000/1000?random=4"
                        },
                        new
                        {
                            Id = new Guid("12eed719-04d8-4a85-b833-45461162b2e9"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(3617),
                            ProductId = new Guid("fedfd1c9-a73a-47bf-a635-370c193fc1df"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(3619),
                            Url = "https://picsum.photos/1000/1000?random=5"
                        },
                        new
                        {
                            Id = new Guid("38b105fd-7011-4bb9-be89-538fcd762767"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(3624),
                            ProductId = new Guid("fedfd1c9-a73a-47bf-a635-370c193fc1df"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(3626),
                            Url = "https://picsum.photos/1000/1000?random=6"
                        },
                        new
                        {
                            Id = new Guid("eee8592f-d768-4368-9a34-6779c76fa18b"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(3634),
                            ProductId = new Guid("865770da-89af-4719-b00c-310b57d535e1"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(3637),
                            Url = "https://picsum.photos/1000/1000?random=7"
                        },
                        new
                        {
                            Id = new Guid("f8c974fe-b262-4a72-a2f9-7c6c59da4254"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(3641),
                            ProductId = new Guid("865770da-89af-4719-b00c-310b57d535e1"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(3643),
                            Url = "https://picsum.photos/1000/1000?random=8"
                        },
                        new
                        {
                            Id = new Guid("2125957f-3e0a-4dcb-94d0-3ea4c2a4e3f4"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(3647),
                            ProductId = new Guid("865770da-89af-4719-b00c-310b57d535e1"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(3649),
                            Url = "https://picsum.photos/1000/1000?random=9"
                        },
                        new
                        {
                            Id = new Guid("0b1f5ba8-b4c0-491d-b4c3-a5810b213588"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(3654),
                            ProductId = new Guid("bf49c60a-9173-4533-8ca6-182cc7f685eb"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(3656),
                            Url = "https://picsum.photos/1000/1000?random=10"
                        },
                        new
                        {
                            Id = new Guid("887f0c8e-a4fa-4d50-a16c-4d860f839fb6"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(3660),
                            ProductId = new Guid("bf49c60a-9173-4533-8ca6-182cc7f685eb"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(3662),
                            Url = "https://picsum.photos/1000/1000?random=11"
                        },
                        new
                        {
                            Id = new Guid("83117100-fa5f-4ce8-8ad0-246a50585c91"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(3665),
                            ProductId = new Guid("bf49c60a-9173-4533-8ca6-182cc7f685eb"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(3668),
                            Url = "https://picsum.photos/1000/1000?random=12"
                        },
                        new
                        {
                            Id = new Guid("2a614741-6a57-4aa3-9c83-7b7d424f9852"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(3671),
                            ProductId = new Guid("271309f9-03ae-4a21-a98c-cb2b911d7996"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(3673),
                            Url = "https://picsum.photos/1000/1000?random=13"
                        },
                        new
                        {
                            Id = new Guid("92166e50-71b4-4319-8d85-c2d198f1261c"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(3677),
                            ProductId = new Guid("271309f9-03ae-4a21-a98c-cb2b911d7996"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(3679),
                            Url = "https://picsum.photos/1000/1000?random=14"
                        },
                        new
                        {
                            Id = new Guid("f25e7543-49a4-4d74-8352-66c12163ade5"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(3686),
                            ProductId = new Guid("271309f9-03ae-4a21-a98c-cb2b911d7996"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(3688),
                            Url = "https://picsum.photos/1000/1000?random=15"
                        },
                        new
                        {
                            Id = new Guid("fc115cf7-20e9-437d-a25d-00d5f68f9aa3"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(3692),
                            ProductId = new Guid("46e235cb-57a7-4eaa-b8c0-fc8096daee7b"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(3694),
                            Url = "https://picsum.photos/1000/1000?random=16"
                        },
                        new
                        {
                            Id = new Guid("6d47de4b-c598-40fc-8980-91324b59290e"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(3698),
                            ProductId = new Guid("46e235cb-57a7-4eaa-b8c0-fc8096daee7b"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(3700),
                            Url = "https://picsum.photos/1000/1000?random=17"
                        },
                        new
                        {
                            Id = new Guid("7539b60a-79cc-4cd9-9b77-2b7c5c01d6b4"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(3706),
                            ProductId = new Guid("46e235cb-57a7-4eaa-b8c0-fc8096daee7b"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(3708),
                            Url = "https://picsum.photos/1000/1000?random=18"
                        },
                        new
                        {
                            Id = new Guid("204f343e-4ce5-4963-b1db-0cb0cbc4097d"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(3712),
                            ProductId = new Guid("425f57d3-5bcd-42cd-a401-9a3a9af83c8f"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(3714),
                            Url = "https://picsum.photos/1000/1000?random=19"
                        },
                        new
                        {
                            Id = new Guid("091189d3-0dc7-455c-8d38-f65e4c3fda99"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(3718),
                            ProductId = new Guid("425f57d3-5bcd-42cd-a401-9a3a9af83c8f"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(3720),
                            Url = "https://picsum.photos/1000/1000?random=20"
                        },
                        new
                        {
                            Id = new Guid("8be59bf3-d516-4538-9a5c-f63df401f96f"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(3724),
                            ProductId = new Guid("425f57d3-5bcd-42cd-a401-9a3a9af83c8f"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(3726),
                            Url = "https://picsum.photos/1000/1000?random=21"
                        },
                        new
                        {
                            Id = new Guid("6f4222d0-f00b-4564-a81e-5b916ad70585"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(3730),
                            ProductId = new Guid("30c4e1a7-3b0f-40e9-be69-903936c22290"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(3732),
                            Url = "https://picsum.photos/1000/1000?random=22"
                        },
                        new
                        {
                            Id = new Guid("94bcd4d9-0a9e-4740-93a2-72840c00f6bb"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(3739),
                            ProductId = new Guid("30c4e1a7-3b0f-40e9-be69-903936c22290"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(3741),
                            Url = "https://picsum.photos/1000/1000?random=23"
                        },
                        new
                        {
                            Id = new Guid("7fd0cfb8-ddab-42de-be44-a06ef6ccb47d"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(3842),
                            ProductId = new Guid("30c4e1a7-3b0f-40e9-be69-903936c22290"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(3844),
                            Url = "https://picsum.photos/1000/1000?random=24"
                        },
                        new
                        {
                            Id = new Guid("69488eeb-4d4e-4609-b9f3-ea93fcc7b090"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(3849),
                            ProductId = new Guid("7f49c05a-d60c-49e6-b804-f3eb5a65522f"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(3851),
                            Url = "https://picsum.photos/1000/1000?random=25"
                        },
                        new
                        {
                            Id = new Guid("874461e1-87a2-4f3e-ace2-6719b934452a"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(3855),
                            ProductId = new Guid("7f49c05a-d60c-49e6-b804-f3eb5a65522f"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(3857),
                            Url = "https://picsum.photos/1000/1000?random=26"
                        },
                        new
                        {
                            Id = new Guid("a90106c4-ceaf-4c74-9e38-5ca6320f6b1e"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(3860),
                            ProductId = new Guid("7f49c05a-d60c-49e6-b804-f3eb5a65522f"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(3862),
                            Url = "https://picsum.photos/1000/1000?random=27"
                        },
                        new
                        {
                            Id = new Guid("45df4140-40b8-444a-bf2c-7698b62830a0"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(3866),
                            ProductId = new Guid("ead99f26-fbfb-4b83-bf74-2ef2fd2b4754"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(3869),
                            Url = "https://picsum.photos/1000/1000?random=28"
                        },
                        new
                        {
                            Id = new Guid("e2193852-d20d-4b0f-abaf-e4cb0e3bd6ee"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(3872),
                            ProductId = new Guid("ead99f26-fbfb-4b83-bf74-2ef2fd2b4754"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(3874),
                            Url = "https://picsum.photos/1000/1000?random=29"
                        },
                        new
                        {
                            Id = new Guid("b8a2db0b-0998-433a-a12a-43fb2cf063f7"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(3878),
                            ProductId = new Guid("ead99f26-fbfb-4b83-bf74-2ef2fd2b4754"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(3880),
                            Url = "https://picsum.photos/1000/1000?random=30"
                        },
                        new
                        {
                            Id = new Guid("4d36fab7-0b69-42b8-993f-f963496ce9fe"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(3887),
                            ProductId = new Guid("052e6003-3e9b-43f3-9d59-0656df90989e"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(3889),
                            Url = "https://picsum.photos/1000/1000?random=31"
                        },
                        new
                        {
                            Id = new Guid("217d178c-37b3-4aa2-9f90-bc69c5f6ca6f"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(3893),
                            ProductId = new Guid("052e6003-3e9b-43f3-9d59-0656df90989e"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(3895),
                            Url = "https://picsum.photos/1000/1000?random=32"
                        },
                        new
                        {
                            Id = new Guid("f3a54208-7498-4494-a092-333412def51f"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(3899),
                            ProductId = new Guid("052e6003-3e9b-43f3-9d59-0656df90989e"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(3901),
                            Url = "https://picsum.photos/1000/1000?random=33"
                        },
                        new
                        {
                            Id = new Guid("c24f24a6-5008-4a82-a4e1-36b1be354382"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(3907),
                            ProductId = new Guid("b4143d6b-c302-4215-82e9-c9123d2f2ee5"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(3909),
                            Url = "https://picsum.photos/1000/1000?random=34"
                        },
                        new
                        {
                            Id = new Guid("d9cf9b62-0e3e-4f6e-b22b-d64a0e4e8ed7"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(3913),
                            ProductId = new Guid("b4143d6b-c302-4215-82e9-c9123d2f2ee5"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(3915),
                            Url = "https://picsum.photos/1000/1000?random=35"
                        },
                        new
                        {
                            Id = new Guid("756c9bb1-b165-47e2-a7e7-093dd96c675d"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(3919),
                            ProductId = new Guid("b4143d6b-c302-4215-82e9-c9123d2f2ee5"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(3921),
                            Url = "https://picsum.photos/1000/1000?random=36"
                        },
                        new
                        {
                            Id = new Guid("ab40144e-563b-47dd-8468-b6051b8a0cef"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(3925),
                            ProductId = new Guid("41dde13b-dbcc-4f51-a31c-2231f94ddcab"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(3927),
                            Url = "https://picsum.photos/1000/1000?random=37"
                        },
                        new
                        {
                            Id = new Guid("de2c5c7e-679b-4b71-bf3c-3cd87fafcad6"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(3930),
                            ProductId = new Guid("41dde13b-dbcc-4f51-a31c-2231f94ddcab"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(3932),
                            Url = "https://picsum.photos/1000/1000?random=38"
                        },
                        new
                        {
                            Id = new Guid("1d47d935-c1df-431a-bb02-a1bc61a6fdd3"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(3939),
                            ProductId = new Guid("41dde13b-dbcc-4f51-a31c-2231f94ddcab"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(3941),
                            Url = "https://picsum.photos/1000/1000?random=39"
                        },
                        new
                        {
                            Id = new Guid("65b7a6a4-afab-4354-94e0-8eeadd935404"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(3945),
                            ProductId = new Guid("9101df8f-38e3-40de-a46a-8ca66c26222d"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(3947),
                            Url = "https://picsum.photos/1000/1000?random=40"
                        },
                        new
                        {
                            Id = new Guid("588e56f4-30a3-4586-a304-94930f934284"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(3951),
                            ProductId = new Guid("9101df8f-38e3-40de-a46a-8ca66c26222d"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(3953),
                            Url = "https://picsum.photos/1000/1000?random=41"
                        },
                        new
                        {
                            Id = new Guid("79605568-d2ea-401e-ba38-c18e19cba37c"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(3957),
                            ProductId = new Guid("9101df8f-38e3-40de-a46a-8ca66c26222d"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(3959),
                            Url = "https://picsum.photos/1000/1000?random=42"
                        },
                        new
                        {
                            Id = new Guid("3b83cf44-3426-41c9-af7d-202c0f26e50a"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(3963),
                            ProductId = new Guid("8b441114-e030-4412-8952-2370a4b7f05a"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(3965),
                            Url = "https://picsum.photos/1000/1000?random=43"
                        },
                        new
                        {
                            Id = new Guid("63376c58-a131-409b-bb7e-7b1e68627e16"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(3968),
                            ProductId = new Guid("8b441114-e030-4412-8952-2370a4b7f05a"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(3971),
                            Url = "https://picsum.photos/1000/1000?random=44"
                        },
                        new
                        {
                            Id = new Guid("dc4db791-0435-483f-8291-407c065e71c3"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(3974),
                            ProductId = new Guid("8b441114-e030-4412-8952-2370a4b7f05a"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(3976),
                            Url = "https://picsum.photos/1000/1000?random=45"
                        });
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<Status>("Status")
                        .HasColumnType("status")
                        .HasColumnName("status");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated_at");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_orders");

                    b.HasIndex("UserId")
                        .HasDatabaseName("ix_orders_user_id");

                    b.ToTable("orders", (string)null);
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.OrderItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uuid")
                        .HasColumnName("order_id");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric")
                        .HasColumnName("price");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid")
                        .HasColumnName("product_id");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer")
                        .HasColumnName("quantity");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id")
                        .HasName("pk_order_items");

                    b.HasIndex("OrderId")
                        .HasDatabaseName("ix_order_items_order_id");

                    b.HasIndex("ProductId")
                        .HasDatabaseName("ix_order_items_product_id");

                    b.ToTable("order_items", (string)null);
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uuid")
                        .HasColumnName("category_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric")
                        .HasColumnName("price");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id")
                        .HasName("pk_products");

                    b.HasIndex("CategoryId")
                        .HasDatabaseName("ix_products_category_id");

                    b.ToTable("products", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("bc2983a5-b13c-49a4-9a6c-29c4dad9c355"),
                            CategoryId = new Guid("88499694-269b-4308-a64d-0e903a1f503d"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(3442),
                            Description = "Description for Fashion Product 1",
                            Price = 100m,
                            Title = "Fashion Product 1",
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(3444)
                        },
                        new
                        {
                            Id = new Guid("fedfd1c9-a73a-47bf-a635-370c193fc1df"),
                            CategoryId = new Guid("88499694-269b-4308-a64d-0e903a1f503d"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(3451),
                            Description = "Description for Fashion Product 2",
                            Price = 140m,
                            Title = "Fashion Product 2",
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(3453)
                        },
                        new
                        {
                            Id = new Guid("865770da-89af-4719-b00c-310b57d535e1"),
                            CategoryId = new Guid("88499694-269b-4308-a64d-0e903a1f503d"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(3456),
                            Description = "Description for Fashion Product 3",
                            Price = 120m,
                            Title = "Fashion Product 3",
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(3458)
                        },
                        new
                        {
                            Id = new Guid("bf49c60a-9173-4533-8ca6-182cc7f685eb"),
                            CategoryId = new Guid("88499694-269b-4308-a64d-0e903a1f503d"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(3463),
                            Description = "Description for Fashion Product 4",
                            Price = 200m,
                            Title = "Fashion Product 4",
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(3465)
                        },
                        new
                        {
                            Id = new Guid("271309f9-03ae-4a21-a98c-cb2b911d7996"),
                            CategoryId = new Guid("88499694-269b-4308-a64d-0e903a1f503d"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(3468),
                            Description = "Description for Fashion Product 5",
                            Price = 104m,
                            Title = "Fashion Product 5",
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(3470)
                        },
                        new
                        {
                            Id = new Guid("46e235cb-57a7-4eaa-b8c0-fc8096daee7b"),
                            CategoryId = new Guid("23b984f8-26f7-49a5-82ea-f4f5ddd16eca"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(3476),
                            Description = "Description for Sport Product 1",
                            Price = 200m,
                            Title = "Sport Product 1",
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(3478)
                        },
                        new
                        {
                            Id = new Guid("425f57d3-5bcd-42cd-a401-9a3a9af83c8f"),
                            CategoryId = new Guid("23b984f8-26f7-49a5-82ea-f4f5ddd16eca"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(3481),
                            Description = "Description for Sport Product 2",
                            Price = 240m,
                            Title = "Sport Product 2",
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(3483)
                        },
                        new
                        {
                            Id = new Guid("30c4e1a7-3b0f-40e9-be69-903936c22290"),
                            CategoryId = new Guid("23b984f8-26f7-49a5-82ea-f4f5ddd16eca"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(3487),
                            Description = "Description for Sport Product 3",
                            Price = 154m,
                            Title = "Sport Product 3",
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(3489)
                        },
                        new
                        {
                            Id = new Guid("7f49c05a-d60c-49e6-b804-f3eb5a65522f"),
                            CategoryId = new Guid("23b984f8-26f7-49a5-82ea-f4f5ddd16eca"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(3492),
                            Description = "Description for Sport Product 4",
                            Price = 333m,
                            Title = "Sport Product 4",
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(3494)
                        },
                        new
                        {
                            Id = new Guid("ead99f26-fbfb-4b83-bf74-2ef2fd2b4754"),
                            CategoryId = new Guid("23b984f8-26f7-49a5-82ea-f4f5ddd16eca"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(3499),
                            Description = "Description for Sport Product 5",
                            Price = 205m,
                            Title = "Sport Product 5",
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(3501)
                        },
                        new
                        {
                            Id = new Guid("052e6003-3e9b-43f3-9d59-0656df90989e"),
                            CategoryId = new Guid("e842529a-ac4a-48f4-9377-1786d94dd4e8"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(3504),
                            Description = "Description for Home Product 1",
                            Price = 300m,
                            Title = "Home Product 1",
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(3506)
                        },
                        new
                        {
                            Id = new Guid("b4143d6b-c302-4215-82e9-c9123d2f2ee5"),
                            CategoryId = new Guid("e842529a-ac4a-48f4-9377-1786d94dd4e8"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(3509),
                            Description = "Description for Home Product 2",
                            Price = 32m,
                            Title = "Home Product 2",
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(3511)
                        },
                        new
                        {
                            Id = new Guid("41dde13b-dbcc-4f51-a31c-2231f94ddcab"),
                            CategoryId = new Guid("e842529a-ac4a-48f4-9377-1786d94dd4e8"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(3515),
                            Description = "Description for Home Product 3",
                            Price = 56m,
                            Title = "Home Product 3",
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(3517)
                        },
                        new
                        {
                            Id = new Guid("9101df8f-38e3-40de-a46a-8ca66c26222d"),
                            CategoryId = new Guid("e842529a-ac4a-48f4-9377-1786d94dd4e8"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(3520),
                            Description = "Description for Home Product 4",
                            Price = 143m,
                            Title = "Home Product 4",
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(3522)
                        },
                        new
                        {
                            Id = new Guid("8b441114-e030-4412-8952-2370a4b7f05a"),
                            CategoryId = new Guid("e842529a-ac4a-48f4-9377-1786d94dd4e8"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(3526),
                            Description = "Description for Home Product 5",
                            Price = 3000m,
                            Title = "Home Product 5",
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(3528)
                        });
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.Review", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("comment");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid")
                        .HasColumnName("product_id");

                    b.Property<int>("Rating")
                        .HasColumnType("integer")
                        .HasColumnName("rating");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated_at");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_reviews");

                    b.HasIndex("ProductId")
                        .HasDatabaseName("ix_reviews_product_id");

                    b.HasIndex("UserId", "ProductId")
                        .IsUnique()
                        .HasDatabaseName("ix_reviews_user_id_product_id");

                    b.ToTable("reviews", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("c9e3c10d-b843-434d-bcbe-bfe35e17dd52"),
                            Comment = "Great product!",
                            CreatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(4461),
                            ProductId = new Guid("bc2983a5-b13c-49a4-9a6c-29c4dad9c355"),
                            Rating = 5,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(4464),
                            UserId = new Guid("ad0ad1be-f7e5-47c7-b4c3-c17250cbebab")
                        },
                        new
                        {
                            Id = new Guid("71dd6268-f87a-4816-a5bf-c94769a51473"),
                            Comment = "Really enjoyed this.",
                            CreatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(4470),
                            ProductId = new Guid("425f57d3-5bcd-42cd-a401-9a3a9af83c8f"),
                            Rating = 4,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(4472),
                            UserId = new Guid("760454fa-4af1-4ae6-9b18-ed3aec4be2a9")
                        },
                        new
                        {
                            Id = new Guid("eb57b891-c019-46c9-9c6e-630a79d19787"),
                            Comment = "Good quality, but expensive.",
                            CreatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(4476),
                            ProductId = new Guid("41dde13b-dbcc-4f51-a31c-2231f94ddcab"),
                            Rating = 3,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(4478),
                            UserId = new Guid("ad0ad1be-f7e5-47c7-b4c3-c17250cbebab")
                        },
                        new
                        {
                            Id = new Guid("9aa483ac-872b-468c-af4f-2c1f94beec3a"),
                            Comment = "Loved the design!",
                            CreatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(4481),
                            ProductId = new Guid("bf49c60a-9173-4533-8ca6-182cc7f685eb"),
                            Rating = 4,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(4483),
                            UserId = new Guid("760454fa-4af1-4ae6-9b18-ed3aec4be2a9")
                        },
                        new
                        {
                            Id = new Guid("ca5b7d5d-309c-4973-ad8c-132a4142b5c1"),
                            Comment = "Perfect for my needs!",
                            CreatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(4486),
                            ProductId = new Guid("ead99f26-fbfb-4b83-bf74-2ef2fd2b4754"),
                            Rating = 5,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(4488),
                            UserId = new Guid("611a0192-8b2e-4997-a8c8-59b93674d33b")
                        },
                        new
                        {
                            Id = new Guid("a4438f9a-a573-4967-96c3-6a38fcfb6132"),
                            Comment = "Nice product, quick delivery.",
                            CreatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(4493),
                            ProductId = new Guid("fedfd1c9-a73a-47bf-a635-370c193fc1df"),
                            Rating = 4,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(4495),
                            UserId = new Guid("611a0192-8b2e-4997-a8c8-59b93674d33b")
                        },
                        new
                        {
                            Id = new Guid("c2cd9d37-25d0-4b5d-a336-8214ce83b648"),
                            Comment = "Outstanding quality!",
                            CreatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(4498),
                            ProductId = new Guid("052e6003-3e9b-43f3-9d59-0656df90989e"),
                            Rating = 5,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(4500),
                            UserId = new Guid("611a0192-8b2e-4997-a8c8-59b93674d33b")
                        },
                        new
                        {
                            Id = new Guid("dfc6ffd5-140c-4505-9428-7fe852a93afc"),
                            Comment = "Decent, but expected more.",
                            CreatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(4504),
                            ProductId = new Guid("865770da-89af-4719-b00c-310b57d535e1"),
                            Rating = 3,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(4506),
                            UserId = new Guid("ad0ad1be-f7e5-47c7-b4c3-c17250cbebab")
                        },
                        new
                        {
                            Id = new Guid("38fb4093-965e-4e3f-a7a2-c19103fc239e"),
                            Comment = "Absolutely love this!",
                            CreatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(4509),
                            ProductId = new Guid("8b441114-e030-4412-8952-2370a4b7f05a"),
                            Rating = 5,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(4511),
                            UserId = new Guid("760454fa-4af1-4ae6-9b18-ed3aec4be2a9")
                        },
                        new
                        {
                            Id = new Guid("30a4ff5e-3bd1-429d-9981-adbcd46e2537"),
                            Comment = "Not as described, disappointed.",
                            CreatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(4515),
                            ProductId = new Guid("30c4e1a7-3b0f-40e9-be69-903936c22290"),
                            Rating = 2,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(4517),
                            UserId = new Guid("611a0192-8b2e-4997-a8c8-59b93674d33b")
                        });
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Avatar")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("avatar");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("first_name");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("last_name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("password");

                    b.Property<Role>("Role")
                        .HasColumnType("role")
                        .HasColumnName("role");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id")
                        .HasName("pk_users");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasDatabaseName("ix_users_email");

                    b.ToTable("users", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("ad0ad1be-f7e5-47c7-b4c3-c17250cbebab"),
                            Avatar = "https://picsum.photos/1000/1000?random=150",
                            CreatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 401, DateTimeKind.Local).AddTicks(5141),
                            Email = "admin@mail.com",
                            FirstName = "Admin",
                            LastName = "admin",
                            Password = "2Pzm2EEXSkeRs5dMARKlZg==;okNXDtICDan/ZH11m+7VZ0ZaZ6/dUm4PMyhgSeKyQlY=",
                            Role = Role.Admin,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 401, DateTimeKind.Local).AddTicks(5192)
                        },
                        new
                        {
                            Id = new Guid("760454fa-4af1-4ae6-9b18-ed3aec4be2a9"),
                            Avatar = "https://picsum.photos/1000/1000?random=151",
                            CreatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 403, DateTimeKind.Local).AddTicks(1317),
                            Email = "cena@mail.com",
                            FirstName = "John",
                            LastName = "Cena",
                            Password = "DyhLqU1CNtNzxD86FbOR+g==;p0UoxoyGeGtb8M5IBGZe+vwCYaky4cabWQ5V2QZjpKI=",
                            Role = Role.Customer,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 403, DateTimeKind.Local).AddTicks(1320)
                        },
                        new
                        {
                            Id = new Guid("611a0192-8b2e-4997-a8c8-59b93674d33b"),
                            Avatar = "https://picsum.photos/1000/1000?random=152",
                            CreatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 404, DateTimeKind.Local).AddTicks(7429),
                            Email = "doe@mail.com",
                            FirstName = "John",
                            LastName = "Doe",
                            Password = "YaNAdWT5p4sFl2jTcRsnIQ==;cddOKylXN40qy0OYzb/DWZR7RzS+TAPEml3mCg5l8iU=",
                            Role = Role.Customer,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 404, DateTimeKind.Local).AddTicks(7432)
                        });
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.Variant", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Color>("Color")
                        .HasColumnType("color")
                        .HasColumnName("color");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid")
                        .HasColumnName("product_id");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer")
                        .HasColumnName("quantity");

                    b.Property<Size>("Size")
                        .HasColumnType("size")
                        .HasColumnName("size");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id")
                        .HasName("pk_variants");

                    b.HasIndex("ProductId")
                        .HasDatabaseName("ix_variants_product_id");

                    b.ToTable("variants", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("752fedea-c423-4e6b-8dfb-8a4f7b0f0b5c"),
                            Color = Color.Red,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(4043),
                            ProductId = new Guid("bc2983a5-b13c-49a4-9a6c-29c4dad9c355"),
                            Quantity = 10,
                            Size = Size.L,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(4046)
                        },
                        new
                        {
                            Id = new Guid("818123c8-2ab3-41d4-8b11-e48cf71120c3"),
                            Color = Color.Blue,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(4056),
                            ProductId = new Guid("bc2983a5-b13c-49a4-9a6c-29c4dad9c355"),
                            Quantity = 20,
                            Size = Size.XL,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(4058)
                        },
                        new
                        {
                            Id = new Guid("852c2e77-b985-457e-9d6c-4dfcbe754e0d"),
                            Color = Color.Black,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(4062),
                            ProductId = new Guid("bc2983a5-b13c-49a4-9a6c-29c4dad9c355"),
                            Quantity = 30,
                            Size = Size.XXXL,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(4064)
                        },
                        new
                        {
                            Id = new Guid("61978e2a-1229-4bc8-94db-328734649c70"),
                            Color = Color.Red,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(4068),
                            ProductId = new Guid("fedfd1c9-a73a-47bf-a635-370c193fc1df"),
                            Quantity = 20,
                            Size = Size.L,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(4070)
                        },
                        new
                        {
                            Id = new Guid("a3868b49-737f-45fd-98a0-de7f89707d6c"),
                            Color = Color.Blue,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(4074),
                            ProductId = new Guid("fedfd1c9-a73a-47bf-a635-370c193fc1df"),
                            Quantity = 20,
                            Size = Size.XL,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(4077)
                        },
                        new
                        {
                            Id = new Guid("ff69d11e-71b1-4d4f-96ec-0ad51a96247a"),
                            Color = Color.Black,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(4082),
                            ProductId = new Guid("fedfd1c9-a73a-47bf-a635-370c193fc1df"),
                            Quantity = 30,
                            Size = Size.XXXL,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(4084)
                        },
                        new
                        {
                            Id = new Guid("eaf80cb8-cb4e-4d8b-8bc0-d1eb409e464f"),
                            Color = Color.Red,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(4088),
                            ProductId = new Guid("865770da-89af-4719-b00c-310b57d535e1"),
                            Quantity = 10,
                            Size = Size.L,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(4090)
                        },
                        new
                        {
                            Id = new Guid("13ffb885-df7d-4378-9fcb-978fd54d66e8"),
                            Color = Color.Blue,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(4094),
                            ProductId = new Guid("865770da-89af-4719-b00c-310b57d535e1"),
                            Quantity = 20,
                            Size = Size.XL,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(4096)
                        },
                        new
                        {
                            Id = new Guid("67a1c1a5-f3aa-4f91-b0f9-3d0d2538e222"),
                            Color = Color.Black,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(4101),
                            ProductId = new Guid("865770da-89af-4719-b00c-310b57d535e1"),
                            Quantity = 30,
                            Size = Size.XXXL,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(4103)
                        },
                        new
                        {
                            Id = new Guid("76dcd06a-930b-40ce-b138-0e388644889c"),
                            Color = Color.Red,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(4110),
                            ProductId = new Guid("bf49c60a-9173-4533-8ca6-182cc7f685eb"),
                            Quantity = 10,
                            Size = Size.L,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(4112)
                        },
                        new
                        {
                            Id = new Guid("1fb35f36-71fb-41cd-b6c0-acc9a4b54c6a"),
                            Color = Color.Blue,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(4116),
                            ProductId = new Guid("bf49c60a-9173-4533-8ca6-182cc7f685eb"),
                            Quantity = 20,
                            Size = Size.XL,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(4118)
                        },
                        new
                        {
                            Id = new Guid("199a773b-8621-4d69-a5b5-b8eb05d5918f"),
                            Color = Color.Black,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(4122),
                            ProductId = new Guid("bf49c60a-9173-4533-8ca6-182cc7f685eb"),
                            Quantity = 30,
                            Size = Size.XXXL,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(4124)
                        },
                        new
                        {
                            Id = new Guid("a399a6eb-9478-4ea9-be73-d091a4d6e5e2"),
                            Color = Color.Red,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(4128),
                            ProductId = new Guid("271309f9-03ae-4a21-a98c-cb2b911d7996"),
                            Quantity = 10,
                            Size = Size.L,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(4130)
                        },
                        new
                        {
                            Id = new Guid("4cff25b7-ef4f-4e95-a091-2924da7eaca2"),
                            Color = Color.Blue,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(4134),
                            ProductId = new Guid("271309f9-03ae-4a21-a98c-cb2b911d7996"),
                            Quantity = 20,
                            Size = Size.XL,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(4136)
                        },
                        new
                        {
                            Id = new Guid("6b913808-d1a4-4d95-80c0-29694688b672"),
                            Color = Color.Black,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(4140),
                            ProductId = new Guid("271309f9-03ae-4a21-a98c-cb2b911d7996"),
                            Quantity = 30,
                            Size = Size.XXXL,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(4142)
                        },
                        new
                        {
                            Id = new Guid("210951e5-e2c3-42b1-a754-7928dc874b87"),
                            Color = Color.Red,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(4146),
                            ProductId = new Guid("46e235cb-57a7-4eaa-b8c0-fc8096daee7b"),
                            Quantity = 10,
                            Size = Size.L,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(4148)
                        },
                        new
                        {
                            Id = new Guid("20c473c4-bb06-40ca-932f-b08380b6e0fa"),
                            Color = Color.Blue,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(4152),
                            ProductId = new Guid("46e235cb-57a7-4eaa-b8c0-fc8096daee7b"),
                            Quantity = 20,
                            Size = Size.XL,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(4154)
                        },
                        new
                        {
                            Id = new Guid("07470445-7506-46fa-9a80-070c0b7233bf"),
                            Color = Color.Black,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(4162),
                            ProductId = new Guid("46e235cb-57a7-4eaa-b8c0-fc8096daee7b"),
                            Quantity = 30,
                            Size = Size.XXXL,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(4164)
                        },
                        new
                        {
                            Id = new Guid("faf347e1-124a-4367-bd47-dc247400ed72"),
                            Color = Color.Red,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(4168),
                            ProductId = new Guid("425f57d3-5bcd-42cd-a401-9a3a9af83c8f"),
                            Quantity = 10,
                            Size = Size.L,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(4170)
                        },
                        new
                        {
                            Id = new Guid("c70d6dfa-81da-4535-8b5b-6fb513a06c4b"),
                            Color = Color.Blue,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(4174),
                            ProductId = new Guid("425f57d3-5bcd-42cd-a401-9a3a9af83c8f"),
                            Quantity = 20,
                            Size = Size.XL,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(4176)
                        },
                        new
                        {
                            Id = new Guid("d216952b-34b7-402d-b2b0-4514abcf480c"),
                            Color = Color.Black,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(4180),
                            ProductId = new Guid("425f57d3-5bcd-42cd-a401-9a3a9af83c8f"),
                            Quantity = 30,
                            Size = Size.XXXL,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(4182)
                        },
                        new
                        {
                            Id = new Guid("cc341cd8-a5dc-4084-a4fc-ec5b33a06b36"),
                            Color = Color.Red,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(4186),
                            ProductId = new Guid("30c4e1a7-3b0f-40e9-be69-903936c22290"),
                            Quantity = 10,
                            Size = Size.L,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(4188)
                        },
                        new
                        {
                            Id = new Guid("32f5d573-2a2b-492c-93f6-89f7f74d9144"),
                            Color = Color.Blue,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(4192),
                            ProductId = new Guid("30c4e1a7-3b0f-40e9-be69-903936c22290"),
                            Quantity = 20,
                            Size = Size.XL,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(4194)
                        },
                        new
                        {
                            Id = new Guid("c4616011-66b5-4d2d-ac4c-60aa5ad14d6e"),
                            Color = Color.Black,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(4198),
                            ProductId = new Guid("30c4e1a7-3b0f-40e9-be69-903936c22290"),
                            Quantity = 30,
                            Size = Size.XXXL,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(4200)
                        },
                        new
                        {
                            Id = new Guid("26e641f5-0ff4-4373-9a69-67b4212aec71"),
                            Color = Color.Red,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(4204),
                            ProductId = new Guid("7f49c05a-d60c-49e6-b804-f3eb5a65522f"),
                            Quantity = 10,
                            Size = Size.L,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(4206)
                        },
                        new
                        {
                            Id = new Guid("3d8f7940-adb4-4a47-884f-33a8b42a2a68"),
                            Color = Color.Blue,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(4212),
                            ProductId = new Guid("7f49c05a-d60c-49e6-b804-f3eb5a65522f"),
                            Quantity = 20,
                            Size = Size.XL,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(4215)
                        },
                        new
                        {
                            Id = new Guid("f56d64f4-828b-41f7-9fe1-fda99e2038d8"),
                            Color = Color.Black,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(4218),
                            ProductId = new Guid("7f49c05a-d60c-49e6-b804-f3eb5a65522f"),
                            Quantity = 30,
                            Size = Size.XXXL,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(4220)
                        },
                        new
                        {
                            Id = new Guid("3b80e272-7ed9-4479-91f8-f25b7ab4f6ce"),
                            Color = Color.Red,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(4224),
                            ProductId = new Guid("ead99f26-fbfb-4b83-bf74-2ef2fd2b4754"),
                            Quantity = 10,
                            Size = Size.L,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(4226)
                        },
                        new
                        {
                            Id = new Guid("958bace2-c7ab-443e-9640-3ea3ac06a8d2"),
                            Color = Color.Blue,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(4230),
                            ProductId = new Guid("ead99f26-fbfb-4b83-bf74-2ef2fd2b4754"),
                            Quantity = 20,
                            Size = Size.XL,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(4232)
                        },
                        new
                        {
                            Id = new Guid("7e099b10-1ab6-48e4-89e6-dcb87843c5c0"),
                            Color = Color.Black,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(4236),
                            ProductId = new Guid("ead99f26-fbfb-4b83-bf74-2ef2fd2b4754"),
                            Quantity = 30,
                            Size = Size.XXXL,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(4238)
                        },
                        new
                        {
                            Id = new Guid("16b1ef96-6bfb-44d1-8e2b-f5678179fca8"),
                            Color = Color.Red,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(4242),
                            ProductId = new Guid("052e6003-3e9b-43f3-9d59-0656df90989e"),
                            Quantity = 10,
                            Size = Size.L,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(4244)
                        },
                        new
                        {
                            Id = new Guid("4203b401-8480-4da0-b746-3354edfeb25b"),
                            Color = Color.Blue,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(4248),
                            ProductId = new Guid("052e6003-3e9b-43f3-9d59-0656df90989e"),
                            Quantity = 20,
                            Size = Size.XL,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(4250)
                        },
                        new
                        {
                            Id = new Guid("599bb4a7-5cfd-453c-ba5f-07ecc34d31ba"),
                            Color = Color.Black,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(4254),
                            ProductId = new Guid("052e6003-3e9b-43f3-9d59-0656df90989e"),
                            Quantity = 30,
                            Size = Size.XXXL,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(4256)
                        },
                        new
                        {
                            Id = new Guid("1bf0f6a4-3a15-4ac6-b2f8-9acec9a97eaf"),
                            Color = Color.Red,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(4264),
                            ProductId = new Guid("b4143d6b-c302-4215-82e9-c9123d2f2ee5"),
                            Quantity = 10,
                            Size = Size.L,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(4266)
                        },
                        new
                        {
                            Id = new Guid("4eb9b560-de47-4e63-9929-212d7ed83ecb"),
                            Color = Color.Blue,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(4270),
                            ProductId = new Guid("b4143d6b-c302-4215-82e9-c9123d2f2ee5"),
                            Quantity = 20,
                            Size = Size.XL,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(4272)
                        },
                        new
                        {
                            Id = new Guid("15cacb38-2ca9-4848-89d7-f849b360be84"),
                            Color = Color.Black,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(4276),
                            ProductId = new Guid("b4143d6b-c302-4215-82e9-c9123d2f2ee5"),
                            Quantity = 30,
                            Size = Size.XXXL,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(4278)
                        },
                        new
                        {
                            Id = new Guid("f68efc8d-6c74-4073-bf0f-12e9df06ad66"),
                            Color = Color.Red,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(4282),
                            ProductId = new Guid("41dde13b-dbcc-4f51-a31c-2231f94ddcab"),
                            Quantity = 10,
                            Size = Size.L,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(4284)
                        },
                        new
                        {
                            Id = new Guid("abaf746e-8f31-48e2-b015-e4dc49b3cdcc"),
                            Color = Color.Blue,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(4288),
                            ProductId = new Guid("41dde13b-dbcc-4f51-a31c-2231f94ddcab"),
                            Quantity = 20,
                            Size = Size.XL,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(4290)
                        },
                        new
                        {
                            Id = new Guid("ed6623e0-8885-4123-b0e9-c88644f0abd9"),
                            Color = Color.Black,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(4294),
                            ProductId = new Guid("41dde13b-dbcc-4f51-a31c-2231f94ddcab"),
                            Quantity = 30,
                            Size = Size.XXXL,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(4296)
                        },
                        new
                        {
                            Id = new Guid("4723dae1-6902-4582-8230-70017c2843f0"),
                            Color = Color.Red,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(4300),
                            ProductId = new Guid("9101df8f-38e3-40de-a46a-8ca66c26222d"),
                            Quantity = 10,
                            Size = Size.L,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(4302)
                        },
                        new
                        {
                            Id = new Guid("ecf7eb06-ae5f-4f0d-bec7-7fcd39e08b8c"),
                            Color = Color.Blue,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(4306),
                            ProductId = new Guid("9101df8f-38e3-40de-a46a-8ca66c26222d"),
                            Quantity = 20,
                            Size = Size.XL,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(4308)
                        },
                        new
                        {
                            Id = new Guid("11f16092-3dbd-4daa-a53a-667b2af9fc91"),
                            Color = Color.Black,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(4314),
                            ProductId = new Guid("9101df8f-38e3-40de-a46a-8ca66c26222d"),
                            Quantity = 30,
                            Size = Size.XXXL,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(4316)
                        },
                        new
                        {
                            Id = new Guid("f6208cfd-9094-4b8e-9d4a-56c0c561f6fc"),
                            Color = Color.Red,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(4320),
                            ProductId = new Guid("8b441114-e030-4412-8952-2370a4b7f05a"),
                            Quantity = 10,
                            Size = Size.L,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(4323)
                        },
                        new
                        {
                            Id = new Guid("81f90565-cf28-42ea-8b73-a3d7d9b74c0e"),
                            Color = Color.Blue,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(4327),
                            ProductId = new Guid("8b441114-e030-4412-8952-2370a4b7f05a"),
                            Quantity = 20,
                            Size = Size.XL,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(4329)
                        },
                        new
                        {
                            Id = new Guid("75037c43-72cd-485d-bf4e-592f6cc9663f"),
                            Color = Color.Black,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(4332),
                            ProductId = new Guid("8b441114-e030-4412-8952-2370a4b7f05a"),
                            Quantity = 30,
                            Size = Size.XXXL,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 36, 25, 406, DateTimeKind.Local).AddTicks(4335)
                        });
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.Address", b =>
                {
                    b.HasOne("EcommerceAPI.Core.src.Entity.User", null)
                        .WithMany("Addresses")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_addresses_users_user_id");
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.Image", b =>
                {
                    b.HasOne("EcommerceAPI.Core.src.Entity.Product", null)
                        .WithMany("Images")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_images_products_product_id");
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.Order", b =>
                {
                    b.HasOne("EcommerceAPI.Core.src.Entity.User", null)
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .HasConstraintName("fk_orders_users_user_id");
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.OrderItem", b =>
                {
                    b.HasOne("EcommerceAPI.Core.src.Entity.Order", null)
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_order_items_orders_order_id");

                    b.HasOne("EcommerceAPI.Core.src.Entity.Product", null)
                        .WithMany("OrderItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_order_items_products_product_id");
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.Product", b =>
                {
                    b.HasOne("EcommerceAPI.Core.src.Entity.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_products_categories_category_id");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.Review", b =>
                {
                    b.HasOne("EcommerceAPI.Core.src.Entity.Product", null)
                        .WithMany("Reviews")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_reviews_products_product_id");

                    b.HasOne("EcommerceAPI.Core.src.Entity.User", null)
                        .WithMany("Reviews")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_reviews_users_user_id");
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.Variant", b =>
                {
                    b.HasOne("EcommerceAPI.Core.src.Entity.Product", null)
                        .WithMany("Variants")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_variants_products_product_id");
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.Order", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.Product", b =>
                {
                    b.Navigation("Images");

                    b.Navigation("OrderItems");

                    b.Navigation("Reviews");

                    b.Navigation("Variants");
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.User", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("Orders");

                    b.Navigation("Reviews");
                });
#pragma warning restore 612, 618
        }
    }
}
