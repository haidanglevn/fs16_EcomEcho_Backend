// <auto-generated />
using System;
using EcommerceAPI.Core.src.Entity;
using EcommerceAPI.WebAPI.src.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace EcommerceAPI.WebAPI.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20231226142758_AddSeedDataRandomImage")]
    partial class AddSeedDataRandomImage
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresEnum(modelBuilder, "color", new[] { "black", "silver", "gray", "white", "maroon", "red", "purple", "fuchsia", "green", "lime", "olive", "yellow", "navy", "blue", "teal", "aqua", "orange", "alice_blue", "coral", "dark_blue" });
            NpgsqlModelBuilderExtensions.HasPostgresEnum(modelBuilder, "role", new[] { "customer", "admin" });
            NpgsqlModelBuilderExtensions.HasPostgresEnum(modelBuilder, "size", new[] { "xs", "s", "m", "l", "xl", "xxl", "xxxl" });
            NpgsqlModelBuilderExtensions.HasPostgresEnum(modelBuilder, "status", new[] { "pending", "shipping", "received" });
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.Address", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("city");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("country");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("postal_code");

                    b.Property<string>("State")
                        .HasColumnType("text")
                        .HasColumnName("state");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("street");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated_at");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_addresses");

                    b.HasIndex("UserId")
                        .HasDatabaseName("ix_addresses_user_id");

                    b.ToTable("addresses", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("a1a1a1a1-1234-1234-1234-1234567890ab"),
                            City = "Helsinki",
                            Country = "Finland",
                            CreatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(1388),
                            PostalCode = "00100",
                            Street = "Street 1",
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(1390),
                            UserId = new Guid("ad0ad1be-f7e5-47c7-b4c3-c17250cbebab")
                        },
                        new
                        {
                            Id = new Guid("a2a2a2a2-1234-1234-1234-1234567890ab"),
                            City = "Helsinki",
                            Country = "Finland",
                            CreatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(1396),
                            PostalCode = "00200",
                            Street = "Street 2",
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(1397),
                            UserId = new Guid("ad0ad1be-f7e5-47c7-b4c3-c17250cbebab")
                        },
                        new
                        {
                            Id = new Guid("a3a3a3a3-1234-1234-1234-1234567890ab"),
                            City = "Helsinki",
                            Country = "Finland",
                            CreatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(1400),
                            PostalCode = "00300",
                            Street = "Street 3",
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(1401),
                            UserId = new Guid("ad0ad1be-f7e5-47c7-b4c3-c17250cbebab")
                        },
                        new
                        {
                            Id = new Guid("b1b1b1b1-1234-1234-1234-1234567890ab"),
                            City = "Espoo",
                            Country = "Finland",
                            CreatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(1404),
                            PostalCode = "02100",
                            Street = "Street 1",
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(1406),
                            UserId = new Guid("760454fa-4af1-4ae6-9b18-ed3aec4be2a9")
                        },
                        new
                        {
                            Id = new Guid("b2b2b2b2-1234-1234-1234-1234567890ab"),
                            City = "Espoo",
                            Country = "Finland",
                            CreatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(1409),
                            PostalCode = "02100",
                            Street = "Street 2",
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(1410),
                            UserId = new Guid("760454fa-4af1-4ae6-9b18-ed3aec4be2a9")
                        },
                        new
                        {
                            Id = new Guid("b3b3b3b3-1234-1234-1234-1234567890ab"),
                            City = "Espoo",
                            Country = "Finland",
                            CreatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(1414),
                            PostalCode = "02100",
                            Street = "Street 3",
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(1415),
                            UserId = new Guid("760454fa-4af1-4ae6-9b18-ed3aec4be2a9")
                        },
                        new
                        {
                            Id = new Guid("c1c1c1c1-1234-1234-1234-1234567890ab"),
                            City = "Tampere",
                            Country = "Finland",
                            CreatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(1418),
                            PostalCode = "33100",
                            Street = "Street 3",
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(1420),
                            UserId = new Guid("611a0192-8b2e-4997-a8c8-59b93674d33b")
                        },
                        new
                        {
                            Id = new Guid("c2c2c2c2-1234-1234-1234-1234567890ab"),
                            City = "Tampere",
                            Country = "Finland",
                            CreatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(1423),
                            PostalCode = "33100",
                            Street = "Street 4",
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(1424),
                            UserId = new Guid("611a0192-8b2e-4997-a8c8-59b93674d33b")
                        },
                        new
                        {
                            Id = new Guid("c3c3c3c3-1234-1234-1234-1234567890ab"),
                            City = "Tampere",
                            Country = "Finland",
                            CreatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(1427),
                            PostalCode = "33100",
                            Street = "Street 6",
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(1429),
                            UserId = new Guid("611a0192-8b2e-4997-a8c8-59b93674d33b")
                        });
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("image");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id")
                        .HasName("pk_categories");

                    b.ToTable("categories", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("88499694-269b-4308-a64d-0e903a1f503d"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(486),
                            Image = "https://picsum.photos/1000/1000?random=99",
                            Name = "Fashion",
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(488)
                        },
                        new
                        {
                            Id = new Guid("23b984f8-26f7-49a5-82ea-f4f5ddd16eca"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(493),
                            Image = "https://picsum.photos/1000/1000?random=100",
                            Name = "Sport",
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(494)
                        },
                        new
                        {
                            Id = new Guid("e842529a-ac4a-48f4-9377-1786d94dd4e8"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(497),
                            Image = "https://picsum.photos/1000/1000?random=101",
                            Name = "Home",
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(498)
                        });
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.Image", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid")
                        .HasColumnName("product_id");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated_at");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("url");

                    b.HasKey("Id")
                        .HasName("pk_images");

                    b.HasIndex("ProductId")
                        .HasDatabaseName("ix_images_product_id");

                    b.ToTable("images", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("ffa5b42a-4310-4e8c-972a-e92a6851bf5f"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(641),
                            ProductId = new Guid("bc2983a5-b13c-49a4-9a6c-29c4dad9c355"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(643),
                            Url = "https://picsum.photos/1000/1000?random=1"
                        },
                        new
                        {
                            Id = new Guid("32248b61-c944-49e2-8efa-f086e20109df"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(675),
                            ProductId = new Guid("bc2983a5-b13c-49a4-9a6c-29c4dad9c355"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(677),
                            Url = "https://picsum.photos/1000/1000?random=2"
                        },
                        new
                        {
                            Id = new Guid("be809482-ac85-4940-98e4-ae1590d23727"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(680),
                            ProductId = new Guid("bc2983a5-b13c-49a4-9a6c-29c4dad9c355"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(681),
                            Url = "https://picsum.photos/1000/1000?random=3"
                        },
                        new
                        {
                            Id = new Guid("5c27e818-b25f-40a3-9009-cb3e6efc2107"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(686),
                            ProductId = new Guid("fedfd1c9-a73a-47bf-a635-370c193fc1df"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(687),
                            Url = "https://picsum.photos/1000/1000?random=4"
                        },
                        new
                        {
                            Id = new Guid("37f868ec-7b07-4c2a-8bdb-c5cbbcdc8ff6"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(690),
                            ProductId = new Guid("fedfd1c9-a73a-47bf-a635-370c193fc1df"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(692),
                            Url = "https://picsum.photos/1000/1000?random=5"
                        },
                        new
                        {
                            Id = new Guid("c41a7475-9bae-4d0d-a4fd-43391c8a70b7"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(695),
                            ProductId = new Guid("fedfd1c9-a73a-47bf-a635-370c193fc1df"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(697),
                            Url = "https://picsum.photos/1000/1000?random=6"
                        },
                        new
                        {
                            Id = new Guid("f07883cf-dbe4-4335-bb51-723e9aa6d0e2"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(700),
                            ProductId = new Guid("865770da-89af-4719-b00c-310b57d535e1"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(702),
                            Url = "https://picsum.photos/1000/1000?random=7"
                        },
                        new
                        {
                            Id = new Guid("b85bc8ec-dedd-4a2e-8744-4dc4b13f6424"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(705),
                            ProductId = new Guid("865770da-89af-4719-b00c-310b57d535e1"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(706),
                            Url = "https://picsum.photos/1000/1000?random=8"
                        },
                        new
                        {
                            Id = new Guid("d0e09c4b-6308-4d99-965f-c455533f22ee"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(726),
                            ProductId = new Guid("865770da-89af-4719-b00c-310b57d535e1"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(727),
                            Url = "https://picsum.photos/1000/1000?random=9"
                        },
                        new
                        {
                            Id = new Guid("ec880c07-de36-42b9-ad6b-b1bfe1ab246d"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(732),
                            ProductId = new Guid("bf49c60a-9173-4533-8ca6-182cc7f685eb"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(733),
                            Url = "https://picsum.photos/1000/1000?random=10"
                        },
                        new
                        {
                            Id = new Guid("477abab8-3b2e-44c7-adc4-6bda07f154aa"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(736),
                            ProductId = new Guid("bf49c60a-9173-4533-8ca6-182cc7f685eb"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(738),
                            Url = "https://picsum.photos/1000/1000?random=11"
                        },
                        new
                        {
                            Id = new Guid("ace27b6b-b0e9-47c7-8fbb-f152bb60bc78"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(741),
                            ProductId = new Guid("bf49c60a-9173-4533-8ca6-182cc7f685eb"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(743),
                            Url = "https://picsum.photos/1000/1000?random=12"
                        },
                        new
                        {
                            Id = new Guid("2fb9e8f1-ce21-4cf6-8519-48b005cb7fe0"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(746),
                            ProductId = new Guid("271309f9-03ae-4a21-a98c-cb2b911d7996"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(747),
                            Url = "https://picsum.photos/1000/1000?random=13"
                        },
                        new
                        {
                            Id = new Guid("b6c83094-0655-4957-bce5-b4c3b774cc33"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(750),
                            ProductId = new Guid("271309f9-03ae-4a21-a98c-cb2b911d7996"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(752),
                            Url = "https://picsum.photos/1000/1000?random=14"
                        },
                        new
                        {
                            Id = new Guid("d2476e2b-9caa-4623-b153-59b7e3094c2f"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(755),
                            ProductId = new Guid("271309f9-03ae-4a21-a98c-cb2b911d7996"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(756),
                            Url = "https://picsum.photos/1000/1000?random=15"
                        },
                        new
                        {
                            Id = new Guid("160d26bf-d68f-45e7-998f-d8658e50620d"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(759),
                            ProductId = new Guid("46e235cb-57a7-4eaa-b8c0-fc8096daee7b"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(761),
                            Url = "https://picsum.photos/1000/1000?random=16"
                        },
                        new
                        {
                            Id = new Guid("39897198-b83b-4866-ba69-ff32b9411c78"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(768),
                            ProductId = new Guid("46e235cb-57a7-4eaa-b8c0-fc8096daee7b"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(769),
                            Url = "https://picsum.photos/1000/1000?random=17"
                        },
                        new
                        {
                            Id = new Guid("09b866c6-f741-4ba1-805c-79d82c73aa39"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(774),
                            ProductId = new Guid("46e235cb-57a7-4eaa-b8c0-fc8096daee7b"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(775),
                            Url = "https://picsum.photos/1000/1000?random=18"
                        },
                        new
                        {
                            Id = new Guid("aa51c35e-5bcb-4c84-854c-f72655a9156d"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(778),
                            ProductId = new Guid("425f57d3-5bcd-42cd-a401-9a3a9af83c8f"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(780),
                            Url = "https://picsum.photos/1000/1000?random=19"
                        },
                        new
                        {
                            Id = new Guid("762a397b-3e61-4ad3-89fe-0b3dd0d83b7e"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(783),
                            ProductId = new Guid("425f57d3-5bcd-42cd-a401-9a3a9af83c8f"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(784),
                            Url = "https://picsum.photos/1000/1000?random=20"
                        },
                        new
                        {
                            Id = new Guid("83e7a79d-d75f-4917-bd3c-97650d336b04"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(788),
                            ProductId = new Guid("425f57d3-5bcd-42cd-a401-9a3a9af83c8f"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(789),
                            Url = "https://picsum.photos/1000/1000?random=21"
                        },
                        new
                        {
                            Id = new Guid("5e970a08-c698-4362-800a-8f3883666535"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(792),
                            ProductId = new Guid("30c4e1a7-3b0f-40e9-be69-903936c22290"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(794),
                            Url = "https://picsum.photos/1000/1000?random=22"
                        },
                        new
                        {
                            Id = new Guid("a0ba9444-c283-4eb6-b764-fe1b95d98175"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(797),
                            ProductId = new Guid("30c4e1a7-3b0f-40e9-be69-903936c22290"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(798),
                            Url = "https://picsum.photos/1000/1000?random=23"
                        },
                        new
                        {
                            Id = new Guid("37eec08d-41cc-49f9-9540-c28876d6a55e"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(801),
                            ProductId = new Guid("30c4e1a7-3b0f-40e9-be69-903936c22290"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(803),
                            Url = "https://picsum.photos/1000/1000?random=24"
                        },
                        new
                        {
                            Id = new Guid("23320688-20ad-46ec-814f-61c556268497"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(809),
                            ProductId = new Guid("7f49c05a-d60c-49e6-b804-f3eb5a65522f"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(811),
                            Url = "https://picsum.photos/1000/1000?random=25"
                        },
                        new
                        {
                            Id = new Guid("a5ca2b9a-9f47-4e87-93a4-e07264508dc0"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(814),
                            ProductId = new Guid("7f49c05a-d60c-49e6-b804-f3eb5a65522f"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(815),
                            Url = "https://picsum.photos/1000/1000?random=26"
                        },
                        new
                        {
                            Id = new Guid("749a3f2f-1a4c-4972-a715-a9450f065236"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(818),
                            ProductId = new Guid("7f49c05a-d60c-49e6-b804-f3eb5a65522f"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(820),
                            Url = "https://picsum.photos/1000/1000?random=27"
                        },
                        new
                        {
                            Id = new Guid("fb743525-5145-4145-849f-804cb86aeb37"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(823),
                            ProductId = new Guid("ead99f26-fbfb-4b83-bf74-2ef2fd2b4754"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(825),
                            Url = "https://picsum.photos/1000/1000?random=28"
                        },
                        new
                        {
                            Id = new Guid("61cc43ee-9fa9-4052-95fb-da7b84cbc0ae"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(828),
                            ProductId = new Guid("ead99f26-fbfb-4b83-bf74-2ef2fd2b4754"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(829),
                            Url = "https://picsum.photos/1000/1000?random=29"
                        },
                        new
                        {
                            Id = new Guid("d199a64b-0f93-48ad-bb04-f2bf1a04298a"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(832),
                            ProductId = new Guid("ead99f26-fbfb-4b83-bf74-2ef2fd2b4754"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(834),
                            Url = "https://picsum.photos/1000/1000?random=30"
                        },
                        new
                        {
                            Id = new Guid("83fbe1fd-a245-468a-bb5a-fbb72d941929"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(837),
                            ProductId = new Guid("052e6003-3e9b-43f3-9d59-0656df90989e"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(838),
                            Url = "https://picsum.photos/1000/1000?random=31"
                        },
                        new
                        {
                            Id = new Guid("43c03d2f-4971-4125-bb92-4ffec8e34d80"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(841),
                            ProductId = new Guid("052e6003-3e9b-43f3-9d59-0656df90989e"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(843),
                            Url = "https://picsum.photos/1000/1000?random=32"
                        },
                        new
                        {
                            Id = new Guid("4a00c116-1750-4aca-8bb5-ccaba6062068"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(848),
                            ProductId = new Guid("052e6003-3e9b-43f3-9d59-0656df90989e"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(850),
                            Url = "https://picsum.photos/1000/1000?random=33"
                        },
                        new
                        {
                            Id = new Guid("c07f4030-e357-4d53-a81f-7f1defb554c7"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(854),
                            ProductId = new Guid("b4143d6b-c302-4215-82e9-c9123d2f2ee5"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(856),
                            Url = "https://picsum.photos/1000/1000?random=34"
                        },
                        new
                        {
                            Id = new Guid("a94a1a22-02a4-408c-844f-051f80b20531"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(860),
                            ProductId = new Guid("b4143d6b-c302-4215-82e9-c9123d2f2ee5"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(862),
                            Url = "https://picsum.photos/1000/1000?random=35"
                        },
                        new
                        {
                            Id = new Guid("ec06bf4f-30d9-4eb3-b2a3-1b967c3bd4b6"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(865),
                            ProductId = new Guid("b4143d6b-c302-4215-82e9-c9123d2f2ee5"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(866),
                            Url = "https://picsum.photos/1000/1000?random=36"
                        },
                        new
                        {
                            Id = new Guid("edbaa74d-fa4c-41a5-9a38-fa30c185352a"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(869),
                            ProductId = new Guid("41dde13b-dbcc-4f51-a31c-2231f94ddcab"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(871),
                            Url = "https://picsum.photos/1000/1000?random=37"
                        },
                        new
                        {
                            Id = new Guid("f198f95b-84a8-4177-a846-26284e3250d1"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(874),
                            ProductId = new Guid("41dde13b-dbcc-4f51-a31c-2231f94ddcab"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(875),
                            Url = "https://picsum.photos/1000/1000?random=38"
                        },
                        new
                        {
                            Id = new Guid("d94b53df-eccc-402e-92ed-76fdd5c15766"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(878),
                            ProductId = new Guid("41dde13b-dbcc-4f51-a31c-2231f94ddcab"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(880),
                            Url = "https://picsum.photos/1000/1000?random=39"
                        },
                        new
                        {
                            Id = new Guid("1913ee1e-765e-48b6-b738-0a9282d1081f"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(882),
                            ProductId = new Guid("9101df8f-38e3-40de-a46a-8ca66c26222d"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(884),
                            Url = "https://picsum.photos/1000/1000?random=40"
                        },
                        new
                        {
                            Id = new Guid("1dae723c-6550-4b98-b6a7-3a467bf588b9"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(890),
                            ProductId = new Guid("9101df8f-38e3-40de-a46a-8ca66c26222d"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(891),
                            Url = "https://picsum.photos/1000/1000?random=41"
                        },
                        new
                        {
                            Id = new Guid("d401eef3-f9a6-4dfc-9895-1e94505b7264"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(894),
                            ProductId = new Guid("9101df8f-38e3-40de-a46a-8ca66c26222d"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(896),
                            Url = "https://picsum.photos/1000/1000?random=42"
                        },
                        new
                        {
                            Id = new Guid("290835bc-9a04-464c-8441-f9f8cc979a13"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(899),
                            ProductId = new Guid("8b441114-e030-4412-8952-2370a4b7f05a"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(900),
                            Url = "https://picsum.photos/1000/1000?random=43"
                        },
                        new
                        {
                            Id = new Guid("de49301d-4d8c-4033-86b1-2e5d8bf9a12f"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(903),
                            ProductId = new Guid("8b441114-e030-4412-8952-2370a4b7f05a"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(904),
                            Url = "https://picsum.photos/1000/1000?random=44"
                        },
                        new
                        {
                            Id = new Guid("0aacc45b-f218-43d5-9f3a-7dcbd30a634a"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(907),
                            ProductId = new Guid("8b441114-e030-4412-8952-2370a4b7f05a"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(909),
                            Url = "https://picsum.photos/1000/1000?random=45"
                        });
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<Status>("Status")
                        .HasColumnType("status")
                        .HasColumnName("status");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated_at");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_orders");

                    b.HasIndex("UserId")
                        .HasDatabaseName("ix_orders_user_id");

                    b.ToTable("orders", (string)null);
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.OrderItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uuid")
                        .HasColumnName("order_id");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric")
                        .HasColumnName("price");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid")
                        .HasColumnName("product_id");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer")
                        .HasColumnName("quantity");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id")
                        .HasName("pk_order_items");

                    b.HasIndex("OrderId")
                        .HasDatabaseName("ix_order_items_order_id");

                    b.HasIndex("ProductId")
                        .HasDatabaseName("ix_order_items_product_id");

                    b.ToTable("order_items", (string)null);
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uuid")
                        .HasColumnName("category_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric")
                        .HasColumnName("price");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id")
                        .HasName("pk_products");

                    b.HasIndex("CategoryId")
                        .HasDatabaseName("ix_products_category_id");

                    b.ToTable("products", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("bc2983a5-b13c-49a4-9a6c-29c4dad9c355"),
                            CategoryId = new Guid("88499694-269b-4308-a64d-0e903a1f503d"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(531),
                            Description = "Description for Fashion Product 1",
                            Price = 100m,
                            Title = "Fashion Product 1",
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(534)
                        },
                        new
                        {
                            Id = new Guid("fedfd1c9-a73a-47bf-a635-370c193fc1df"),
                            CategoryId = new Guid("88499694-269b-4308-a64d-0e903a1f503d"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(539),
                            Description = "Description for Fashion Product 2",
                            Price = 140m,
                            Title = "Fashion Product 2",
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(541)
                        },
                        new
                        {
                            Id = new Guid("865770da-89af-4719-b00c-310b57d535e1"),
                            CategoryId = new Guid("88499694-269b-4308-a64d-0e903a1f503d"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(544),
                            Description = "Description for Fashion Product 3",
                            Price = 120m,
                            Title = "Fashion Product 3",
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(545)
                        },
                        new
                        {
                            Id = new Guid("bf49c60a-9173-4533-8ca6-182cc7f685eb"),
                            CategoryId = new Guid("88499694-269b-4308-a64d-0e903a1f503d"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(548),
                            Description = "Description for Fashion Product 4",
                            Price = 200m,
                            Title = "Fashion Product 4",
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(550)
                        },
                        new
                        {
                            Id = new Guid("271309f9-03ae-4a21-a98c-cb2b911d7996"),
                            CategoryId = new Guid("88499694-269b-4308-a64d-0e903a1f503d"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(553),
                            Description = "Description for Fashion Product 5",
                            Price = 104m,
                            Title = "Fashion Product 5",
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(554)
                        },
                        new
                        {
                            Id = new Guid("46e235cb-57a7-4eaa-b8c0-fc8096daee7b"),
                            CategoryId = new Guid("23b984f8-26f7-49a5-82ea-f4f5ddd16eca"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(558),
                            Description = "Description for Sport Product 1",
                            Price = 200m,
                            Title = "Sport Product 1",
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(560)
                        },
                        new
                        {
                            Id = new Guid("425f57d3-5bcd-42cd-a401-9a3a9af83c8f"),
                            CategoryId = new Guid("23b984f8-26f7-49a5-82ea-f4f5ddd16eca"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(563),
                            Description = "Description for Sport Product 2",
                            Price = 240m,
                            Title = "Sport Product 2",
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(564)
                        },
                        new
                        {
                            Id = new Guid("30c4e1a7-3b0f-40e9-be69-903936c22290"),
                            CategoryId = new Guid("23b984f8-26f7-49a5-82ea-f4f5ddd16eca"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(567),
                            Description = "Description for Sport Product 3",
                            Price = 154m,
                            Title = "Sport Product 3",
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(568)
                        },
                        new
                        {
                            Id = new Guid("7f49c05a-d60c-49e6-b804-f3eb5a65522f"),
                            CategoryId = new Guid("23b984f8-26f7-49a5-82ea-f4f5ddd16eca"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(571),
                            Description = "Description for Sport Product 4",
                            Price = 333m,
                            Title = "Sport Product 4",
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(573)
                        },
                        new
                        {
                            Id = new Guid("ead99f26-fbfb-4b83-bf74-2ef2fd2b4754"),
                            CategoryId = new Guid("23b984f8-26f7-49a5-82ea-f4f5ddd16eca"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(577),
                            Description = "Description for Sport Product 5",
                            Price = 205m,
                            Title = "Sport Product 5",
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(578)
                        },
                        new
                        {
                            Id = new Guid("052e6003-3e9b-43f3-9d59-0656df90989e"),
                            CategoryId = new Guid("e842529a-ac4a-48f4-9377-1786d94dd4e8"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(581),
                            Description = "Description for Home Product 1",
                            Price = 300m,
                            Title = "Home Product 1",
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(582)
                        },
                        new
                        {
                            Id = new Guid("b4143d6b-c302-4215-82e9-c9123d2f2ee5"),
                            CategoryId = new Guid("e842529a-ac4a-48f4-9377-1786d94dd4e8"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(585),
                            Description = "Description for Home Product 2",
                            Price = 32m,
                            Title = "Home Product 2",
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(587)
                        },
                        new
                        {
                            Id = new Guid("41dde13b-dbcc-4f51-a31c-2231f94ddcab"),
                            CategoryId = new Guid("e842529a-ac4a-48f4-9377-1786d94dd4e8"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(589),
                            Description = "Description for Home Product 3",
                            Price = 56m,
                            Title = "Home Product 3",
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(591)
                        },
                        new
                        {
                            Id = new Guid("9101df8f-38e3-40de-a46a-8ca66c26222d"),
                            CategoryId = new Guid("e842529a-ac4a-48f4-9377-1786d94dd4e8"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(593),
                            Description = "Description for Home Product 4",
                            Price = 143m,
                            Title = "Home Product 4",
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(595)
                        },
                        new
                        {
                            Id = new Guid("8b441114-e030-4412-8952-2370a4b7f05a"),
                            CategoryId = new Guid("e842529a-ac4a-48f4-9377-1786d94dd4e8"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(598),
                            Description = "Description for Home Product 5",
                            Price = 3000m,
                            Title = "Home Product 5",
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(599)
                        });
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.Review", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("comment");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid")
                        .HasColumnName("product_id");

                    b.Property<int>("Rating")
                        .HasColumnType("integer")
                        .HasColumnName("rating");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated_at");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_reviews");

                    b.HasIndex("ProductId")
                        .HasDatabaseName("ix_reviews_product_id");

                    b.HasIndex("UserId", "ProductId")
                        .IsUnique()
                        .HasDatabaseName("ix_reviews_user_id_product_id");

                    b.ToTable("reviews", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("c9e3c10d-b843-434d-bcbe-bfe35e17dd52"),
                            Comment = "Great product!",
                            CreatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(1282),
                            ProductId = new Guid("bc2983a5-b13c-49a4-9a6c-29c4dad9c355"),
                            Rating = 5,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(1284),
                            UserId = new Guid("ad0ad1be-f7e5-47c7-b4c3-c17250cbebab")
                        },
                        new
                        {
                            Id = new Guid("71dd6268-f87a-4816-a5bf-c94769a51473"),
                            Comment = "Really enjoyed this.",
                            CreatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(1288),
                            ProductId = new Guid("425f57d3-5bcd-42cd-a401-9a3a9af83c8f"),
                            Rating = 4,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(1289),
                            UserId = new Guid("760454fa-4af1-4ae6-9b18-ed3aec4be2a9")
                        },
                        new
                        {
                            Id = new Guid("eb57b891-c019-46c9-9c6e-630a79d19787"),
                            Comment = "Good quality, but expensive.",
                            CreatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(1292),
                            ProductId = new Guid("41dde13b-dbcc-4f51-a31c-2231f94ddcab"),
                            Rating = 3,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(1294),
                            UserId = new Guid("ad0ad1be-f7e5-47c7-b4c3-c17250cbebab")
                        },
                        new
                        {
                            Id = new Guid("9aa483ac-872b-468c-af4f-2c1f94beec3a"),
                            Comment = "Loved the design!",
                            CreatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(1297),
                            ProductId = new Guid("bf49c60a-9173-4533-8ca6-182cc7f685eb"),
                            Rating = 4,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(1298),
                            UserId = new Guid("760454fa-4af1-4ae6-9b18-ed3aec4be2a9")
                        },
                        new
                        {
                            Id = new Guid("ca5b7d5d-309c-4973-ad8c-132a4142b5c1"),
                            Comment = "Perfect for my needs!",
                            CreatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(1301),
                            ProductId = new Guid("ead99f26-fbfb-4b83-bf74-2ef2fd2b4754"),
                            Rating = 5,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(1302),
                            UserId = new Guid("611a0192-8b2e-4997-a8c8-59b93674d33b")
                        },
                        new
                        {
                            Id = new Guid("a4438f9a-a573-4967-96c3-6a38fcfb6132"),
                            Comment = "Nice product, quick delivery.",
                            CreatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(1306),
                            ProductId = new Guid("fedfd1c9-a73a-47bf-a635-370c193fc1df"),
                            Rating = 4,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(1307),
                            UserId = new Guid("611a0192-8b2e-4997-a8c8-59b93674d33b")
                        },
                        new
                        {
                            Id = new Guid("c2cd9d37-25d0-4b5d-a336-8214ce83b648"),
                            Comment = "Outstanding quality!",
                            CreatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(1310),
                            ProductId = new Guid("052e6003-3e9b-43f3-9d59-0656df90989e"),
                            Rating = 5,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(1311),
                            UserId = new Guid("611a0192-8b2e-4997-a8c8-59b93674d33b")
                        },
                        new
                        {
                            Id = new Guid("dfc6ffd5-140c-4505-9428-7fe852a93afc"),
                            Comment = "Decent, but expected more.",
                            CreatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(1314),
                            ProductId = new Guid("865770da-89af-4719-b00c-310b57d535e1"),
                            Rating = 3,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(1316),
                            UserId = new Guid("ad0ad1be-f7e5-47c7-b4c3-c17250cbebab")
                        },
                        new
                        {
                            Id = new Guid("38fb4093-965e-4e3f-a7a2-c19103fc239e"),
                            Comment = "Absolutely love this!",
                            CreatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(1348),
                            ProductId = new Guid("8b441114-e030-4412-8952-2370a4b7f05a"),
                            Rating = 5,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(1350),
                            UserId = new Guid("760454fa-4af1-4ae6-9b18-ed3aec4be2a9")
                        },
                        new
                        {
                            Id = new Guid("30a4ff5e-3bd1-429d-9981-adbcd46e2537"),
                            Comment = "Not as described, disappointed.",
                            CreatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(1353),
                            ProductId = new Guid("30c4e1a7-3b0f-40e9-be69-903936c22290"),
                            Rating = 2,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(1355),
                            UserId = new Guid("611a0192-8b2e-4997-a8c8-59b93674d33b")
                        });
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Avatar")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("avatar");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("first_name");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("last_name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("password");

                    b.Property<Role>("Role")
                        .HasColumnType("role")
                        .HasColumnName("role");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id")
                        .HasName("pk_users");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasDatabaseName("ix_users_email");

                    b.ToTable("users", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("ad0ad1be-f7e5-47c7-b4c3-c17250cbebab"),
                            Avatar = "https://picsum.photos/1000/1000?random=150",
                            CreatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(209),
                            Email = "admin@mail.com",
                            FirstName = "Admin",
                            LastName = "admin",
                            Password = "admin",
                            Role = Role.Admin,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(263)
                        },
                        new
                        {
                            Id = new Guid("760454fa-4af1-4ae6-9b18-ed3aec4be2a9"),
                            Avatar = "https://picsum.photos/1000/1000?random=151",
                            CreatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(276),
                            Email = "cena@mail.com",
                            FirstName = "John",
                            LastName = "Cena",
                            Password = "password",
                            Role = Role.Customer,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(278)
                        },
                        new
                        {
                            Id = new Guid("611a0192-8b2e-4997-a8c8-59b93674d33b"),
                            Avatar = "https://picsum.photos/1000/1000?random=152",
                            CreatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(281),
                            Email = "doe@mail.com",
                            FirstName = "John",
                            LastName = "Doe",
                            Password = "password",
                            Role = Role.Customer,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(283)
                        });
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.Variant", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Color>("Color")
                        .HasColumnType("color")
                        .HasColumnName("color");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid")
                        .HasColumnName("product_id");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer")
                        .HasColumnName("quantity");

                    b.Property<Size>("Size")
                        .HasColumnType("size")
                        .HasColumnName("size");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id")
                        .HasName("pk_variants");

                    b.HasIndex("ProductId")
                        .HasDatabaseName("ix_variants_product_id");

                    b.ToTable("variants", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("51f432df-044e-4234-950b-32e775653715"),
                            Color = Color.Red,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(996),
                            ProductId = new Guid("bc2983a5-b13c-49a4-9a6c-29c4dad9c355"),
                            Quantity = 10,
                            Size = Size.L,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(998)
                        },
                        new
                        {
                            Id = new Guid("c856c31e-0e26-46ba-a415-bd719d4fb134"),
                            Color = Color.Blue,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(1005),
                            ProductId = new Guid("bc2983a5-b13c-49a4-9a6c-29c4dad9c355"),
                            Quantity = 20,
                            Size = Size.XL,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(1007)
                        },
                        new
                        {
                            Id = new Guid("63dc01c3-762b-435c-8446-e07b3d674cea"),
                            Color = Color.Black,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(1010),
                            ProductId = new Guid("bc2983a5-b13c-49a4-9a6c-29c4dad9c355"),
                            Quantity = 30,
                            Size = Size.XXXL,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(1011)
                        },
                        new
                        {
                            Id = new Guid("650dc060-601f-4835-8114-4ebd5329bb92"),
                            Color = Color.Red,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(1017),
                            ProductId = new Guid("fedfd1c9-a73a-47bf-a635-370c193fc1df"),
                            Quantity = 20,
                            Size = Size.L,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(1019)
                        },
                        new
                        {
                            Id = new Guid("eb26b63b-00f4-47d3-b344-960dd4eb75a7"),
                            Color = Color.Blue,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(1022),
                            ProductId = new Guid("fedfd1c9-a73a-47bf-a635-370c193fc1df"),
                            Quantity = 20,
                            Size = Size.XL,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(1024)
                        },
                        new
                        {
                            Id = new Guid("bfcfc960-5a93-4d73-aa77-fd7e6ee514e4"),
                            Color = Color.Black,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(1028),
                            ProductId = new Guid("fedfd1c9-a73a-47bf-a635-370c193fc1df"),
                            Quantity = 30,
                            Size = Size.XXXL,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(1029)
                        },
                        new
                        {
                            Id = new Guid("edeefb37-a837-4b7d-bdcd-24c988dda97c"),
                            Color = Color.Red,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(1033),
                            ProductId = new Guid("865770da-89af-4719-b00c-310b57d535e1"),
                            Quantity = 10,
                            Size = Size.L,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(1034)
                        },
                        new
                        {
                            Id = new Guid("2692a764-d860-4355-8a2a-60e0a96a4731"),
                            Color = Color.Blue,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(1037),
                            ProductId = new Guid("865770da-89af-4719-b00c-310b57d535e1"),
                            Quantity = 20,
                            Size = Size.XL,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(1039)
                        },
                        new
                        {
                            Id = new Guid("c57492f3-2706-42af-9347-b9610cd185ac"),
                            Color = Color.Black,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(1042),
                            ProductId = new Guid("865770da-89af-4719-b00c-310b57d535e1"),
                            Quantity = 30,
                            Size = Size.XXXL,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(1044)
                        },
                        new
                        {
                            Id = new Guid("d27eb5b2-24dc-43e7-87d6-68eba0e006e3"),
                            Color = Color.Red,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(1049),
                            ProductId = new Guid("bf49c60a-9173-4533-8ca6-182cc7f685eb"),
                            Quantity = 10,
                            Size = Size.L,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(1050)
                        },
                        new
                        {
                            Id = new Guid("f2247b1d-9294-4156-b28e-1fe19243b56c"),
                            Color = Color.Blue,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(1054),
                            ProductId = new Guid("bf49c60a-9173-4533-8ca6-182cc7f685eb"),
                            Quantity = 20,
                            Size = Size.XL,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(1055)
                        },
                        new
                        {
                            Id = new Guid("82bdb638-9812-47c4-9ad3-b91b0d27172d"),
                            Color = Color.Black,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(1061),
                            ProductId = new Guid("bf49c60a-9173-4533-8ca6-182cc7f685eb"),
                            Quantity = 30,
                            Size = Size.XXXL,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(1062)
                        },
                        new
                        {
                            Id = new Guid("c3740b95-f56d-4443-bf02-7516a85601a2"),
                            Color = Color.Red,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(1065),
                            ProductId = new Guid("271309f9-03ae-4a21-a98c-cb2b911d7996"),
                            Quantity = 10,
                            Size = Size.L,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(1067)
                        },
                        new
                        {
                            Id = new Guid("6229ea6c-1d40-4a82-a170-96d25e8bee06"),
                            Color = Color.Blue,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(1070),
                            ProductId = new Guid("271309f9-03ae-4a21-a98c-cb2b911d7996"),
                            Quantity = 20,
                            Size = Size.XL,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(1072)
                        },
                        new
                        {
                            Id = new Guid("b2a4dbf7-e2ce-46c3-835a-a994d6d46abc"),
                            Color = Color.Black,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(1075),
                            ProductId = new Guid("271309f9-03ae-4a21-a98c-cb2b911d7996"),
                            Quantity = 30,
                            Size = Size.XXXL,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(1076)
                        },
                        new
                        {
                            Id = new Guid("be83f10b-7c03-440b-8e11-47094027b879"),
                            Color = Color.Red,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(1080),
                            ProductId = new Guid("46e235cb-57a7-4eaa-b8c0-fc8096daee7b"),
                            Quantity = 10,
                            Size = Size.L,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(1081)
                        },
                        new
                        {
                            Id = new Guid("74285100-2963-441e-a496-4047bd077d3a"),
                            Color = Color.Blue,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(1084),
                            ProductId = new Guid("46e235cb-57a7-4eaa-b8c0-fc8096daee7b"),
                            Quantity = 20,
                            Size = Size.XL,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(1086)
                        },
                        new
                        {
                            Id = new Guid("8e0954a1-f28f-443b-88d4-cd2d62ba5536"),
                            Color = Color.Black,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(1090),
                            ProductId = new Guid("46e235cb-57a7-4eaa-b8c0-fc8096daee7b"),
                            Quantity = 30,
                            Size = Size.XXXL,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(1092)
                        },
                        new
                        {
                            Id = new Guid("eced8f11-9a00-43bf-886a-7ef6800e1930"),
                            Color = Color.Red,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(1095),
                            ProductId = new Guid("425f57d3-5bcd-42cd-a401-9a3a9af83c8f"),
                            Quantity = 10,
                            Size = Size.L,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(1097)
                        },
                        new
                        {
                            Id = new Guid("cb14386e-7f62-4165-8eff-1f7e90977f4f"),
                            Color = Color.Blue,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(1102),
                            ProductId = new Guid("425f57d3-5bcd-42cd-a401-9a3a9af83c8f"),
                            Quantity = 20,
                            Size = Size.XL,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(1104)
                        },
                        new
                        {
                            Id = new Guid("d9c96174-ab62-4393-851f-342c7594d89b"),
                            Color = Color.Black,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(1107),
                            ProductId = new Guid("425f57d3-5bcd-42cd-a401-9a3a9af83c8f"),
                            Quantity = 30,
                            Size = Size.XXXL,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(1109)
                        },
                        new
                        {
                            Id = new Guid("852c5d3a-08d0-4ff9-8544-bf2d1e74db77"),
                            Color = Color.Red,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(1112),
                            ProductId = new Guid("30c4e1a7-3b0f-40e9-be69-903936c22290"),
                            Quantity = 10,
                            Size = Size.L,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(1114)
                        },
                        new
                        {
                            Id = new Guid("2d6c2183-a8c2-48d2-98f6-3963e293f32e"),
                            Color = Color.Blue,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(1117),
                            ProductId = new Guid("30c4e1a7-3b0f-40e9-be69-903936c22290"),
                            Quantity = 20,
                            Size = Size.XL,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(1118)
                        },
                        new
                        {
                            Id = new Guid("f38005e6-8d7c-4dc7-ae68-c3879d3457b7"),
                            Color = Color.Black,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(1122),
                            ProductId = new Guid("30c4e1a7-3b0f-40e9-be69-903936c22290"),
                            Quantity = 30,
                            Size = Size.XXXL,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(1123)
                        },
                        new
                        {
                            Id = new Guid("35e8e5eb-fa1c-4747-8d73-18da41cc61af"),
                            Color = Color.Red,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(1126),
                            ProductId = new Guid("7f49c05a-d60c-49e6-b804-f3eb5a65522f"),
                            Quantity = 10,
                            Size = Size.L,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(1128)
                        },
                        new
                        {
                            Id = new Guid("569778ae-383b-4dbd-8180-6eced76b6e34"),
                            Color = Color.Blue,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(1131),
                            ProductId = new Guid("7f49c05a-d60c-49e6-b804-f3eb5a65522f"),
                            Quantity = 20,
                            Size = Size.XL,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(1133)
                        },
                        new
                        {
                            Id = new Guid("7d9b0870-e6a3-48ee-a239-6216f6e95af1"),
                            Color = Color.Black,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(1136),
                            ProductId = new Guid("7f49c05a-d60c-49e6-b804-f3eb5a65522f"),
                            Quantity = 30,
                            Size = Size.XXXL,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(1137)
                        },
                        new
                        {
                            Id = new Guid("e8929593-bf63-4336-bf2f-9de9ee471bc2"),
                            Color = Color.Red,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(1143),
                            ProductId = new Guid("ead99f26-fbfb-4b83-bf74-2ef2fd2b4754"),
                            Quantity = 10,
                            Size = Size.L,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(1145)
                        },
                        new
                        {
                            Id = new Guid("d89a5896-5f88-4ded-8f55-0f4f16c4cda6"),
                            Color = Color.Blue,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(1148),
                            ProductId = new Guid("ead99f26-fbfb-4b83-bf74-2ef2fd2b4754"),
                            Quantity = 20,
                            Size = Size.XL,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(1150)
                        },
                        new
                        {
                            Id = new Guid("054c006a-ce6c-413f-b6de-3fc7e40f50be"),
                            Color = Color.Black,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(1153),
                            ProductId = new Guid("ead99f26-fbfb-4b83-bf74-2ef2fd2b4754"),
                            Quantity = 30,
                            Size = Size.XXXL,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(1154)
                        },
                        new
                        {
                            Id = new Guid("c93d4551-a259-4df0-b66e-3b8f9bd38519"),
                            Color = Color.Red,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(1158),
                            ProductId = new Guid("052e6003-3e9b-43f3-9d59-0656df90989e"),
                            Quantity = 10,
                            Size = Size.L,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(1159)
                        },
                        new
                        {
                            Id = new Guid("33bcd40d-83fd-45be-bbc6-923cc42eea37"),
                            Color = Color.Blue,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(1162),
                            ProductId = new Guid("052e6003-3e9b-43f3-9d59-0656df90989e"),
                            Quantity = 20,
                            Size = Size.XL,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(1164)
                        },
                        new
                        {
                            Id = new Guid("62d368b3-f561-4837-9ff9-c6260315fdfe"),
                            Color = Color.Black,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(1167),
                            ProductId = new Guid("052e6003-3e9b-43f3-9d59-0656df90989e"),
                            Quantity = 30,
                            Size = Size.XXXL,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(1169)
                        },
                        new
                        {
                            Id = new Guid("5c8929a0-f415-42c7-abb0-dd28828e1f29"),
                            Color = Color.Red,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(1173),
                            ProductId = new Guid("b4143d6b-c302-4215-82e9-c9123d2f2ee5"),
                            Quantity = 10,
                            Size = Size.L,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(1175)
                        },
                        new
                        {
                            Id = new Guid("d8a5cc90-af90-4428-9089-890e76a072d1"),
                            Color = Color.Blue,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(1178),
                            ProductId = new Guid("b4143d6b-c302-4215-82e9-c9123d2f2ee5"),
                            Quantity = 20,
                            Size = Size.XL,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(1180)
                        },
                        new
                        {
                            Id = new Guid("d95645e3-d129-49ea-be80-ea7fd6aad3d5"),
                            Color = Color.Black,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(1185),
                            ProductId = new Guid("b4143d6b-c302-4215-82e9-c9123d2f2ee5"),
                            Quantity = 30,
                            Size = Size.XXXL,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(1187)
                        },
                        new
                        {
                            Id = new Guid("ea11f8e0-deb5-4253-a610-4761bdd29c24"),
                            Color = Color.Red,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(1190),
                            ProductId = new Guid("41dde13b-dbcc-4f51-a31c-2231f94ddcab"),
                            Quantity = 10,
                            Size = Size.L,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(1191)
                        },
                        new
                        {
                            Id = new Guid("752aaeca-3418-4269-ab58-900424dd4fd3"),
                            Color = Color.Blue,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(1194),
                            ProductId = new Guid("41dde13b-dbcc-4f51-a31c-2231f94ddcab"),
                            Quantity = 20,
                            Size = Size.XL,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(1196)
                        },
                        new
                        {
                            Id = new Guid("c89e8e22-a014-47ec-bbbe-e9abe39d1da2"),
                            Color = Color.Black,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(1199),
                            ProductId = new Guid("41dde13b-dbcc-4f51-a31c-2231f94ddcab"),
                            Quantity = 30,
                            Size = Size.XXXL,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(1201)
                        },
                        new
                        {
                            Id = new Guid("eec84be7-619d-4bc3-8a2c-7bad189c0c59"),
                            Color = Color.Red,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(1204),
                            ProductId = new Guid("9101df8f-38e3-40de-a46a-8ca66c26222d"),
                            Quantity = 10,
                            Size = Size.L,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(1205)
                        },
                        new
                        {
                            Id = new Guid("02acc0ed-3cc5-4f17-baac-3e0c3c4e4359"),
                            Color = Color.Blue,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(1209),
                            ProductId = new Guid("9101df8f-38e3-40de-a46a-8ca66c26222d"),
                            Quantity = 20,
                            Size = Size.XL,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(1210)
                        },
                        new
                        {
                            Id = new Guid("60a309a7-e80c-4773-86b9-07699738c928"),
                            Color = Color.Black,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(1213),
                            ProductId = new Guid("9101df8f-38e3-40de-a46a-8ca66c26222d"),
                            Quantity = 30,
                            Size = Size.XXXL,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(1215)
                        },
                        new
                        {
                            Id = new Guid("f1c3eedc-7f76-41fe-a430-6810f879a4ff"),
                            Color = Color.Red,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(1218),
                            ProductId = new Guid("8b441114-e030-4412-8952-2370a4b7f05a"),
                            Quantity = 10,
                            Size = Size.L,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(1220)
                        },
                        new
                        {
                            Id = new Guid("af88afa7-f05f-43fe-a533-221b84ce0ba2"),
                            Color = Color.Blue,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(1225),
                            ProductId = new Guid("8b441114-e030-4412-8952-2370a4b7f05a"),
                            Quantity = 20,
                            Size = Size.XL,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(1226)
                        },
                        new
                        {
                            Id = new Guid("953ab827-6b73-4942-a79b-4b166252919e"),
                            Color = Color.Black,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(1230),
                            ProductId = new Guid("8b441114-e030-4412-8952-2370a4b7f05a"),
                            Quantity = 30,
                            Size = Size.XXXL,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 27, 57, 820, DateTimeKind.Local).AddTicks(1231)
                        });
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.Address", b =>
                {
                    b.HasOne("EcommerceAPI.Core.src.Entity.User", null)
                        .WithMany("Addresses")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_addresses_users_user_id");
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.Image", b =>
                {
                    b.HasOne("EcommerceAPI.Core.src.Entity.Product", null)
                        .WithMany("Images")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_images_products_product_id");
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.Order", b =>
                {
                    b.HasOne("EcommerceAPI.Core.src.Entity.User", null)
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .HasConstraintName("fk_orders_users_user_id");
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.OrderItem", b =>
                {
                    b.HasOne("EcommerceAPI.Core.src.Entity.Order", null)
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_order_items_orders_order_id");

                    b.HasOne("EcommerceAPI.Core.src.Entity.Product", null)
                        .WithMany("OrderItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_order_items_products_product_id");
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.Product", b =>
                {
                    b.HasOne("EcommerceAPI.Core.src.Entity.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_products_categories_category_id");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.Review", b =>
                {
                    b.HasOne("EcommerceAPI.Core.src.Entity.Product", null)
                        .WithMany("Reviews")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_reviews_products_product_id");

                    b.HasOne("EcommerceAPI.Core.src.Entity.User", null)
                        .WithMany("Reviews")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_reviews_users_user_id");
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.Variant", b =>
                {
                    b.HasOne("EcommerceAPI.Core.src.Entity.Product", null)
                        .WithMany("Variants")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_variants_products_product_id");
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.Order", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.Product", b =>
                {
                    b.Navigation("Images");

                    b.Navigation("OrderItems");

                    b.Navigation("Reviews");

                    b.Navigation("Variants");
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.User", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("Orders");

                    b.Navigation("Reviews");
                });
#pragma warning restore 612, 618
        }
    }
}
