// <auto-generated />
using System;
using EcommerceAPI.Core.src.Entity;
using EcommerceAPI.WebAPI.src.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace EcommerceAPI.WebAPI.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20231226142134_AddSeedDataImageVariant")]
    partial class AddSeedDataImageVariant
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresEnum(modelBuilder, "color", new[] { "black", "silver", "gray", "white", "maroon", "red", "purple", "fuchsia", "green", "lime", "olive", "yellow", "navy", "blue", "teal", "aqua", "orange", "alice_blue", "coral", "dark_blue" });
            NpgsqlModelBuilderExtensions.HasPostgresEnum(modelBuilder, "role", new[] { "customer", "admin" });
            NpgsqlModelBuilderExtensions.HasPostgresEnum(modelBuilder, "size", new[] { "xs", "s", "m", "l", "xl", "xxl", "xxxl" });
            NpgsqlModelBuilderExtensions.HasPostgresEnum(modelBuilder, "status", new[] { "pending", "shipping", "received" });
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.Address", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("city");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("country");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("postal_code");

                    b.Property<string>("State")
                        .HasColumnType("text")
                        .HasColumnName("state");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("street");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated_at");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_addresses");

                    b.HasIndex("UserId")
                        .HasDatabaseName("ix_addresses_user_id");

                    b.ToTable("addresses", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("a1a1a1a1-1234-1234-1234-1234567890ab"),
                            City = "Helsinki",
                            Country = "Finland",
                            CreatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2687),
                            PostalCode = "00100",
                            Street = "Street 1",
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2689),
                            UserId = new Guid("ad0ad1be-f7e5-47c7-b4c3-c17250cbebab")
                        },
                        new
                        {
                            Id = new Guid("a2a2a2a2-1234-1234-1234-1234567890ab"),
                            City = "Helsinki",
                            Country = "Finland",
                            CreatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2696),
                            PostalCode = "00200",
                            Street = "Street 2",
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2698),
                            UserId = new Guid("ad0ad1be-f7e5-47c7-b4c3-c17250cbebab")
                        },
                        new
                        {
                            Id = new Guid("a3a3a3a3-1234-1234-1234-1234567890ab"),
                            City = "Helsinki",
                            Country = "Finland",
                            CreatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2701),
                            PostalCode = "00300",
                            Street = "Street 3",
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2703),
                            UserId = new Guid("ad0ad1be-f7e5-47c7-b4c3-c17250cbebab")
                        },
                        new
                        {
                            Id = new Guid("b1b1b1b1-1234-1234-1234-1234567890ab"),
                            City = "Espoo",
                            Country = "Finland",
                            CreatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2707),
                            PostalCode = "02100",
                            Street = "Street 1",
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2709),
                            UserId = new Guid("760454fa-4af1-4ae6-9b18-ed3aec4be2a9")
                        },
                        new
                        {
                            Id = new Guid("b2b2b2b2-1234-1234-1234-1234567890ab"),
                            City = "Espoo",
                            Country = "Finland",
                            CreatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2712),
                            PostalCode = "02100",
                            Street = "Street 2",
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2714),
                            UserId = new Guid("760454fa-4af1-4ae6-9b18-ed3aec4be2a9")
                        },
                        new
                        {
                            Id = new Guid("b3b3b3b3-1234-1234-1234-1234567890ab"),
                            City = "Espoo",
                            Country = "Finland",
                            CreatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2718),
                            PostalCode = "02100",
                            Street = "Street 3",
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2720),
                            UserId = new Guid("760454fa-4af1-4ae6-9b18-ed3aec4be2a9")
                        },
                        new
                        {
                            Id = new Guid("c1c1c1c1-1234-1234-1234-1234567890ab"),
                            City = "Tampere",
                            Country = "Finland",
                            CreatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2724),
                            PostalCode = "33100",
                            Street = "Street 3",
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2726),
                            UserId = new Guid("611a0192-8b2e-4997-a8c8-59b93674d33b")
                        },
                        new
                        {
                            Id = new Guid("c2c2c2c2-1234-1234-1234-1234567890ab"),
                            City = "Tampere",
                            Country = "Finland",
                            CreatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2729),
                            PostalCode = "33100",
                            Street = "Street 4",
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2731),
                            UserId = new Guid("611a0192-8b2e-4997-a8c8-59b93674d33b")
                        },
                        new
                        {
                            Id = new Guid("c3c3c3c3-1234-1234-1234-1234567890ab"),
                            City = "Tampere",
                            Country = "Finland",
                            CreatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2735),
                            PostalCode = "33100",
                            Street = "Street 6",
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2737),
                            UserId = new Guid("611a0192-8b2e-4997-a8c8-59b93674d33b")
                        });
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("image");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id")
                        .HasName("pk_categories");

                    b.ToTable("categories", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("88499694-269b-4308-a64d-0e903a1f503d"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(1466),
                            Image = "https://picsum.photos/1000/1000?random=1",
                            Name = "Fashion",
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(1469)
                        },
                        new
                        {
                            Id = new Guid("23b984f8-26f7-49a5-82ea-f4f5ddd16eca"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(1474),
                            Image = "https://picsum.photos/1000/1000?random=2",
                            Name = "Sport",
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(1476)
                        },
                        new
                        {
                            Id = new Guid("e842529a-ac4a-48f4-9377-1786d94dd4e8"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(1480),
                            Image = "https://picsum.photos/1000/1000?random=3",
                            Name = "Home",
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(1482)
                        });
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.Image", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid")
                        .HasColumnName("product_id");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated_at");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("url");

                    b.HasKey("Id")
                        .HasName("pk_images");

                    b.HasIndex("ProductId")
                        .HasDatabaseName("ix_images_product_id");

                    b.ToTable("images", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("ece8b526-57ec-49e0-abf7-7c77c66f47b6"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(1655),
                            ProductId = new Guid("bc2983a5-b13c-49a4-9a6c-29c4dad9c355"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(1658),
                            Url = "https://picsum.photos/1000/1000?random=1"
                        },
                        new
                        {
                            Id = new Guid("ba712b32-d104-4ceb-97a1-6716a7f435a0"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(1763),
                            ProductId = new Guid("bc2983a5-b13c-49a4-9a6c-29c4dad9c355"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(1765),
                            Url = "https://picsum.photos/1000/1000?random=2"
                        },
                        new
                        {
                            Id = new Guid("af32800e-f19e-48d2-b536-1c68bf3b2720"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(1770),
                            ProductId = new Guid("bc2983a5-b13c-49a4-9a6c-29c4dad9c355"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(1772),
                            Url = "https://picsum.photos/1000/1000?random=3"
                        },
                        new
                        {
                            Id = new Guid("c11abe29-cfa1-4bb1-ac44-74b241acb2a9"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(1776),
                            ProductId = new Guid("fedfd1c9-a73a-47bf-a635-370c193fc1df"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(1778),
                            Url = "https://picsum.photos/1000/1000?random=1"
                        },
                        new
                        {
                            Id = new Guid("bdbb48d6-da5c-4652-8231-fd718f3ebfdc"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(1782),
                            ProductId = new Guid("fedfd1c9-a73a-47bf-a635-370c193fc1df"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(1784),
                            Url = "https://picsum.photos/1000/1000?random=2"
                        },
                        new
                        {
                            Id = new Guid("c6d59bdd-a599-434a-ac83-b6ddf2b88fc1"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(1789),
                            ProductId = new Guid("fedfd1c9-a73a-47bf-a635-370c193fc1df"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(1791),
                            Url = "https://picsum.photos/1000/1000?random=3"
                        },
                        new
                        {
                            Id = new Guid("557fb0e2-84e1-46ca-b68c-bed6ba7d7e6b"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(1795),
                            ProductId = new Guid("865770da-89af-4719-b00c-310b57d535e1"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(1797),
                            Url = "https://picsum.photos/1000/1000?random=1"
                        },
                        new
                        {
                            Id = new Guid("af1cba67-4cb2-40c5-88ae-8ef3690ce3c3"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(1801),
                            ProductId = new Guid("865770da-89af-4719-b00c-310b57d535e1"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(1803),
                            Url = "https://picsum.photos/1000/1000?random=2"
                        },
                        new
                        {
                            Id = new Guid("e0bb61c7-9f5a-43dc-9f14-fe576f989515"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(1807),
                            ProductId = new Guid("865770da-89af-4719-b00c-310b57d535e1"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(1809),
                            Url = "https://picsum.photos/1000/1000?random=3"
                        },
                        new
                        {
                            Id = new Guid("705cd979-cf82-4d39-92e3-016de785bb78"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(1818),
                            ProductId = new Guid("bf49c60a-9173-4533-8ca6-182cc7f685eb"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(1820),
                            Url = "https://picsum.photos/1000/1000?random=1"
                        },
                        new
                        {
                            Id = new Guid("235c5768-d623-47fe-bc8c-2837fe5ce06f"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(1824),
                            ProductId = new Guid("bf49c60a-9173-4533-8ca6-182cc7f685eb"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(1826),
                            Url = "https://picsum.photos/1000/1000?random=2"
                        },
                        new
                        {
                            Id = new Guid("68e30fd7-e65c-4edb-886a-07940a9a5d97"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(1830),
                            ProductId = new Guid("bf49c60a-9173-4533-8ca6-182cc7f685eb"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(1831),
                            Url = "https://picsum.photos/1000/1000?random=3"
                        },
                        new
                        {
                            Id = new Guid("8bf80804-448b-4a72-a86c-4e272c91f4bc"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(1835),
                            ProductId = new Guid("271309f9-03ae-4a21-a98c-cb2b911d7996"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(1837),
                            Url = "https://picsum.photos/1000/1000?random=1"
                        },
                        new
                        {
                            Id = new Guid("f11cc865-0192-4807-9a47-b7c9d7384094"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(1841),
                            ProductId = new Guid("271309f9-03ae-4a21-a98c-cb2b911d7996"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(1843),
                            Url = "https://picsum.photos/1000/1000?random=2"
                        },
                        new
                        {
                            Id = new Guid("17d4e91f-ab94-4dff-8854-c050679dd5d0"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(1846),
                            ProductId = new Guid("271309f9-03ae-4a21-a98c-cb2b911d7996"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(1848),
                            Url = "https://picsum.photos/1000/1000?random=3"
                        },
                        new
                        {
                            Id = new Guid("fa659308-5756-49af-be43-bf2581758c7e"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(1852),
                            ProductId = new Guid("46e235cb-57a7-4eaa-b8c0-fc8096daee7b"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(1854),
                            Url = "https://picsum.photos/1000/1000?random=1"
                        },
                        new
                        {
                            Id = new Guid("681c356b-ddfe-4c31-b3f2-ac07aa556fd6"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(1858),
                            ProductId = new Guid("46e235cb-57a7-4eaa-b8c0-fc8096daee7b"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(1860),
                            Url = "https://picsum.photos/1000/1000?random=2"
                        },
                        new
                        {
                            Id = new Guid("b006e8ea-920a-4362-9201-4d112ae237ff"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(1869),
                            ProductId = new Guid("46e235cb-57a7-4eaa-b8c0-fc8096daee7b"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(1871),
                            Url = "https://picsum.photos/1000/1000?random=3"
                        },
                        new
                        {
                            Id = new Guid("b1718449-8399-4c09-9150-dc778b9c7967"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(1875),
                            ProductId = new Guid("425f57d3-5bcd-42cd-a401-9a3a9af83c8f"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(1876),
                            Url = "https://picsum.photos/1000/1000?random=1"
                        },
                        new
                        {
                            Id = new Guid("0f8e96b0-9e0a-4b13-b7f0-6ba4fe6fc0db"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(1880),
                            ProductId = new Guid("425f57d3-5bcd-42cd-a401-9a3a9af83c8f"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(1882),
                            Url = "https://picsum.photos/1000/1000?random=2"
                        },
                        new
                        {
                            Id = new Guid("2325d6d6-385f-40b3-9d01-9304c5a5cb64"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(1886),
                            ProductId = new Guid("425f57d3-5bcd-42cd-a401-9a3a9af83c8f"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(1888),
                            Url = "https://picsum.photos/1000/1000?random=3"
                        },
                        new
                        {
                            Id = new Guid("50005c17-cc4c-4a63-8a85-e20daad8de68"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(1891),
                            ProductId = new Guid("30c4e1a7-3b0f-40e9-be69-903936c22290"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(1893),
                            Url = "https://picsum.photos/1000/1000?random=1"
                        },
                        new
                        {
                            Id = new Guid("6c81ae2b-c043-4bf8-ac8e-b55f0e4c655c"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(1897),
                            ProductId = new Guid("30c4e1a7-3b0f-40e9-be69-903936c22290"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(1899),
                            Url = "https://picsum.photos/1000/1000?random=2"
                        },
                        new
                        {
                            Id = new Guid("83162160-b469-4183-bf50-0b7544dd9a37"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(1903),
                            ProductId = new Guid("30c4e1a7-3b0f-40e9-be69-903936c22290"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(1905),
                            Url = "https://picsum.photos/1000/1000?random=3"
                        },
                        new
                        {
                            Id = new Guid("5501d583-faca-4b9a-805e-8136355c6c94"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(1908),
                            ProductId = new Guid("7f49c05a-d60c-49e6-b804-f3eb5a65522f"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(1910),
                            Url = "https://picsum.photos/1000/1000?random=1"
                        },
                        new
                        {
                            Id = new Guid("01d76db6-d7ae-473e-983c-91fe55798378"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(1917),
                            ProductId = new Guid("7f49c05a-d60c-49e6-b804-f3eb5a65522f"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(1919),
                            Url = "https://picsum.photos/1000/1000?random=2"
                        },
                        new
                        {
                            Id = new Guid("4292d875-0f80-4bae-8406-6a6225b809e0"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(1923),
                            ProductId = new Guid("7f49c05a-d60c-49e6-b804-f3eb5a65522f"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(1925),
                            Url = "https://picsum.photos/1000/1000?random=3"
                        },
                        new
                        {
                            Id = new Guid("b7fd9cc0-3b24-4f3e-954a-bcb581e409f7"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(1928),
                            ProductId = new Guid("ead99f26-fbfb-4b83-bf74-2ef2fd2b4754"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(1930),
                            Url = "https://picsum.photos/1000/1000?random=1"
                        },
                        new
                        {
                            Id = new Guid("0f2a958d-b5c4-4f63-b67e-dc2b712ec24b"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(1934),
                            ProductId = new Guid("ead99f26-fbfb-4b83-bf74-2ef2fd2b4754"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(1936),
                            Url = "https://picsum.photos/1000/1000?random=2"
                        },
                        new
                        {
                            Id = new Guid("fb1e9b66-9cde-4601-bb88-c133c90df2ae"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(1940),
                            ProductId = new Guid("ead99f26-fbfb-4b83-bf74-2ef2fd2b4754"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(1942),
                            Url = "https://picsum.photos/1000/1000?random=3"
                        },
                        new
                        {
                            Id = new Guid("60cf5393-e5ea-45ed-8134-e3747a971a57"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(1946),
                            ProductId = new Guid("052e6003-3e9b-43f3-9d59-0656df90989e"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(1947),
                            Url = "https://picsum.photos/1000/1000?random=1"
                        },
                        new
                        {
                            Id = new Guid("ed502e7b-06bb-44a0-8209-a2acc2ebe690"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(1951),
                            ProductId = new Guid("052e6003-3e9b-43f3-9d59-0656df90989e"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(1953),
                            Url = "https://picsum.photos/1000/1000?random=2"
                        },
                        new
                        {
                            Id = new Guid("e9505356-21b6-4f25-8067-fd7c557bb6d9"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(1957),
                            ProductId = new Guid("052e6003-3e9b-43f3-9d59-0656df90989e"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(1959),
                            Url = "https://picsum.photos/1000/1000?random=3"
                        },
                        new
                        {
                            Id = new Guid("14f19637-9e72-4c88-9331-9db22a01f582"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2051),
                            ProductId = new Guid("b4143d6b-c302-4215-82e9-c9123d2f2ee5"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2054),
                            Url = "https://picsum.photos/1000/1000?random=1"
                        },
                        new
                        {
                            Id = new Guid("4de54c30-65f5-455b-a65e-c274a6de738b"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2058),
                            ProductId = new Guid("b4143d6b-c302-4215-82e9-c9123d2f2ee5"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2060),
                            Url = "https://picsum.photos/1000/1000?random=2"
                        },
                        new
                        {
                            Id = new Guid("f4e172e6-5d80-448d-9e9a-d171c29eca01"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2064),
                            ProductId = new Guid("b4143d6b-c302-4215-82e9-c9123d2f2ee5"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2066),
                            Url = "https://picsum.photos/1000/1000?random=3"
                        },
                        new
                        {
                            Id = new Guid("d5778faf-62d1-4eb7-81ad-755595874046"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2070),
                            ProductId = new Guid("41dde13b-dbcc-4f51-a31c-2231f94ddcab"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2072),
                            Url = "https://picsum.photos/1000/1000?random=1"
                        },
                        new
                        {
                            Id = new Guid("d78b23f0-3594-4513-9a2c-f98fd760e724"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2076),
                            ProductId = new Guid("41dde13b-dbcc-4f51-a31c-2231f94ddcab"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2077),
                            Url = "https://picsum.photos/1000/1000?random=2"
                        },
                        new
                        {
                            Id = new Guid("3154e6f3-d876-4bf1-9627-8bf5afdc5a9a"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2081),
                            ProductId = new Guid("41dde13b-dbcc-4f51-a31c-2231f94ddcab"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2083),
                            Url = "https://picsum.photos/1000/1000?random=3"
                        },
                        new
                        {
                            Id = new Guid("bede00e2-6908-4ea8-a6a1-28c37aeb7fdf"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2087),
                            ProductId = new Guid("9101df8f-38e3-40de-a46a-8ca66c26222d"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2088),
                            Url = "https://picsum.photos/1000/1000?random=1"
                        },
                        new
                        {
                            Id = new Guid("57444803-3a99-4881-9d7e-67b231cd3683"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2092),
                            ProductId = new Guid("9101df8f-38e3-40de-a46a-8ca66c26222d"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2094),
                            Url = "https://picsum.photos/1000/1000?random=2"
                        },
                        new
                        {
                            Id = new Guid("dd86d0f9-ae31-43e2-9c1a-e8feb9e0510d"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2101),
                            ProductId = new Guid("9101df8f-38e3-40de-a46a-8ca66c26222d"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2103),
                            Url = "https://picsum.photos/1000/1000?random=3"
                        },
                        new
                        {
                            Id = new Guid("5e630f70-ac63-4f8e-a602-60f1fbdd93c7"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2106),
                            ProductId = new Guid("8b441114-e030-4412-8952-2370a4b7f05a"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2108),
                            Url = "https://picsum.photos/1000/1000?random=1"
                        },
                        new
                        {
                            Id = new Guid("f2cd0fba-be48-4778-a35b-9f40594295ac"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2112),
                            ProductId = new Guid("8b441114-e030-4412-8952-2370a4b7f05a"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2114),
                            Url = "https://picsum.photos/1000/1000?random=2"
                        },
                        new
                        {
                            Id = new Guid("63833f81-4c1e-4fed-a5ed-c51450656741"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2118),
                            ProductId = new Guid("8b441114-e030-4412-8952-2370a4b7f05a"),
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2119),
                            Url = "https://picsum.photos/1000/1000?random=3"
                        });
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<Status>("Status")
                        .HasColumnType("status")
                        .HasColumnName("status");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated_at");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_orders");

                    b.HasIndex("UserId")
                        .HasDatabaseName("ix_orders_user_id");

                    b.ToTable("orders", (string)null);
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.OrderItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uuid")
                        .HasColumnName("order_id");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric")
                        .HasColumnName("price");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid")
                        .HasColumnName("product_id");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer")
                        .HasColumnName("quantity");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id")
                        .HasName("pk_order_items");

                    b.HasIndex("OrderId")
                        .HasDatabaseName("ix_order_items_order_id");

                    b.HasIndex("ProductId")
                        .HasDatabaseName("ix_order_items_product_id");

                    b.ToTable("order_items", (string)null);
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uuid")
                        .HasColumnName("category_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric")
                        .HasColumnName("price");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id")
                        .HasName("pk_products");

                    b.HasIndex("CategoryId")
                        .HasDatabaseName("ix_products_category_id");

                    b.ToTable("products", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("bc2983a5-b13c-49a4-9a6c-29c4dad9c355"),
                            CategoryId = new Guid("88499694-269b-4308-a64d-0e903a1f503d"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(1522),
                            Description = "Description for Fashion Product 1",
                            Price = 100m,
                            Title = "Fashion Product 1",
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(1524)
                        },
                        new
                        {
                            Id = new Guid("fedfd1c9-a73a-47bf-a635-370c193fc1df"),
                            CategoryId = new Guid("88499694-269b-4308-a64d-0e903a1f503d"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(1532),
                            Description = "Description for Fashion Product 2",
                            Price = 140m,
                            Title = "Fashion Product 2",
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(1534)
                        },
                        new
                        {
                            Id = new Guid("865770da-89af-4719-b00c-310b57d535e1"),
                            CategoryId = new Guid("88499694-269b-4308-a64d-0e903a1f503d"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(1537),
                            Description = "Description for Fashion Product 3",
                            Price = 120m,
                            Title = "Fashion Product 3",
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(1539)
                        },
                        new
                        {
                            Id = new Guid("bf49c60a-9173-4533-8ca6-182cc7f685eb"),
                            CategoryId = new Guid("88499694-269b-4308-a64d-0e903a1f503d"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(1542),
                            Description = "Description for Fashion Product 4",
                            Price = 200m,
                            Title = "Fashion Product 4",
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(1544)
                        },
                        new
                        {
                            Id = new Guid("271309f9-03ae-4a21-a98c-cb2b911d7996"),
                            CategoryId = new Guid("88499694-269b-4308-a64d-0e903a1f503d"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(1548),
                            Description = "Description for Fashion Product 5",
                            Price = 104m,
                            Title = "Fashion Product 5",
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(1550)
                        },
                        new
                        {
                            Id = new Guid("46e235cb-57a7-4eaa-b8c0-fc8096daee7b"),
                            CategoryId = new Guid("23b984f8-26f7-49a5-82ea-f4f5ddd16eca"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(1556),
                            Description = "Description for Sport Product 1",
                            Price = 200m,
                            Title = "Sport Product 1",
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(1558)
                        },
                        new
                        {
                            Id = new Guid("425f57d3-5bcd-42cd-a401-9a3a9af83c8f"),
                            CategoryId = new Guid("23b984f8-26f7-49a5-82ea-f4f5ddd16eca"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(1561),
                            Description = "Description for Sport Product 2",
                            Price = 240m,
                            Title = "Sport Product 2",
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(1563)
                        },
                        new
                        {
                            Id = new Guid("30c4e1a7-3b0f-40e9-be69-903936c22290"),
                            CategoryId = new Guid("23b984f8-26f7-49a5-82ea-f4f5ddd16eca"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(1567),
                            Description = "Description for Sport Product 3",
                            Price = 154m,
                            Title = "Sport Product 3",
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(1569)
                        },
                        new
                        {
                            Id = new Guid("7f49c05a-d60c-49e6-b804-f3eb5a65522f"),
                            CategoryId = new Guid("23b984f8-26f7-49a5-82ea-f4f5ddd16eca"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(1572),
                            Description = "Description for Sport Product 4",
                            Price = 333m,
                            Title = "Sport Product 4",
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(1574)
                        },
                        new
                        {
                            Id = new Guid("ead99f26-fbfb-4b83-bf74-2ef2fd2b4754"),
                            CategoryId = new Guid("23b984f8-26f7-49a5-82ea-f4f5ddd16eca"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(1579),
                            Description = "Description for Sport Product 5",
                            Price = 205m,
                            Title = "Sport Product 5",
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(1581)
                        },
                        new
                        {
                            Id = new Guid("052e6003-3e9b-43f3-9d59-0656df90989e"),
                            CategoryId = new Guid("e842529a-ac4a-48f4-9377-1786d94dd4e8"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(1584),
                            Description = "Description for Home Product 1",
                            Price = 300m,
                            Title = "Home Product 1",
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(1586)
                        },
                        new
                        {
                            Id = new Guid("b4143d6b-c302-4215-82e9-c9123d2f2ee5"),
                            CategoryId = new Guid("e842529a-ac4a-48f4-9377-1786d94dd4e8"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(1589),
                            Description = "Description for Home Product 2",
                            Price = 32m,
                            Title = "Home Product 2",
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(1591)
                        },
                        new
                        {
                            Id = new Guid("41dde13b-dbcc-4f51-a31c-2231f94ddcab"),
                            CategoryId = new Guid("e842529a-ac4a-48f4-9377-1786d94dd4e8"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(1595),
                            Description = "Description for Home Product 3",
                            Price = 56m,
                            Title = "Home Product 3",
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(1597)
                        },
                        new
                        {
                            Id = new Guid("9101df8f-38e3-40de-a46a-8ca66c26222d"),
                            CategoryId = new Guid("e842529a-ac4a-48f4-9377-1786d94dd4e8"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(1600),
                            Description = "Description for Home Product 4",
                            Price = 143m,
                            Title = "Home Product 4",
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(1602)
                        },
                        new
                        {
                            Id = new Guid("8b441114-e030-4412-8952-2370a4b7f05a"),
                            CategoryId = new Guid("e842529a-ac4a-48f4-9377-1786d94dd4e8"),
                            CreatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(1605),
                            Description = "Description for Home Product 5",
                            Price = 3000m,
                            Title = "Home Product 5",
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(1607)
                        });
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.Review", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("comment");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid")
                        .HasColumnName("product_id");

                    b.Property<int>("Rating")
                        .HasColumnType("integer")
                        .HasColumnName("rating");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated_at");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_reviews");

                    b.HasIndex("ProductId")
                        .HasDatabaseName("ix_reviews_product_id");

                    b.HasIndex("UserId", "ProductId")
                        .IsUnique()
                        .HasDatabaseName("ix_reviews_user_id_product_id");

                    b.ToTable("reviews", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("c9e3c10d-b843-434d-bcbe-bfe35e17dd52"),
                            Comment = "Great product!",
                            CreatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2583),
                            ProductId = new Guid("bc2983a5-b13c-49a4-9a6c-29c4dad9c355"),
                            Rating = 5,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2587),
                            UserId = new Guid("ad0ad1be-f7e5-47c7-b4c3-c17250cbebab")
                        },
                        new
                        {
                            Id = new Guid("71dd6268-f87a-4816-a5bf-c94769a51473"),
                            Comment = "Really enjoyed this.",
                            CreatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2594),
                            ProductId = new Guid("425f57d3-5bcd-42cd-a401-9a3a9af83c8f"),
                            Rating = 4,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2595),
                            UserId = new Guid("760454fa-4af1-4ae6-9b18-ed3aec4be2a9")
                        },
                        new
                        {
                            Id = new Guid("eb57b891-c019-46c9-9c6e-630a79d19787"),
                            Comment = "Good quality, but expensive.",
                            CreatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2599),
                            ProductId = new Guid("41dde13b-dbcc-4f51-a31c-2231f94ddcab"),
                            Rating = 3,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2601),
                            UserId = new Guid("ad0ad1be-f7e5-47c7-b4c3-c17250cbebab")
                        },
                        new
                        {
                            Id = new Guid("9aa483ac-872b-468c-af4f-2c1f94beec3a"),
                            Comment = "Loved the design!",
                            CreatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2604),
                            ProductId = new Guid("bf49c60a-9173-4533-8ca6-182cc7f685eb"),
                            Rating = 4,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2606),
                            UserId = new Guid("760454fa-4af1-4ae6-9b18-ed3aec4be2a9")
                        },
                        new
                        {
                            Id = new Guid("ca5b7d5d-309c-4973-ad8c-132a4142b5c1"),
                            Comment = "Perfect for my needs!",
                            CreatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2609),
                            ProductId = new Guid("ead99f26-fbfb-4b83-bf74-2ef2fd2b4754"),
                            Rating = 5,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2611),
                            UserId = new Guid("611a0192-8b2e-4997-a8c8-59b93674d33b")
                        },
                        new
                        {
                            Id = new Guid("a4438f9a-a573-4967-96c3-6a38fcfb6132"),
                            Comment = "Nice product, quick delivery.",
                            CreatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2615),
                            ProductId = new Guid("fedfd1c9-a73a-47bf-a635-370c193fc1df"),
                            Rating = 4,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2617),
                            UserId = new Guid("611a0192-8b2e-4997-a8c8-59b93674d33b")
                        },
                        new
                        {
                            Id = new Guid("c2cd9d37-25d0-4b5d-a336-8214ce83b648"),
                            Comment = "Outstanding quality!",
                            CreatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2621),
                            ProductId = new Guid("052e6003-3e9b-43f3-9d59-0656df90989e"),
                            Rating = 5,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2622),
                            UserId = new Guid("611a0192-8b2e-4997-a8c8-59b93674d33b")
                        },
                        new
                        {
                            Id = new Guid("dfc6ffd5-140c-4505-9428-7fe852a93afc"),
                            Comment = "Decent, but expected more.",
                            CreatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2626),
                            ProductId = new Guid("865770da-89af-4719-b00c-310b57d535e1"),
                            Rating = 3,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2628),
                            UserId = new Guid("ad0ad1be-f7e5-47c7-b4c3-c17250cbebab")
                        },
                        new
                        {
                            Id = new Guid("38fb4093-965e-4e3f-a7a2-c19103fc239e"),
                            Comment = "Absolutely love this!",
                            CreatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2631),
                            ProductId = new Guid("8b441114-e030-4412-8952-2370a4b7f05a"),
                            Rating = 5,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2633),
                            UserId = new Guid("760454fa-4af1-4ae6-9b18-ed3aec4be2a9")
                        },
                        new
                        {
                            Id = new Guid("30a4ff5e-3bd1-429d-9981-adbcd46e2537"),
                            Comment = "Not as described, disappointed.",
                            CreatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2637),
                            ProductId = new Guid("30c4e1a7-3b0f-40e9-be69-903936c22290"),
                            Rating = 2,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2639),
                            UserId = new Guid("611a0192-8b2e-4997-a8c8-59b93674d33b")
                        });
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Avatar")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("avatar");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("first_name");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("last_name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("password");

                    b.Property<Role>("Role")
                        .HasColumnType("role")
                        .HasColumnName("role");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id")
                        .HasName("pk_users");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasDatabaseName("ix_users_email");

                    b.ToTable("users", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("ad0ad1be-f7e5-47c7-b4c3-c17250cbebab"),
                            Avatar = "https://picsum.photos/1000/1000?random=1",
                            CreatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(1175),
                            Email = "admin@mail.com",
                            FirstName = "Admin",
                            LastName = "admin",
                            Password = "admin",
                            Role = Role.Admin,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(1232)
                        },
                        new
                        {
                            Id = new Guid("760454fa-4af1-4ae6-9b18-ed3aec4be2a9"),
                            Avatar = "https://picsum.photos/1000/1000?random=1",
                            CreatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(1245),
                            Email = "cena@mail.com",
                            FirstName = "John",
                            LastName = "Cena",
                            Password = "password",
                            Role = Role.Customer,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(1247)
                        },
                        new
                        {
                            Id = new Guid("611a0192-8b2e-4997-a8c8-59b93674d33b"),
                            Avatar = "https://picsum.photos/1000/1000?random=1",
                            CreatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(1251),
                            Email = "doe@mail.com",
                            FirstName = "John",
                            LastName = "Doe",
                            Password = "password",
                            Role = Role.Customer,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(1252)
                        });
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.Variant", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Color>("Color")
                        .HasColumnType("color")
                        .HasColumnName("color");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid")
                        .HasColumnName("product_id");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer")
                        .HasColumnName("quantity");

                    b.Property<Size>("Size")
                        .HasColumnType("size")
                        .HasColumnName("size");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id")
                        .HasName("pk_variants");

                    b.HasIndex("ProductId")
                        .HasDatabaseName("ix_variants_product_id");

                    b.ToTable("variants", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("378fd054-6a06-4dd5-a204-d6902c38aebc"),
                            Color = Color.Red,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2187),
                            ProductId = new Guid("bc2983a5-b13c-49a4-9a6c-29c4dad9c355"),
                            Quantity = 10,
                            Size = Size.L,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2189)
                        },
                        new
                        {
                            Id = new Guid("1606684a-8f64-4184-bb0e-8ddfe4b8218f"),
                            Color = Color.Blue,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2197),
                            ProductId = new Guid("bc2983a5-b13c-49a4-9a6c-29c4dad9c355"),
                            Quantity = 20,
                            Size = Size.XL,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2199)
                        },
                        new
                        {
                            Id = new Guid("c5946cb5-a35d-480a-81e1-242bd8e4770e"),
                            Color = Color.Black,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2203),
                            ProductId = new Guid("bc2983a5-b13c-49a4-9a6c-29c4dad9c355"),
                            Quantity = 30,
                            Size = Size.XXXL,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2205)
                        },
                        new
                        {
                            Id = new Guid("e7d4d017-5dbd-46da-9db8-5e47011d8aca"),
                            Color = Color.Red,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2209),
                            ProductId = new Guid("fedfd1c9-a73a-47bf-a635-370c193fc1df"),
                            Quantity = 20,
                            Size = Size.L,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2211)
                        },
                        new
                        {
                            Id = new Guid("35d4b9ac-fd39-49a0-bea3-1b71e0c0f34e"),
                            Color = Color.Blue,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2218),
                            ProductId = new Guid("fedfd1c9-a73a-47bf-a635-370c193fc1df"),
                            Quantity = 20,
                            Size = Size.XL,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2220)
                        },
                        new
                        {
                            Id = new Guid("a5eaf264-5683-4013-b271-80e6dfafe53c"),
                            Color = Color.Black,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2225),
                            ProductId = new Guid("fedfd1c9-a73a-47bf-a635-370c193fc1df"),
                            Quantity = 30,
                            Size = Size.XXXL,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2227)
                        },
                        new
                        {
                            Id = new Guid("ea584c29-9b4a-414d-acbe-2acf9569590c"),
                            Color = Color.Red,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2231),
                            ProductId = new Guid("865770da-89af-4719-b00c-310b57d535e1"),
                            Quantity = 10,
                            Size = Size.L,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2233)
                        },
                        new
                        {
                            Id = new Guid("542605b3-9c69-4eb3-b14f-a7a8cb0f6022"),
                            Color = Color.Blue,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2237),
                            ProductId = new Guid("865770da-89af-4719-b00c-310b57d535e1"),
                            Quantity = 20,
                            Size = Size.XL,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2239)
                        },
                        new
                        {
                            Id = new Guid("3dc2a021-f094-49d2-ac6f-e6c78f9189bf"),
                            Color = Color.Black,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2243),
                            ProductId = new Guid("865770da-89af-4719-b00c-310b57d535e1"),
                            Quantity = 30,
                            Size = Size.XXXL,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2245)
                        },
                        new
                        {
                            Id = new Guid("5bdacdcf-3c94-45fc-b287-382390e61f21"),
                            Color = Color.Red,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2251),
                            ProductId = new Guid("bf49c60a-9173-4533-8ca6-182cc7f685eb"),
                            Quantity = 10,
                            Size = Size.L,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2253)
                        },
                        new
                        {
                            Id = new Guid("736af532-4b0b-4183-9872-ab108949d295"),
                            Color = Color.Blue,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2257),
                            ProductId = new Guid("bf49c60a-9173-4533-8ca6-182cc7f685eb"),
                            Quantity = 20,
                            Size = Size.XL,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2259)
                        },
                        new
                        {
                            Id = new Guid("5ef886ec-d776-48e9-b21c-3a6adaf24551"),
                            Color = Color.Black,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2263),
                            ProductId = new Guid("bf49c60a-9173-4533-8ca6-182cc7f685eb"),
                            Quantity = 30,
                            Size = Size.XXXL,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2265)
                        },
                        new
                        {
                            Id = new Guid("c326bbdb-9a62-4928-9311-274acb77317d"),
                            Color = Color.Red,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2271),
                            ProductId = new Guid("271309f9-03ae-4a21-a98c-cb2b911d7996"),
                            Quantity = 10,
                            Size = Size.L,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2273)
                        },
                        new
                        {
                            Id = new Guid("edabe448-20b9-498d-b319-356bff9c7e9c"),
                            Color = Color.Blue,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2277),
                            ProductId = new Guid("271309f9-03ae-4a21-a98c-cb2b911d7996"),
                            Quantity = 20,
                            Size = Size.XL,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2279)
                        },
                        new
                        {
                            Id = new Guid("19c54258-2c40-4e20-a79c-a667c7093d34"),
                            Color = Color.Black,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2283),
                            ProductId = new Guid("271309f9-03ae-4a21-a98c-cb2b911d7996"),
                            Quantity = 30,
                            Size = Size.XXXL,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2285)
                        },
                        new
                        {
                            Id = new Guid("cdf2265e-99c5-4cc2-a9e7-4b8e60557f4e"),
                            Color = Color.Red,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2289),
                            ProductId = new Guid("46e235cb-57a7-4eaa-b8c0-fc8096daee7b"),
                            Quantity = 10,
                            Size = Size.L,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2291)
                        },
                        new
                        {
                            Id = new Guid("2c56314a-da2c-49f2-b239-c6a059472184"),
                            Color = Color.Blue,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2295),
                            ProductId = new Guid("46e235cb-57a7-4eaa-b8c0-fc8096daee7b"),
                            Quantity = 20,
                            Size = Size.XL,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2297)
                        },
                        new
                        {
                            Id = new Guid("0b042f83-7c72-4fa9-b2ae-2bd05e66d327"),
                            Color = Color.Black,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2302),
                            ProductId = new Guid("46e235cb-57a7-4eaa-b8c0-fc8096daee7b"),
                            Quantity = 30,
                            Size = Size.XXXL,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2304)
                        },
                        new
                        {
                            Id = new Guid("92b34406-d813-402e-b6f8-f558d4adec29"),
                            Color = Color.Red,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2309),
                            ProductId = new Guid("425f57d3-5bcd-42cd-a401-9a3a9af83c8f"),
                            Quantity = 10,
                            Size = Size.L,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2311)
                        },
                        new
                        {
                            Id = new Guid("810a3fc0-ecd1-467c-b982-81b4fdc05571"),
                            Color = Color.Blue,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2315),
                            ProductId = new Guid("425f57d3-5bcd-42cd-a401-9a3a9af83c8f"),
                            Quantity = 20,
                            Size = Size.XL,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2317)
                        },
                        new
                        {
                            Id = new Guid("7036e9e1-e323-46fb-b779-8cc1a02b8f20"),
                            Color = Color.Black,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2323),
                            ProductId = new Guid("425f57d3-5bcd-42cd-a401-9a3a9af83c8f"),
                            Quantity = 30,
                            Size = Size.XXXL,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2325)
                        },
                        new
                        {
                            Id = new Guid("18386a18-60ae-464a-8d32-9cc0314f3848"),
                            Color = Color.Red,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2329),
                            ProductId = new Guid("30c4e1a7-3b0f-40e9-be69-903936c22290"),
                            Quantity = 10,
                            Size = Size.L,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2331)
                        },
                        new
                        {
                            Id = new Guid("a94d2b38-74a2-412d-9661-9efd1ba56db6"),
                            Color = Color.Blue,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2335),
                            ProductId = new Guid("30c4e1a7-3b0f-40e9-be69-903936c22290"),
                            Quantity = 20,
                            Size = Size.XL,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2337)
                        },
                        new
                        {
                            Id = new Guid("1b4b2abb-f191-46b5-b20a-c2782301db9f"),
                            Color = Color.Black,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2341),
                            ProductId = new Guid("30c4e1a7-3b0f-40e9-be69-903936c22290"),
                            Quantity = 30,
                            Size = Size.XXXL,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2343)
                        },
                        new
                        {
                            Id = new Guid("5eacea73-4352-4339-a768-167cc44d2050"),
                            Color = Color.Red,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2347),
                            ProductId = new Guid("7f49c05a-d60c-49e6-b804-f3eb5a65522f"),
                            Quantity = 10,
                            Size = Size.L,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2349)
                        },
                        new
                        {
                            Id = new Guid("bf311524-d844-4ca7-b2e6-7c0eea11471b"),
                            Color = Color.Blue,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2353),
                            ProductId = new Guid("7f49c05a-d60c-49e6-b804-f3eb5a65522f"),
                            Quantity = 20,
                            Size = Size.XL,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2355)
                        },
                        new
                        {
                            Id = new Guid("7717ce33-7d0e-4c74-a590-ae2f773d00fe"),
                            Color = Color.Black,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2359),
                            ProductId = new Guid("7f49c05a-d60c-49e6-b804-f3eb5a65522f"),
                            Quantity = 30,
                            Size = Size.XXXL,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2361)
                        },
                        new
                        {
                            Id = new Guid("9299821b-8f3c-4581-8806-857cdcdb3cb5"),
                            Color = Color.Red,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2365),
                            ProductId = new Guid("ead99f26-fbfb-4b83-bf74-2ef2fd2b4754"),
                            Quantity = 10,
                            Size = Size.L,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2367)
                        },
                        new
                        {
                            Id = new Guid("ad6a63fd-be69-4e22-ab1c-5bc27f837334"),
                            Color = Color.Blue,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2373),
                            ProductId = new Guid("ead99f26-fbfb-4b83-bf74-2ef2fd2b4754"),
                            Quantity = 20,
                            Size = Size.XL,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2375)
                        },
                        new
                        {
                            Id = new Guid("7217a2bf-d31a-4055-aad3-b90d3e0e2ac0"),
                            Color = Color.Black,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2380),
                            ProductId = new Guid("ead99f26-fbfb-4b83-bf74-2ef2fd2b4754"),
                            Quantity = 30,
                            Size = Size.XXXL,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2381)
                        },
                        new
                        {
                            Id = new Guid("43e03655-6491-41ff-bbba-df7bfb312aea"),
                            Color = Color.Red,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2386),
                            ProductId = new Guid("052e6003-3e9b-43f3-9d59-0656df90989e"),
                            Quantity = 10,
                            Size = Size.L,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2388)
                        },
                        new
                        {
                            Id = new Guid("b9365cdf-fb4c-43d4-907a-45300544523f"),
                            Color = Color.Blue,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2392),
                            ProductId = new Guid("052e6003-3e9b-43f3-9d59-0656df90989e"),
                            Quantity = 20,
                            Size = Size.XL,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2393)
                        },
                        new
                        {
                            Id = new Guid("a5929240-ca2a-47ac-9970-b57f21fc41c2"),
                            Color = Color.Black,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2398),
                            ProductId = new Guid("052e6003-3e9b-43f3-9d59-0656df90989e"),
                            Quantity = 30,
                            Size = Size.XXXL,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2399)
                        },
                        new
                        {
                            Id = new Guid("f0982c66-1311-4a0f-a06e-eca203500cda"),
                            Color = Color.Red,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2405),
                            ProductId = new Guid("b4143d6b-c302-4215-82e9-c9123d2f2ee5"),
                            Quantity = 10,
                            Size = Size.L,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2407)
                        },
                        new
                        {
                            Id = new Guid("90383e84-2272-467b-a1fa-2da7477ff602"),
                            Color = Color.Blue,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2411),
                            ProductId = new Guid("b4143d6b-c302-4215-82e9-c9123d2f2ee5"),
                            Quantity = 20,
                            Size = Size.XL,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2413)
                        },
                        new
                        {
                            Id = new Guid("f9f60e91-a11e-4527-84b0-e6b9b663c3cb"),
                            Color = Color.Black,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2417),
                            ProductId = new Guid("b4143d6b-c302-4215-82e9-c9123d2f2ee5"),
                            Quantity = 30,
                            Size = Size.XXXL,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2419)
                        },
                        new
                        {
                            Id = new Guid("2908b6ef-2ea9-4931-88b9-15b009f657e9"),
                            Color = Color.Red,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2425),
                            ProductId = new Guid("41dde13b-dbcc-4f51-a31c-2231f94ddcab"),
                            Quantity = 10,
                            Size = Size.L,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2427)
                        },
                        new
                        {
                            Id = new Guid("72185a29-da69-4b8a-9dcd-e3861099bc5b"),
                            Color = Color.Blue,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2431),
                            ProductId = new Guid("41dde13b-dbcc-4f51-a31c-2231f94ddcab"),
                            Quantity = 20,
                            Size = Size.XL,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2433)
                        },
                        new
                        {
                            Id = new Guid("45679303-ba7c-414e-8631-aa934efe63be"),
                            Color = Color.Black,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2437),
                            ProductId = new Guid("41dde13b-dbcc-4f51-a31c-2231f94ddcab"),
                            Quantity = 30,
                            Size = Size.XXXL,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2439)
                        },
                        new
                        {
                            Id = new Guid("067f022f-9bfe-42dd-ab8f-0a12be6b5b35"),
                            Color = Color.Red,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2443),
                            ProductId = new Guid("9101df8f-38e3-40de-a46a-8ca66c26222d"),
                            Quantity = 10,
                            Size = Size.L,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2445)
                        },
                        new
                        {
                            Id = new Guid("d1fee03e-80c4-49f0-8611-cf92782eb9ed"),
                            Color = Color.Blue,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2449),
                            ProductId = new Guid("9101df8f-38e3-40de-a46a-8ca66c26222d"),
                            Quantity = 20,
                            Size = Size.XL,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2451)
                        },
                        new
                        {
                            Id = new Guid("4e24c866-899a-4d52-a972-7f84c4e42bb8"),
                            Color = Color.Black,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2455),
                            ProductId = new Guid("9101df8f-38e3-40de-a46a-8ca66c26222d"),
                            Quantity = 30,
                            Size = Size.XXXL,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2457)
                        },
                        new
                        {
                            Id = new Guid("ade3d944-14c9-4f2d-8655-95408d00b66b"),
                            Color = Color.Red,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2461),
                            ProductId = new Guid("8b441114-e030-4412-8952-2370a4b7f05a"),
                            Quantity = 10,
                            Size = Size.L,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2463)
                        },
                        new
                        {
                            Id = new Guid("44e151b6-fe81-44cc-af7e-ef01517692f7"),
                            Color = Color.Blue,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2467),
                            ProductId = new Guid("8b441114-e030-4412-8952-2370a4b7f05a"),
                            Quantity = 20,
                            Size = Size.XL,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2469)
                        },
                        new
                        {
                            Id = new Guid("48dcb9c5-14ec-48c8-b5a6-d2f27a54849b"),
                            Color = Color.Black,
                            CreatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2475),
                            ProductId = new Guid("8b441114-e030-4412-8952-2370a4b7f05a"),
                            Quantity = 30,
                            Size = Size.XXXL,
                            UpdatedAt = new DateTime(2023, 12, 26, 16, 21, 33, 993, DateTimeKind.Local).AddTicks(2477)
                        });
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.Address", b =>
                {
                    b.HasOne("EcommerceAPI.Core.src.Entity.User", null)
                        .WithMany("Addresses")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_addresses_users_user_id");
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.Image", b =>
                {
                    b.HasOne("EcommerceAPI.Core.src.Entity.Product", null)
                        .WithMany("Images")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_images_products_product_id");
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.Order", b =>
                {
                    b.HasOne("EcommerceAPI.Core.src.Entity.User", null)
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .HasConstraintName("fk_orders_users_user_id");
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.OrderItem", b =>
                {
                    b.HasOne("EcommerceAPI.Core.src.Entity.Order", null)
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_order_items_orders_order_id");

                    b.HasOne("EcommerceAPI.Core.src.Entity.Product", null)
                        .WithMany("OrderItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_order_items_products_product_id");
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.Product", b =>
                {
                    b.HasOne("EcommerceAPI.Core.src.Entity.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_products_categories_category_id");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.Review", b =>
                {
                    b.HasOne("EcommerceAPI.Core.src.Entity.Product", null)
                        .WithMany("Reviews")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_reviews_products_product_id");

                    b.HasOne("EcommerceAPI.Core.src.Entity.User", null)
                        .WithMany("Reviews")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_reviews_users_user_id");
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.Variant", b =>
                {
                    b.HasOne("EcommerceAPI.Core.src.Entity.Product", null)
                        .WithMany("Variants")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_variants_products_product_id");
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.Order", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.Product", b =>
                {
                    b.Navigation("Images");

                    b.Navigation("OrderItems");

                    b.Navigation("Reviews");

                    b.Navigation("Variants");
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.User", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("Orders");

                    b.Navigation("Reviews");
                });
#pragma warning restore 612, 618
        }
    }
}
