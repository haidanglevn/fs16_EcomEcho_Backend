// <auto-generated />
using System;
using EcommerceAPI.Core.src.Entity;
using EcommerceAPI.WebAPI.src.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace EcommerceAPI.WebAPI.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20231227040119_AddOrderItem")]
    partial class AddOrderItem
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresEnum(modelBuilder, "color", new[] { "black", "silver", "gray", "white", "maroon", "red", "purple", "fuchsia", "green", "lime", "olive", "yellow", "navy", "blue", "teal", "aqua", "orange", "alice_blue", "coral", "dark_blue" });
            NpgsqlModelBuilderExtensions.HasPostgresEnum(modelBuilder, "role", new[] { "customer", "admin" });
            NpgsqlModelBuilderExtensions.HasPostgresEnum(modelBuilder, "size", new[] { "xs", "s", "m", "l", "xl", "xxl", "xxxl" });
            NpgsqlModelBuilderExtensions.HasPostgresEnum(modelBuilder, "status", new[] { "pending", "shipping", "received" });
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.Address", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("city");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("country");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("postal_code");

                    b.Property<string>("State")
                        .HasColumnType("text")
                        .HasColumnName("state");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("street");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated_at");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_addresses");

                    b.HasIndex("UserId")
                        .HasDatabaseName("ix_addresses_user_id");

                    b.ToTable("addresses", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("a1a1a1a1-1234-1234-1234-1234567890ab"),
                            City = "Helsinki",
                            Country = "Finland",
                            CreatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(6219),
                            PostalCode = "00100",
                            Street = "Street 1",
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(6222),
                            UserId = new Guid("ad0ad1be-f7e5-47c7-b4c3-c17250cbebab")
                        },
                        new
                        {
                            Id = new Guid("a2a2a2a2-1234-1234-1234-1234567890ab"),
                            City = "Helsinki",
                            Country = "Finland",
                            CreatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(6229),
                            PostalCode = "00200",
                            Street = "Street 2",
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(6230),
                            UserId = new Guid("ad0ad1be-f7e5-47c7-b4c3-c17250cbebab")
                        },
                        new
                        {
                            Id = new Guid("a3a3a3a3-1234-1234-1234-1234567890ab"),
                            City = "Helsinki",
                            Country = "Finland",
                            CreatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(6233),
                            PostalCode = "00300",
                            Street = "Street 3",
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(6235),
                            UserId = new Guid("ad0ad1be-f7e5-47c7-b4c3-c17250cbebab")
                        },
                        new
                        {
                            Id = new Guid("b1b1b1b1-1234-1234-1234-1234567890ab"),
                            City = "Espoo",
                            Country = "Finland",
                            CreatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(6238),
                            PostalCode = "02100",
                            Street = "Street 1",
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(6239),
                            UserId = new Guid("760454fa-4af1-4ae6-9b18-ed3aec4be2a9")
                        },
                        new
                        {
                            Id = new Guid("b2b2b2b2-1234-1234-1234-1234567890ab"),
                            City = "Espoo",
                            Country = "Finland",
                            CreatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(6242),
                            PostalCode = "02100",
                            Street = "Street 2",
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(6244),
                            UserId = new Guid("760454fa-4af1-4ae6-9b18-ed3aec4be2a9")
                        },
                        new
                        {
                            Id = new Guid("b3b3b3b3-1234-1234-1234-1234567890ab"),
                            City = "Espoo",
                            Country = "Finland",
                            CreatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(6248),
                            PostalCode = "02100",
                            Street = "Street 3",
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(6249),
                            UserId = new Guid("760454fa-4af1-4ae6-9b18-ed3aec4be2a9")
                        },
                        new
                        {
                            Id = new Guid("c1c1c1c1-1234-1234-1234-1234567890ab"),
                            City = "Tampere",
                            Country = "Finland",
                            CreatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(6253),
                            PostalCode = "33100",
                            Street = "Street 3",
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(6254),
                            UserId = new Guid("611a0192-8b2e-4997-a8c8-59b93674d33b")
                        },
                        new
                        {
                            Id = new Guid("c2c2c2c2-1234-1234-1234-1234567890ab"),
                            City = "Tampere",
                            Country = "Finland",
                            CreatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(6258),
                            PostalCode = "33100",
                            Street = "Street 4",
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(6259),
                            UserId = new Guid("611a0192-8b2e-4997-a8c8-59b93674d33b")
                        },
                        new
                        {
                            Id = new Guid("c3c3c3c3-1234-1234-1234-1234567890ab"),
                            City = "Tampere",
                            Country = "Finland",
                            CreatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(6262),
                            PostalCode = "33100",
                            Street = "Street 6",
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(6264),
                            UserId = new Guid("611a0192-8b2e-4997-a8c8-59b93674d33b")
                        });
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("image");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id")
                        .HasName("pk_categories");

                    b.ToTable("categories", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("88499694-269b-4308-a64d-0e903a1f503d"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5168),
                            Image = "https://picsum.photos/1000/1000?random=99",
                            Name = "Fashion",
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5172)
                        },
                        new
                        {
                            Id = new Guid("23b984f8-26f7-49a5-82ea-f4f5ddd16eca"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5179),
                            Image = "https://picsum.photos/1000/1000?random=100",
                            Name = "Sport",
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5181)
                        },
                        new
                        {
                            Id = new Guid("e842529a-ac4a-48f4-9377-1786d94dd4e8"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5183),
                            Image = "https://picsum.photos/1000/1000?random=101",
                            Name = "Home",
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5185)
                        });
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.Image", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid")
                        .HasColumnName("product_id");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated_at");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("url");

                    b.HasKey("Id")
                        .HasName("pk_images");

                    b.HasIndex("ProductId")
                        .HasDatabaseName("ix_images_product_id");

                    b.ToTable("images", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("c2c23263-0bc3-4d72-aa75-5ecc41c327e0"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5453),
                            ProductId = new Guid("bc2983a5-b13c-49a4-9a6c-29c4dad9c355"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5456),
                            Url = "https://picsum.photos/1000/1000?random=1"
                        },
                        new
                        {
                            Id = new Guid("69adae26-2a1c-41f9-bc9d-fe9b53de197b"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5480),
                            ProductId = new Guid("bc2983a5-b13c-49a4-9a6c-29c4dad9c355"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5482),
                            Url = "https://picsum.photos/1000/1000?random=2"
                        },
                        new
                        {
                            Id = new Guid("bf9daabb-bcba-414a-8370-69fbb1106d8d"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5485),
                            ProductId = new Guid("bc2983a5-b13c-49a4-9a6c-29c4dad9c355"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5487),
                            Url = "https://picsum.photos/1000/1000?random=3"
                        },
                        new
                        {
                            Id = new Guid("966842fc-8cde-4695-b28a-c979ff408e88"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5504),
                            ProductId = new Guid("fedfd1c9-a73a-47bf-a635-370c193fc1df"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5506),
                            Url = "https://picsum.photos/1000/1000?random=4"
                        },
                        new
                        {
                            Id = new Guid("f980b69b-9c2b-44dc-86e1-8200861c590f"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5510),
                            ProductId = new Guid("fedfd1c9-a73a-47bf-a635-370c193fc1df"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5511),
                            Url = "https://picsum.photos/1000/1000?random=5"
                        },
                        new
                        {
                            Id = new Guid("2113d83b-03b1-40f4-aeab-176e1f8810e7"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5516),
                            ProductId = new Guid("fedfd1c9-a73a-47bf-a635-370c193fc1df"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5518),
                            Url = "https://picsum.photos/1000/1000?random=6"
                        },
                        new
                        {
                            Id = new Guid("562a39f5-f087-44b5-bd80-a47302f9324e"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5521),
                            ProductId = new Guid("865770da-89af-4719-b00c-310b57d535e1"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5523),
                            Url = "https://picsum.photos/1000/1000?random=7"
                        },
                        new
                        {
                            Id = new Guid("13eac297-914f-40f1-92a5-71424a0a4fc6"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5526),
                            ProductId = new Guid("865770da-89af-4719-b00c-310b57d535e1"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5528),
                            Url = "https://picsum.photos/1000/1000?random=8"
                        },
                        new
                        {
                            Id = new Guid("2a4fd27f-5984-498c-a91f-a1ea2cb9d680"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5531),
                            ProductId = new Guid("865770da-89af-4719-b00c-310b57d535e1"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5533),
                            Url = "https://picsum.photos/1000/1000?random=9"
                        },
                        new
                        {
                            Id = new Guid("2632e493-27cb-4c2b-9fd9-59f15f72e1a8"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5537),
                            ProductId = new Guid("bf49c60a-9173-4533-8ca6-182cc7f685eb"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5539),
                            Url = "https://picsum.photos/1000/1000?random=10"
                        },
                        new
                        {
                            Id = new Guid("d04c9f14-b62d-439b-9a07-b17dc74ed758"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5542),
                            ProductId = new Guid("bf49c60a-9173-4533-8ca6-182cc7f685eb"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5543),
                            Url = "https://picsum.photos/1000/1000?random=11"
                        },
                        new
                        {
                            Id = new Guid("33f90292-9737-48b6-9c9e-6e267b8f92e3"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5551),
                            ProductId = new Guid("bf49c60a-9173-4533-8ca6-182cc7f685eb"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5552),
                            Url = "https://picsum.photos/1000/1000?random=12"
                        },
                        new
                        {
                            Id = new Guid("6e2168a8-3605-4731-a905-8474a0933b5f"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5556),
                            ProductId = new Guid("271309f9-03ae-4a21-a98c-cb2b911d7996"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5557),
                            Url = "https://picsum.photos/1000/1000?random=13"
                        },
                        new
                        {
                            Id = new Guid("84a48997-3919-4bca-af3e-0beca4e372e3"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5560),
                            ProductId = new Guid("271309f9-03ae-4a21-a98c-cb2b911d7996"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5562),
                            Url = "https://picsum.photos/1000/1000?random=14"
                        },
                        new
                        {
                            Id = new Guid("049a7814-ebb8-4fc9-beb6-0a9681ea0081"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5565),
                            ProductId = new Guid("271309f9-03ae-4a21-a98c-cb2b911d7996"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5567),
                            Url = "https://picsum.photos/1000/1000?random=15"
                        },
                        new
                        {
                            Id = new Guid("66a23946-ec42-435a-99bc-e6d666306849"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5570),
                            ProductId = new Guid("46e235cb-57a7-4eaa-b8c0-fc8096daee7b"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5572),
                            Url = "https://picsum.photos/1000/1000?random=16"
                        },
                        new
                        {
                            Id = new Guid("e32a9661-7122-44f1-b44e-7c43761a3ec5"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5575),
                            ProductId = new Guid("46e235cb-57a7-4eaa-b8c0-fc8096daee7b"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5576),
                            Url = "https://picsum.photos/1000/1000?random=17"
                        },
                        new
                        {
                            Id = new Guid("6773417f-fd5f-410c-a2fd-c1fc0c1e566e"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5580),
                            ProductId = new Guid("46e235cb-57a7-4eaa-b8c0-fc8096daee7b"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5582),
                            Url = "https://picsum.photos/1000/1000?random=18"
                        },
                        new
                        {
                            Id = new Guid("92a21c96-5c6e-4d66-8012-02f059c04ffc"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5585),
                            ProductId = new Guid("425f57d3-5bcd-42cd-a401-9a3a9af83c8f"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5587),
                            Url = "https://picsum.photos/1000/1000?random=19"
                        },
                        new
                        {
                            Id = new Guid("5a9e15e2-64ef-480d-999e-ce036c507160"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5593),
                            ProductId = new Guid("425f57d3-5bcd-42cd-a401-9a3a9af83c8f"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5595),
                            Url = "https://picsum.photos/1000/1000?random=20"
                        },
                        new
                        {
                            Id = new Guid("e5f132d5-4b98-44a1-a02a-4ff6616b8544"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5598),
                            ProductId = new Guid("425f57d3-5bcd-42cd-a401-9a3a9af83c8f"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5600),
                            Url = "https://picsum.photos/1000/1000?random=21"
                        },
                        new
                        {
                            Id = new Guid("554a28b7-89d7-4a82-97ad-8c4860e7a4e0"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5603),
                            ProductId = new Guid("30c4e1a7-3b0f-40e9-be69-903936c22290"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5604),
                            Url = "https://picsum.photos/1000/1000?random=22"
                        },
                        new
                        {
                            Id = new Guid("884f7898-6180-4099-a077-84960d5c16f4"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5608),
                            ProductId = new Guid("30c4e1a7-3b0f-40e9-be69-903936c22290"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5609),
                            Url = "https://picsum.photos/1000/1000?random=23"
                        },
                        new
                        {
                            Id = new Guid("f9f3b0f8-01bb-4239-963a-218aac774c7a"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5613),
                            ProductId = new Guid("30c4e1a7-3b0f-40e9-be69-903936c22290"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5614),
                            Url = "https://picsum.photos/1000/1000?random=24"
                        },
                        new
                        {
                            Id = new Guid("80a66f5b-2912-4940-8d96-a7db807c0401"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5617),
                            ProductId = new Guid("7f49c05a-d60c-49e6-b804-f3eb5a65522f"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5619),
                            Url = "https://picsum.photos/1000/1000?random=25"
                        },
                        new
                        {
                            Id = new Guid("3df09fc8-d886-462e-8960-0e93ee03b638"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5622),
                            ProductId = new Guid("7f49c05a-d60c-49e6-b804-f3eb5a65522f"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5624),
                            Url = "https://picsum.photos/1000/1000?random=26"
                        },
                        new
                        {
                            Id = new Guid("99c74606-edcc-4bae-8a6b-95df82108334"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5627),
                            ProductId = new Guid("7f49c05a-d60c-49e6-b804-f3eb5a65522f"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5629),
                            Url = "https://picsum.photos/1000/1000?random=27"
                        },
                        new
                        {
                            Id = new Guid("62b911f4-88cd-4c26-8434-01e74d9dea1b"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5635),
                            ProductId = new Guid("ead99f26-fbfb-4b83-bf74-2ef2fd2b4754"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5636),
                            Url = "https://picsum.photos/1000/1000?random=28"
                        },
                        new
                        {
                            Id = new Guid("3222450d-bf8e-4764-af69-fd31ce6d0764"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5640),
                            ProductId = new Guid("ead99f26-fbfb-4b83-bf74-2ef2fd2b4754"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5641),
                            Url = "https://picsum.photos/1000/1000?random=29"
                        },
                        new
                        {
                            Id = new Guid("6bc36e47-95f5-4aa2-bc6a-e3720b71eb22"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5645),
                            ProductId = new Guid("ead99f26-fbfb-4b83-bf74-2ef2fd2b4754"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5646),
                            Url = "https://picsum.photos/1000/1000?random=30"
                        },
                        new
                        {
                            Id = new Guid("fe178187-3c75-45b6-b57c-a9fde7627451"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5649),
                            ProductId = new Guid("052e6003-3e9b-43f3-9d59-0656df90989e"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5651),
                            Url = "https://picsum.photos/1000/1000?random=31"
                        },
                        new
                        {
                            Id = new Guid("fa39fdc7-a333-4a5e-8895-4e601541b2e8"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5654),
                            ProductId = new Guid("052e6003-3e9b-43f3-9d59-0656df90989e"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5656),
                            Url = "https://picsum.photos/1000/1000?random=32"
                        },
                        new
                        {
                            Id = new Guid("7c07100a-c961-4371-8bb6-47c21c0dc662"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5659),
                            ProductId = new Guid("052e6003-3e9b-43f3-9d59-0656df90989e"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5660),
                            Url = "https://picsum.photos/1000/1000?random=33"
                        },
                        new
                        {
                            Id = new Guid("8082c257-a2b6-413e-a5fe-d9d42e23c0e1"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5665),
                            ProductId = new Guid("b4143d6b-c302-4215-82e9-c9123d2f2ee5"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5666),
                            Url = "https://picsum.photos/1000/1000?random=34"
                        },
                        new
                        {
                            Id = new Guid("e15002dc-4c0a-41ed-9710-848231da7160"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5670),
                            ProductId = new Guid("b4143d6b-c302-4215-82e9-c9123d2f2ee5"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5671),
                            Url = "https://picsum.photos/1000/1000?random=35"
                        },
                        new
                        {
                            Id = new Guid("ffc4f945-779d-4556-b62c-0d8c93fb68ff"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5677),
                            ProductId = new Guid("b4143d6b-c302-4215-82e9-c9123d2f2ee5"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5679),
                            Url = "https://picsum.photos/1000/1000?random=36"
                        },
                        new
                        {
                            Id = new Guid("0ecceeb9-714c-4525-8ab3-1585b4e1a119"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5682),
                            ProductId = new Guid("41dde13b-dbcc-4f51-a31c-2231f94ddcab"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5683),
                            Url = "https://picsum.photos/1000/1000?random=37"
                        },
                        new
                        {
                            Id = new Guid("cc16a6c4-245c-4bc6-8910-f9d6e2fb32fb"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5686),
                            ProductId = new Guid("41dde13b-dbcc-4f51-a31c-2231f94ddcab"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5688),
                            Url = "https://picsum.photos/1000/1000?random=38"
                        },
                        new
                        {
                            Id = new Guid("d83fd63e-d06f-4b91-8969-da229515ac7f"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5691),
                            ProductId = new Guid("41dde13b-dbcc-4f51-a31c-2231f94ddcab"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5693),
                            Url = "https://picsum.photos/1000/1000?random=39"
                        },
                        new
                        {
                            Id = new Guid("8ae242f2-1482-498e-8333-ae96b24866a8"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5696),
                            ProductId = new Guid("9101df8f-38e3-40de-a46a-8ca66c26222d"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5697),
                            Url = "https://picsum.photos/1000/1000?random=40"
                        },
                        new
                        {
                            Id = new Guid("36c5fc83-f2f8-44f5-9d2b-703d93cd8822"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5700),
                            ProductId = new Guid("9101df8f-38e3-40de-a46a-8ca66c26222d"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5702),
                            Url = "https://picsum.photos/1000/1000?random=41"
                        },
                        new
                        {
                            Id = new Guid("ff9ebddc-61e1-47a5-8a68-1f952848ff0a"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5705),
                            ProductId = new Guid("9101df8f-38e3-40de-a46a-8ca66c26222d"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5707),
                            Url = "https://picsum.photos/1000/1000?random=42"
                        },
                        new
                        {
                            Id = new Guid("31ececbe-4889-4b9e-a356-a2b9f52649b4"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5710),
                            ProductId = new Guid("8b441114-e030-4412-8952-2370a4b7f05a"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5711),
                            Url = "https://picsum.photos/1000/1000?random=43"
                        },
                        new
                        {
                            Id = new Guid("3a5301de-90a5-449d-84b1-80505a53b002"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5717),
                            ProductId = new Guid("8b441114-e030-4412-8952-2370a4b7f05a"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5718),
                            Url = "https://picsum.photos/1000/1000?random=44"
                        },
                        new
                        {
                            Id = new Guid("3c40208f-1896-4aaa-b422-a2a168775502"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5722),
                            ProductId = new Guid("8b441114-e030-4412-8952-2370a4b7f05a"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5723),
                            Url = "https://picsum.photos/1000/1000?random=45"
                        });
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<Status>("Status")
                        .HasColumnType("status")
                        .HasColumnName("status");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated_at");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_orders");

                    b.HasIndex("UserId")
                        .HasDatabaseName("ix_orders_user_id");

                    b.ToTable("orders", (string)null);
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.OrderItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uuid")
                        .HasColumnName("order_id");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric")
                        .HasColumnName("price");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid")
                        .HasColumnName("product_id");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer")
                        .HasColumnName("quantity");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated_at");

                    b.Property<Guid>("VariantId")
                        .HasColumnType("uuid")
                        .HasColumnName("variant_id");

                    b.HasKey("Id")
                        .HasName("pk_order_items");

                    b.HasIndex("OrderId")
                        .HasDatabaseName("ix_order_items_order_id");

                    b.HasIndex("ProductId")
                        .HasDatabaseName("ix_order_items_product_id");

                    b.HasIndex("VariantId")
                        .HasDatabaseName("ix_order_items_variant_id");

                    b.ToTable("order_items", (string)null);
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uuid")
                        .HasColumnName("category_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric")
                        .HasColumnName("price");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id")
                        .HasName("pk_products");

                    b.HasIndex("CategoryId")
                        .HasDatabaseName("ix_products_category_id");

                    b.ToTable("products", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("bc2983a5-b13c-49a4-9a6c-29c4dad9c355"),
                            CategoryId = new Guid("88499694-269b-4308-a64d-0e903a1f503d"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5240),
                            Description = "Description for Fashion Product 1",
                            Price = 100m,
                            Title = "Fashion Product 1",
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5243)
                        },
                        new
                        {
                            Id = new Guid("fedfd1c9-a73a-47bf-a635-370c193fc1df"),
                            CategoryId = new Guid("88499694-269b-4308-a64d-0e903a1f503d"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5249),
                            Description = "Description for Fashion Product 2",
                            Price = 140m,
                            Title = "Fashion Product 2",
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5250)
                        },
                        new
                        {
                            Id = new Guid("865770da-89af-4719-b00c-310b57d535e1"),
                            CategoryId = new Guid("88499694-269b-4308-a64d-0e903a1f503d"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5253),
                            Description = "Description for Fashion Product 3",
                            Price = 120m,
                            Title = "Fashion Product 3",
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5255)
                        },
                        new
                        {
                            Id = new Guid("bf49c60a-9173-4533-8ca6-182cc7f685eb"),
                            CategoryId = new Guid("88499694-269b-4308-a64d-0e903a1f503d"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5258),
                            Description = "Description for Fashion Product 4",
                            Price = 200m,
                            Title = "Fashion Product 4",
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5260)
                        },
                        new
                        {
                            Id = new Guid("271309f9-03ae-4a21-a98c-cb2b911d7996"),
                            CategoryId = new Guid("88499694-269b-4308-a64d-0e903a1f503d"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5263),
                            Description = "Description for Fashion Product 5",
                            Price = 104m,
                            Title = "Fashion Product 5",
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5264)
                        },
                        new
                        {
                            Id = new Guid("46e235cb-57a7-4eaa-b8c0-fc8096daee7b"),
                            CategoryId = new Guid("23b984f8-26f7-49a5-82ea-f4f5ddd16eca"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5275),
                            Description = "Description for Sport Product 1",
                            Price = 200m,
                            Title = "Sport Product 1",
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5276)
                        },
                        new
                        {
                            Id = new Guid("425f57d3-5bcd-42cd-a401-9a3a9af83c8f"),
                            CategoryId = new Guid("23b984f8-26f7-49a5-82ea-f4f5ddd16eca"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5279),
                            Description = "Description for Sport Product 2",
                            Price = 240m,
                            Title = "Sport Product 2",
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5281)
                        },
                        new
                        {
                            Id = new Guid("30c4e1a7-3b0f-40e9-be69-903936c22290"),
                            CategoryId = new Guid("23b984f8-26f7-49a5-82ea-f4f5ddd16eca"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5284),
                            Description = "Description for Sport Product 3",
                            Price = 154m,
                            Title = "Sport Product 3",
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5286)
                        },
                        new
                        {
                            Id = new Guid("7f49c05a-d60c-49e6-b804-f3eb5a65522f"),
                            CategoryId = new Guid("23b984f8-26f7-49a5-82ea-f4f5ddd16eca"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5289),
                            Description = "Description for Sport Product 4",
                            Price = 333m,
                            Title = "Sport Product 4",
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5290)
                        },
                        new
                        {
                            Id = new Guid("ead99f26-fbfb-4b83-bf74-2ef2fd2b4754"),
                            CategoryId = new Guid("23b984f8-26f7-49a5-82ea-f4f5ddd16eca"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5294),
                            Description = "Description for Sport Product 5",
                            Price = 205m,
                            Title = "Sport Product 5",
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5296)
                        },
                        new
                        {
                            Id = new Guid("052e6003-3e9b-43f3-9d59-0656df90989e"),
                            CategoryId = new Guid("e842529a-ac4a-48f4-9377-1786d94dd4e8"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5299),
                            Description = "Description for Home Product 1",
                            Price = 300m,
                            Title = "Home Product 1",
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5300)
                        },
                        new
                        {
                            Id = new Guid("b4143d6b-c302-4215-82e9-c9123d2f2ee5"),
                            CategoryId = new Guid("e842529a-ac4a-48f4-9377-1786d94dd4e8"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5373),
                            Description = "Description for Home Product 2",
                            Price = 32m,
                            Title = "Home Product 2",
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5375)
                        },
                        new
                        {
                            Id = new Guid("41dde13b-dbcc-4f51-a31c-2231f94ddcab"),
                            CategoryId = new Guid("e842529a-ac4a-48f4-9377-1786d94dd4e8"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5387),
                            Description = "Description for Home Product 3",
                            Price = 56m,
                            Title = "Home Product 3",
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5389)
                        },
                        new
                        {
                            Id = new Guid("9101df8f-38e3-40de-a46a-8ca66c26222d"),
                            CategoryId = new Guid("e842529a-ac4a-48f4-9377-1786d94dd4e8"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5392),
                            Description = "Description for Home Product 4",
                            Price = 143m,
                            Title = "Home Product 4",
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5393)
                        },
                        new
                        {
                            Id = new Guid("8b441114-e030-4412-8952-2370a4b7f05a"),
                            CategoryId = new Guid("e842529a-ac4a-48f4-9377-1786d94dd4e8"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5396),
                            Description = "Description for Home Product 5",
                            Price = 3000m,
                            Title = "Home Product 5",
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5398)
                        });
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.Review", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("comment");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid")
                        .HasColumnName("product_id");

                    b.Property<int>("Rating")
                        .HasColumnType("integer")
                        .HasColumnName("rating");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated_at");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_reviews");

                    b.HasIndex("ProductId")
                        .HasDatabaseName("ix_reviews_product_id");

                    b.HasIndex("UserId", "ProductId")
                        .IsUnique()
                        .HasDatabaseName("ix_reviews_user_id_product_id");

                    b.ToTable("reviews", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("c9e3c10d-b843-434d-bcbe-bfe35e17dd52"),
                            Comment = "Great product!",
                            CreatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(6129),
                            ProductId = new Guid("bc2983a5-b13c-49a4-9a6c-29c4dad9c355"),
                            Rating = 5,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(6132),
                            UserId = new Guid("ad0ad1be-f7e5-47c7-b4c3-c17250cbebab")
                        },
                        new
                        {
                            Id = new Guid("71dd6268-f87a-4816-a5bf-c94769a51473"),
                            Comment = "Really enjoyed this.",
                            CreatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(6137),
                            ProductId = new Guid("425f57d3-5bcd-42cd-a401-9a3a9af83c8f"),
                            Rating = 4,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(6139),
                            UserId = new Guid("760454fa-4af1-4ae6-9b18-ed3aec4be2a9")
                        },
                        new
                        {
                            Id = new Guid("eb57b891-c019-46c9-9c6e-630a79d19787"),
                            Comment = "Good quality, but expensive.",
                            CreatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(6142),
                            ProductId = new Guid("41dde13b-dbcc-4f51-a31c-2231f94ddcab"),
                            Rating = 3,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(6143),
                            UserId = new Guid("ad0ad1be-f7e5-47c7-b4c3-c17250cbebab")
                        },
                        new
                        {
                            Id = new Guid("9aa483ac-872b-468c-af4f-2c1f94beec3a"),
                            Comment = "Loved the design!",
                            CreatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(6146),
                            ProductId = new Guid("bf49c60a-9173-4533-8ca6-182cc7f685eb"),
                            Rating = 4,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(6148),
                            UserId = new Guid("760454fa-4af1-4ae6-9b18-ed3aec4be2a9")
                        },
                        new
                        {
                            Id = new Guid("ca5b7d5d-309c-4973-ad8c-132a4142b5c1"),
                            Comment = "Perfect for my needs!",
                            CreatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(6151),
                            ProductId = new Guid("ead99f26-fbfb-4b83-bf74-2ef2fd2b4754"),
                            Rating = 5,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(6152),
                            UserId = new Guid("611a0192-8b2e-4997-a8c8-59b93674d33b")
                        },
                        new
                        {
                            Id = new Guid("a4438f9a-a573-4967-96c3-6a38fcfb6132"),
                            Comment = "Nice product, quick delivery.",
                            CreatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(6157),
                            ProductId = new Guid("fedfd1c9-a73a-47bf-a635-370c193fc1df"),
                            Rating = 4,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(6159),
                            UserId = new Guid("611a0192-8b2e-4997-a8c8-59b93674d33b")
                        },
                        new
                        {
                            Id = new Guid("c2cd9d37-25d0-4b5d-a336-8214ce83b648"),
                            Comment = "Outstanding quality!",
                            CreatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(6162),
                            ProductId = new Guid("052e6003-3e9b-43f3-9d59-0656df90989e"),
                            Rating = 5,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(6163),
                            UserId = new Guid("611a0192-8b2e-4997-a8c8-59b93674d33b")
                        },
                        new
                        {
                            Id = new Guid("dfc6ffd5-140c-4505-9428-7fe852a93afc"),
                            Comment = "Decent, but expected more.",
                            CreatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(6166),
                            ProductId = new Guid("865770da-89af-4719-b00c-310b57d535e1"),
                            Rating = 3,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(6168),
                            UserId = new Guid("ad0ad1be-f7e5-47c7-b4c3-c17250cbebab")
                        },
                        new
                        {
                            Id = new Guid("38fb4093-965e-4e3f-a7a2-c19103fc239e"),
                            Comment = "Absolutely love this!",
                            CreatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(6170),
                            ProductId = new Guid("8b441114-e030-4412-8952-2370a4b7f05a"),
                            Rating = 5,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(6172),
                            UserId = new Guid("760454fa-4af1-4ae6-9b18-ed3aec4be2a9")
                        },
                        new
                        {
                            Id = new Guid("30a4ff5e-3bd1-429d-9981-adbcd46e2537"),
                            Comment = "Not as described, disappointed.",
                            CreatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(6176),
                            ProductId = new Guid("30c4e1a7-3b0f-40e9-be69-903936c22290"),
                            Rating = 2,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(6177),
                            UserId = new Guid("611a0192-8b2e-4997-a8c8-59b93674d33b")
                        });
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Avatar")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("avatar");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("first_name");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("last_name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("password");

                    b.Property<Role>("Role")
                        .HasColumnType("role")
                        .HasColumnName("role");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id")
                        .HasName("pk_users");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasDatabaseName("ix_users_email");

                    b.ToTable("users", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("ad0ad1be-f7e5-47c7-b4c3-c17250cbebab"),
                            Avatar = "https://picsum.photos/1000/1000?random=150",
                            CreatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 332, DateTimeKind.Local).AddTicks(198),
                            Email = "admin@mail.com",
                            FirstName = "Admin",
                            LastName = "admin",
                            Password = "7x0o3lLBaO1ANrtnYuCu6g==;FPwpYul9DCIfJ7VSKiTOZ77OUS23inh2V3eAZVK83HU=",
                            Role = Role.Admin,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 332, DateTimeKind.Local).AddTicks(249)
                        },
                        new
                        {
                            Id = new Guid("760454fa-4af1-4ae6-9b18-ed3aec4be2a9"),
                            Avatar = "https://picsum.photos/1000/1000?random=151",
                            CreatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 333, DateTimeKind.Local).AddTicks(5577),
                            Email = "cena@mail.com",
                            FirstName = "John",
                            LastName = "Cena",
                            Password = "5nq+Nes00jnE2gxs8J5PSw==;DxsK4oPAWqGrXt5p2R/8PTnVypjsYAsFCgiLRPM+73I=",
                            Role = Role.Customer,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 333, DateTimeKind.Local).AddTicks(5593)
                        },
                        new
                        {
                            Id = new Guid("611a0192-8b2e-4997-a8c8-59b93674d33b"),
                            Avatar = "https://picsum.photos/1000/1000?random=152",
                            CreatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 335, DateTimeKind.Local).AddTicks(113),
                            Email = "doe@mail.com",
                            FirstName = "John",
                            LastName = "Doe",
                            Password = "GJFgLtuNgwLnuNPZmuRyjQ==;mIKrMrMzy8wcEOSr9v06sSY9KKWziW7B6Sc7GB3aRAE=",
                            Role = Role.Customer,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 335, DateTimeKind.Local).AddTicks(116)
                        });
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.Variant", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Color>("Color")
                        .HasColumnType("color")
                        .HasColumnName("color");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid")
                        .HasColumnName("product_id");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer")
                        .HasColumnName("quantity");

                    b.Property<Size>("Size")
                        .HasColumnType("size")
                        .HasColumnName("size");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id")
                        .HasName("pk_variants");

                    b.HasIndex("ProductId")
                        .HasDatabaseName("ix_variants_product_id");

                    b.ToTable("variants", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("5e6ec3b8-11e6-417b-b29e-231cd9bfe1c6"),
                            Color = Color.Red,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5787),
                            ProductId = new Guid("bc2983a5-b13c-49a4-9a6c-29c4dad9c355"),
                            Quantity = 10,
                            Size = Size.L,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5790)
                        },
                        new
                        {
                            Id = new Guid("df75e9ac-4468-46b1-8487-761495ad13f8"),
                            Color = Color.Blue,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5798),
                            ProductId = new Guid("bc2983a5-b13c-49a4-9a6c-29c4dad9c355"),
                            Quantity = 20,
                            Size = Size.XL,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5799)
                        },
                        new
                        {
                            Id = new Guid("f1c7654e-c497-4466-b994-0f9ad3b26443"),
                            Color = Color.Black,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5803),
                            ProductId = new Guid("bc2983a5-b13c-49a4-9a6c-29c4dad9c355"),
                            Quantity = 30,
                            Size = Size.XXXL,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5804)
                        },
                        new
                        {
                            Id = new Guid("f91bbd8b-3205-46dc-8f28-a6121ec0e683"),
                            Color = Color.Red,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5808),
                            ProductId = new Guid("fedfd1c9-a73a-47bf-a635-370c193fc1df"),
                            Quantity = 20,
                            Size = Size.L,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5810)
                        },
                        new
                        {
                            Id = new Guid("e0bba871-7283-43a6-bded-2bca067b605a"),
                            Color = Color.Blue,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5813),
                            ProductId = new Guid("fedfd1c9-a73a-47bf-a635-370c193fc1df"),
                            Quantity = 20,
                            Size = Size.XL,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5815)
                        },
                        new
                        {
                            Id = new Guid("4ba1ce7d-ec6f-441f-82fd-0afbffaa6cbe"),
                            Color = Color.Black,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5819),
                            ProductId = new Guid("fedfd1c9-a73a-47bf-a635-370c193fc1df"),
                            Quantity = 30,
                            Size = Size.XXXL,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5821)
                        },
                        new
                        {
                            Id = new Guid("f208db2d-b0d1-42a2-b093-3862d3a60889"),
                            Color = Color.Red,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5827),
                            ProductId = new Guid("865770da-89af-4719-b00c-310b57d535e1"),
                            Quantity = 10,
                            Size = Size.L,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5828)
                        },
                        new
                        {
                            Id = new Guid("1885f665-9973-4c19-b210-4b0363578aff"),
                            Color = Color.Blue,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5832),
                            ProductId = new Guid("865770da-89af-4719-b00c-310b57d535e1"),
                            Quantity = 20,
                            Size = Size.XL,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5833)
                        },
                        new
                        {
                            Id = new Guid("845562b6-c42c-436f-9348-ef57fd06d1f7"),
                            Color = Color.Black,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5837),
                            ProductId = new Guid("865770da-89af-4719-b00c-310b57d535e1"),
                            Quantity = 30,
                            Size = Size.XXXL,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5838)
                        },
                        new
                        {
                            Id = new Guid("7f1d95b1-6390-4cdb-9af5-9bb0066259f1"),
                            Color = Color.Red,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5843),
                            ProductId = new Guid("bf49c60a-9173-4533-8ca6-182cc7f685eb"),
                            Quantity = 10,
                            Size = Size.L,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5844)
                        },
                        new
                        {
                            Id = new Guid("e8b284f0-87d1-40d3-b73d-2e35d74e7afa"),
                            Color = Color.Blue,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5848),
                            ProductId = new Guid("bf49c60a-9173-4533-8ca6-182cc7f685eb"),
                            Quantity = 20,
                            Size = Size.XL,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5849)
                        },
                        new
                        {
                            Id = new Guid("30d5c7d8-aed1-46c1-a54f-9c12083d234b"),
                            Color = Color.Black,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5853),
                            ProductId = new Guid("bf49c60a-9173-4533-8ca6-182cc7f685eb"),
                            Quantity = 30,
                            Size = Size.XXXL,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5854)
                        },
                        new
                        {
                            Id = new Guid("3f868604-3c57-4168-b50d-1893525c2b42"),
                            Color = Color.Red,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5892),
                            ProductId = new Guid("271309f9-03ae-4a21-a98c-cb2b911d7996"),
                            Quantity = 10,
                            Size = Size.L,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5894)
                        },
                        new
                        {
                            Id = new Guid("5353d817-73a6-4dad-a679-1639ea0bc14c"),
                            Color = Color.Blue,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5898),
                            ProductId = new Guid("271309f9-03ae-4a21-a98c-cb2b911d7996"),
                            Quantity = 20,
                            Size = Size.XL,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5900)
                        },
                        new
                        {
                            Id = new Guid("f819b2df-e960-4066-b2c7-c6b3783e325f"),
                            Color = Color.Black,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5905),
                            ProductId = new Guid("271309f9-03ae-4a21-a98c-cb2b911d7996"),
                            Quantity = 30,
                            Size = Size.XXXL,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5907)
                        },
                        new
                        {
                            Id = new Guid("07f18fd0-f84c-4241-bcab-eab47b4e9ca3"),
                            Color = Color.Red,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5910),
                            ProductId = new Guid("46e235cb-57a7-4eaa-b8c0-fc8096daee7b"),
                            Quantity = 10,
                            Size = Size.L,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5912)
                        },
                        new
                        {
                            Id = new Guid("a44a22fc-ea52-4eed-aa90-0a91f7b00f37"),
                            Color = Color.Blue,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5915),
                            ProductId = new Guid("46e235cb-57a7-4eaa-b8c0-fc8096daee7b"),
                            Quantity = 20,
                            Size = Size.XL,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5917)
                        },
                        new
                        {
                            Id = new Guid("0e77e3ee-95ab-49d6-964e-cdf7ceef0750"),
                            Color = Color.Black,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5922),
                            ProductId = new Guid("46e235cb-57a7-4eaa-b8c0-fc8096daee7b"),
                            Quantity = 30,
                            Size = Size.XXXL,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5923)
                        },
                        new
                        {
                            Id = new Guid("0f8094db-6303-4ae3-9576-3483c99692ec"),
                            Color = Color.Red,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5927),
                            ProductId = new Guid("425f57d3-5bcd-42cd-a401-9a3a9af83c8f"),
                            Quantity = 10,
                            Size = Size.L,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5928)
                        },
                        new
                        {
                            Id = new Guid("3c89a9db-d5d3-47ad-bb60-666faba13bbf"),
                            Color = Color.Blue,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5932),
                            ProductId = new Guid("425f57d3-5bcd-42cd-a401-9a3a9af83c8f"),
                            Quantity = 20,
                            Size = Size.XL,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5934)
                        },
                        new
                        {
                            Id = new Guid("be071f93-8c23-42b7-b068-00e8ae2faaed"),
                            Color = Color.Black,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5937),
                            ProductId = new Guid("425f57d3-5bcd-42cd-a401-9a3a9af83c8f"),
                            Quantity = 30,
                            Size = Size.XXXL,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5939)
                        },
                        new
                        {
                            Id = new Guid("62238faf-db0f-4fd4-86c7-981d2136c3fc"),
                            Color = Color.Red,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5942),
                            ProductId = new Guid("30c4e1a7-3b0f-40e9-be69-903936c22290"),
                            Quantity = 10,
                            Size = Size.L,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5944)
                        },
                        new
                        {
                            Id = new Guid("5b8a1e36-8607-4b7f-a745-f5a406ca40fa"),
                            Color = Color.Blue,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5949),
                            ProductId = new Guid("30c4e1a7-3b0f-40e9-be69-903936c22290"),
                            Quantity = 20,
                            Size = Size.XL,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5951)
                        },
                        new
                        {
                            Id = new Guid("91579f8f-90c7-4548-9174-40d639334508"),
                            Color = Color.Black,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5954),
                            ProductId = new Guid("30c4e1a7-3b0f-40e9-be69-903936c22290"),
                            Quantity = 30,
                            Size = Size.XXXL,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5956)
                        },
                        new
                        {
                            Id = new Guid("a7f81ccb-0d33-47c2-ad8c-2d6222aabfa1"),
                            Color = Color.Red,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5959),
                            ProductId = new Guid("7f49c05a-d60c-49e6-b804-f3eb5a65522f"),
                            Quantity = 10,
                            Size = Size.L,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5961)
                        },
                        new
                        {
                            Id = new Guid("40dd2564-f3f6-4928-ab62-ca79293a4512"),
                            Color = Color.Blue,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5964),
                            ProductId = new Guid("7f49c05a-d60c-49e6-b804-f3eb5a65522f"),
                            Quantity = 20,
                            Size = Size.XL,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5966)
                        },
                        new
                        {
                            Id = new Guid("831de33e-5a72-4528-9b3f-0869d18d7fc4"),
                            Color = Color.Black,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5969),
                            ProductId = new Guid("7f49c05a-d60c-49e6-b804-f3eb5a65522f"),
                            Quantity = 30,
                            Size = Size.XXXL,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5971)
                        },
                        new
                        {
                            Id = new Guid("6d03e62b-4005-4f0e-a3b0-09593a544764"),
                            Color = Color.Red,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5974),
                            ProductId = new Guid("ead99f26-fbfb-4b83-bf74-2ef2fd2b4754"),
                            Quantity = 10,
                            Size = Size.L,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5976)
                        },
                        new
                        {
                            Id = new Guid("bc007b90-1e10-402e-82d1-5a527d6d9743"),
                            Color = Color.Blue,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5979),
                            ProductId = new Guid("ead99f26-fbfb-4b83-bf74-2ef2fd2b4754"),
                            Quantity = 20,
                            Size = Size.XL,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5981)
                        },
                        new
                        {
                            Id = new Guid("ae8070e4-7bf9-41c5-a6e2-2dffad735417"),
                            Color = Color.Black,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5984),
                            ProductId = new Guid("ead99f26-fbfb-4b83-bf74-2ef2fd2b4754"),
                            Quantity = 30,
                            Size = Size.XXXL,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5986)
                        },
                        new
                        {
                            Id = new Guid("8c306ddd-f2a6-4401-b54d-88ac3bef1356"),
                            Color = Color.Red,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5991),
                            ProductId = new Guid("052e6003-3e9b-43f3-9d59-0656df90989e"),
                            Quantity = 10,
                            Size = Size.L,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5993)
                        },
                        new
                        {
                            Id = new Guid("8b0c57b4-8d10-4597-ac3f-51239d2d84eb"),
                            Color = Color.Blue,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5996),
                            ProductId = new Guid("052e6003-3e9b-43f3-9d59-0656df90989e"),
                            Quantity = 20,
                            Size = Size.XL,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(5998)
                        },
                        new
                        {
                            Id = new Guid("5d7a94aa-de57-4ffb-afc2-a3089480bf16"),
                            Color = Color.Black,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(6001),
                            ProductId = new Guid("052e6003-3e9b-43f3-9d59-0656df90989e"),
                            Quantity = 30,
                            Size = Size.XXXL,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(6003)
                        },
                        new
                        {
                            Id = new Guid("4ce14e0d-dd13-4c55-b116-a367ec0390bb"),
                            Color = Color.Red,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(6008),
                            ProductId = new Guid("b4143d6b-c302-4215-82e9-c9123d2f2ee5"),
                            Quantity = 10,
                            Size = Size.L,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(6009)
                        },
                        new
                        {
                            Id = new Guid("ef0a1ce2-2e8d-4b08-9283-326569d658d4"),
                            Color = Color.Blue,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(6013),
                            ProductId = new Guid("b4143d6b-c302-4215-82e9-c9123d2f2ee5"),
                            Quantity = 20,
                            Size = Size.XL,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(6015)
                        },
                        new
                        {
                            Id = new Guid("557ee7d6-b90d-4ba3-b8cb-e54aedb60650"),
                            Color = Color.Black,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(6018),
                            ProductId = new Guid("b4143d6b-c302-4215-82e9-c9123d2f2ee5"),
                            Quantity = 30,
                            Size = Size.XXXL,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(6020)
                        },
                        new
                        {
                            Id = new Guid("f9333300-e751-45b7-9bce-e383be3c4a7b"),
                            Color = Color.Red,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(6023),
                            ProductId = new Guid("41dde13b-dbcc-4f51-a31c-2231f94ddcab"),
                            Quantity = 10,
                            Size = Size.L,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(6025)
                        },
                        new
                        {
                            Id = new Guid("94cd9c51-d0f7-416e-ae64-04e844b8bb77"),
                            Color = Color.Blue,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(6028),
                            ProductId = new Guid("41dde13b-dbcc-4f51-a31c-2231f94ddcab"),
                            Quantity = 20,
                            Size = Size.XL,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(6030)
                        },
                        new
                        {
                            Id = new Guid("7fcd639e-48ab-417d-9790-3daa037e2222"),
                            Color = Color.Black,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(6035),
                            ProductId = new Guid("41dde13b-dbcc-4f51-a31c-2231f94ddcab"),
                            Quantity = 30,
                            Size = Size.XXXL,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(6037)
                        },
                        new
                        {
                            Id = new Guid("c8d895b2-c007-4787-bcd3-b0a76741910f"),
                            Color = Color.Red,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(6040),
                            ProductId = new Guid("9101df8f-38e3-40de-a46a-8ca66c26222d"),
                            Quantity = 10,
                            Size = Size.L,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(6042)
                        },
                        new
                        {
                            Id = new Guid("aa19cd59-9e03-4548-8d8f-cb3f0f83bf0f"),
                            Color = Color.Blue,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(6045),
                            ProductId = new Guid("9101df8f-38e3-40de-a46a-8ca66c26222d"),
                            Quantity = 20,
                            Size = Size.XL,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(6047)
                        },
                        new
                        {
                            Id = new Guid("d4971fd7-166f-446b-9cd9-06946da65eea"),
                            Color = Color.Black,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(6050),
                            ProductId = new Guid("9101df8f-38e3-40de-a46a-8ca66c26222d"),
                            Quantity = 30,
                            Size = Size.XXXL,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(6052)
                        },
                        new
                        {
                            Id = new Guid("a242dc3c-c9e8-489c-9ab4-07b743d10235"),
                            Color = Color.Red,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(6056),
                            ProductId = new Guid("8b441114-e030-4412-8952-2370a4b7f05a"),
                            Quantity = 10,
                            Size = Size.L,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(6057)
                        },
                        new
                        {
                            Id = new Guid("c1a5fa0a-9436-4555-8619-e1ae14d60f95"),
                            Color = Color.Blue,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(6061),
                            ProductId = new Guid("8b441114-e030-4412-8952-2370a4b7f05a"),
                            Quantity = 20,
                            Size = Size.XL,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(6062)
                        },
                        new
                        {
                            Id = new Guid("245aedc1-12aa-42ea-ba27-6f5a2155bd0b"),
                            Color = Color.Black,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(6066),
                            ProductId = new Guid("8b441114-e030-4412-8952-2370a4b7f05a"),
                            Quantity = 30,
                            Size = Size.XXXL,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 1, 19, 336, DateTimeKind.Local).AddTicks(6067)
                        });
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.Address", b =>
                {
                    b.HasOne("EcommerceAPI.Core.src.Entity.User", null)
                        .WithMany("Addresses")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_addresses_users_user_id");
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.Image", b =>
                {
                    b.HasOne("EcommerceAPI.Core.src.Entity.Product", null)
                        .WithMany("Images")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_images_products_product_id");
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.Order", b =>
                {
                    b.HasOne("EcommerceAPI.Core.src.Entity.User", null)
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .HasConstraintName("fk_orders_users_user_id");
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.OrderItem", b =>
                {
                    b.HasOne("EcommerceAPI.Core.src.Entity.Order", null)
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_order_items_orders_order_id");

                    b.HasOne("EcommerceAPI.Core.src.Entity.Product", null)
                        .WithMany("OrderItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_order_items_products_product_id");

                    b.HasOne("EcommerceAPI.Core.src.Entity.Variant", null)
                        .WithMany("OrderItems")
                        .HasForeignKey("VariantId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_order_items_variants_variant_id");
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.Product", b =>
                {
                    b.HasOne("EcommerceAPI.Core.src.Entity.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_products_categories_category_id");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.Review", b =>
                {
                    b.HasOne("EcommerceAPI.Core.src.Entity.Product", null)
                        .WithMany("Reviews")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_reviews_products_product_id");

                    b.HasOne("EcommerceAPI.Core.src.Entity.User", null)
                        .WithMany("Reviews")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_reviews_users_user_id");
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.Variant", b =>
                {
                    b.HasOne("EcommerceAPI.Core.src.Entity.Product", null)
                        .WithMany("Variants")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_variants_products_product_id");
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.Order", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.Product", b =>
                {
                    b.Navigation("Images");

                    b.Navigation("OrderItems");

                    b.Navigation("Reviews");

                    b.Navigation("Variants");
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.User", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("Orders");

                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.Variant", b =>
                {
                    b.Navigation("OrderItems");
                });
#pragma warning restore 612, 618
        }
    }
}
