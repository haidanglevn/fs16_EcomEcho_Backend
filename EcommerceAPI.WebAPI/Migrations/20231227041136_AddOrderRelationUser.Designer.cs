// <auto-generated />
using System;
using EcommerceAPI.Core.src.Entity;
using EcommerceAPI.WebAPI.src.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace EcommerceAPI.WebAPI.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20231227041136_AddOrderRelationUser")]
    partial class AddOrderRelationUser
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresEnum(modelBuilder, "color", new[] { "black", "silver", "gray", "white", "maroon", "red", "purple", "fuchsia", "green", "lime", "olive", "yellow", "navy", "blue", "teal", "aqua", "orange", "alice_blue", "coral", "dark_blue" });
            NpgsqlModelBuilderExtensions.HasPostgresEnum(modelBuilder, "role", new[] { "customer", "admin" });
            NpgsqlModelBuilderExtensions.HasPostgresEnum(modelBuilder, "size", new[] { "xs", "s", "m", "l", "xl", "xxl", "xxxl" });
            NpgsqlModelBuilderExtensions.HasPostgresEnum(modelBuilder, "status", new[] { "pending", "shipping", "received" });
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.Address", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("city");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("country");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("postal_code");

                    b.Property<string>("State")
                        .HasColumnType("text")
                        .HasColumnName("state");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("street");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated_at");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_addresses");

                    b.HasIndex("UserId")
                        .HasDatabaseName("ix_addresses_user_id");

                    b.ToTable("addresses", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("a1a1a1a1-1234-1234-1234-1234567890ab"),
                            City = "Helsinki",
                            Country = "Finland",
                            CreatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(1015),
                            PostalCode = "00100",
                            Street = "Street 1",
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(1018),
                            UserId = new Guid("ad0ad1be-f7e5-47c7-b4c3-c17250cbebab")
                        },
                        new
                        {
                            Id = new Guid("a2a2a2a2-1234-1234-1234-1234567890ab"),
                            City = "Helsinki",
                            Country = "Finland",
                            CreatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(1024),
                            PostalCode = "00200",
                            Street = "Street 2",
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(1025),
                            UserId = new Guid("ad0ad1be-f7e5-47c7-b4c3-c17250cbebab")
                        },
                        new
                        {
                            Id = new Guid("a3a3a3a3-1234-1234-1234-1234567890ab"),
                            City = "Helsinki",
                            Country = "Finland",
                            CreatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(1028),
                            PostalCode = "00300",
                            Street = "Street 3",
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(1030),
                            UserId = new Guid("ad0ad1be-f7e5-47c7-b4c3-c17250cbebab")
                        },
                        new
                        {
                            Id = new Guid("b1b1b1b1-1234-1234-1234-1234567890ab"),
                            City = "Espoo",
                            Country = "Finland",
                            CreatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(1032),
                            PostalCode = "02100",
                            Street = "Street 1",
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(1034),
                            UserId = new Guid("760454fa-4af1-4ae6-9b18-ed3aec4be2a9")
                        },
                        new
                        {
                            Id = new Guid("b2b2b2b2-1234-1234-1234-1234567890ab"),
                            City = "Espoo",
                            Country = "Finland",
                            CreatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(1037),
                            PostalCode = "02100",
                            Street = "Street 2",
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(1039),
                            UserId = new Guid("760454fa-4af1-4ae6-9b18-ed3aec4be2a9")
                        },
                        new
                        {
                            Id = new Guid("b3b3b3b3-1234-1234-1234-1234567890ab"),
                            City = "Espoo",
                            Country = "Finland",
                            CreatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(1042),
                            PostalCode = "02100",
                            Street = "Street 3",
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(1044),
                            UserId = new Guid("760454fa-4af1-4ae6-9b18-ed3aec4be2a9")
                        },
                        new
                        {
                            Id = new Guid("c1c1c1c1-1234-1234-1234-1234567890ab"),
                            City = "Tampere",
                            Country = "Finland",
                            CreatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(1047),
                            PostalCode = "33100",
                            Street = "Street 3",
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(1048),
                            UserId = new Guid("611a0192-8b2e-4997-a8c8-59b93674d33b")
                        },
                        new
                        {
                            Id = new Guid("c2c2c2c2-1234-1234-1234-1234567890ab"),
                            City = "Tampere",
                            Country = "Finland",
                            CreatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(1051),
                            PostalCode = "33100",
                            Street = "Street 4",
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(1053),
                            UserId = new Guid("611a0192-8b2e-4997-a8c8-59b93674d33b")
                        },
                        new
                        {
                            Id = new Guid("c3c3c3c3-1234-1234-1234-1234567890ab"),
                            City = "Tampere",
                            Country = "Finland",
                            CreatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(1055),
                            PostalCode = "33100",
                            Street = "Street 6",
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(1057),
                            UserId = new Guid("611a0192-8b2e-4997-a8c8-59b93674d33b")
                        });
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("image");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id")
                        .HasName("pk_categories");

                    b.ToTable("categories", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("88499694-269b-4308-a64d-0e903a1f503d"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(54),
                            Image = "https://picsum.photos/1000/1000?random=99",
                            Name = "Fashion",
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(58)
                        },
                        new
                        {
                            Id = new Guid("23b984f8-26f7-49a5-82ea-f4f5ddd16eca"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(63),
                            Image = "https://picsum.photos/1000/1000?random=100",
                            Name = "Sport",
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(65)
                        },
                        new
                        {
                            Id = new Guid("e842529a-ac4a-48f4-9377-1786d94dd4e8"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(68),
                            Image = "https://picsum.photos/1000/1000?random=101",
                            Name = "Home",
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(69)
                        });
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.Image", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid")
                        .HasColumnName("product_id");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated_at");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("url");

                    b.HasKey("Id")
                        .HasName("pk_images");

                    b.HasIndex("ProductId")
                        .HasDatabaseName("ix_images_product_id");

                    b.ToTable("images", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("4aa245b6-1ce8-4fce-b017-e69327c2a79f"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(215),
                            ProductId = new Guid("bc2983a5-b13c-49a4-9a6c-29c4dad9c355"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(218),
                            Url = "https://picsum.photos/1000/1000?random=1"
                        },
                        new
                        {
                            Id = new Guid("e5b7751d-d577-439e-beda-80562b55b46d"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(240),
                            ProductId = new Guid("bc2983a5-b13c-49a4-9a6c-29c4dad9c355"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(242),
                            Url = "https://picsum.photos/1000/1000?random=2"
                        },
                        new
                        {
                            Id = new Guid("a7fad9e7-1e3e-4938-9fcf-127dd7443907"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(245),
                            ProductId = new Guid("bc2983a5-b13c-49a4-9a6c-29c4dad9c355"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(247),
                            Url = "https://picsum.photos/1000/1000?random=3"
                        },
                        new
                        {
                            Id = new Guid("f473b495-49df-4fd3-8575-03d8f89f53a2"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(264),
                            ProductId = new Guid("fedfd1c9-a73a-47bf-a635-370c193fc1df"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(265),
                            Url = "https://picsum.photos/1000/1000?random=4"
                        },
                        new
                        {
                            Id = new Guid("f4b1871c-dfb5-423f-9680-3d43d3cf2abd"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(269),
                            ProductId = new Guid("fedfd1c9-a73a-47bf-a635-370c193fc1df"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(270),
                            Url = "https://picsum.photos/1000/1000?random=5"
                        },
                        new
                        {
                            Id = new Guid("2aa81a8b-1c03-4713-bf2b-a361980cc7ea"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(321),
                            ProductId = new Guid("fedfd1c9-a73a-47bf-a635-370c193fc1df"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(323),
                            Url = "https://picsum.photos/1000/1000?random=6"
                        },
                        new
                        {
                            Id = new Guid("1e75b35b-c046-4b1a-8cae-2c98d7ca7fba"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(327),
                            ProductId = new Guid("865770da-89af-4719-b00c-310b57d535e1"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(328),
                            Url = "https://picsum.photos/1000/1000?random=7"
                        },
                        new
                        {
                            Id = new Guid("6fd1c619-76d3-4da7-a533-8768d3f04e25"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(332),
                            ProductId = new Guid("865770da-89af-4719-b00c-310b57d535e1"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(333),
                            Url = "https://picsum.photos/1000/1000?random=8"
                        },
                        new
                        {
                            Id = new Guid("0479fe41-3c2d-4761-a26c-65518033a792"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(336),
                            ProductId = new Guid("865770da-89af-4719-b00c-310b57d535e1"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(338),
                            Url = "https://picsum.photos/1000/1000?random=9"
                        },
                        new
                        {
                            Id = new Guid("64fbca37-7c17-4579-9eb5-ea2ae0de10b2"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(342),
                            ProductId = new Guid("bf49c60a-9173-4533-8ca6-182cc7f685eb"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(344),
                            Url = "https://picsum.photos/1000/1000?random=10"
                        },
                        new
                        {
                            Id = new Guid("b8f69670-9748-402e-bb97-bffb54192ed8"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(347),
                            ProductId = new Guid("bf49c60a-9173-4533-8ca6-182cc7f685eb"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(349),
                            Url = "https://picsum.photos/1000/1000?random=11"
                        },
                        new
                        {
                            Id = new Guid("20e02d24-6d8d-4c87-88f4-0b93e67cdb50"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(356),
                            ProductId = new Guid("bf49c60a-9173-4533-8ca6-182cc7f685eb"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(358),
                            Url = "https://picsum.photos/1000/1000?random=12"
                        },
                        new
                        {
                            Id = new Guid("15372313-6eaf-4d0c-bc8d-f9e5d86fa2eb"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(361),
                            ProductId = new Guid("271309f9-03ae-4a21-a98c-cb2b911d7996"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(362),
                            Url = "https://picsum.photos/1000/1000?random=13"
                        },
                        new
                        {
                            Id = new Guid("fb6f6da5-cc0c-4591-b7de-15d24da57245"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(366),
                            ProductId = new Guid("271309f9-03ae-4a21-a98c-cb2b911d7996"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(367),
                            Url = "https://picsum.photos/1000/1000?random=14"
                        },
                        new
                        {
                            Id = new Guid("093689ca-88fc-4ec4-b826-2a3e8386c17d"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(370),
                            ProductId = new Guid("271309f9-03ae-4a21-a98c-cb2b911d7996"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(372),
                            Url = "https://picsum.photos/1000/1000?random=15"
                        },
                        new
                        {
                            Id = new Guid("2f56e7a6-3a68-4444-8162-97889ca164bf"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(375),
                            ProductId = new Guid("46e235cb-57a7-4eaa-b8c0-fc8096daee7b"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(376),
                            Url = "https://picsum.photos/1000/1000?random=16"
                        },
                        new
                        {
                            Id = new Guid("7b6ce604-68b2-4449-91c0-d970b269d093"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(379),
                            ProductId = new Guid("46e235cb-57a7-4eaa-b8c0-fc8096daee7b"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(381),
                            Url = "https://picsum.photos/1000/1000?random=17"
                        },
                        new
                        {
                            Id = new Guid("9844b8df-0ff1-4c11-a7c3-d9242431b2c1"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(385),
                            ProductId = new Guid("46e235cb-57a7-4eaa-b8c0-fc8096daee7b"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(387),
                            Url = "https://picsum.photos/1000/1000?random=18"
                        },
                        new
                        {
                            Id = new Guid("851584fc-7db7-4b49-a890-31a1e1b1a191"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(390),
                            ProductId = new Guid("425f57d3-5bcd-42cd-a401-9a3a9af83c8f"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(392),
                            Url = "https://picsum.photos/1000/1000?random=19"
                        },
                        new
                        {
                            Id = new Guid("6a5bd554-2ae4-4309-af21-d7ef93d66170"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(398),
                            ProductId = new Guid("425f57d3-5bcd-42cd-a401-9a3a9af83c8f"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(400),
                            Url = "https://picsum.photos/1000/1000?random=20"
                        },
                        new
                        {
                            Id = new Guid("13e9e1c1-2c80-4c49-bcdc-83a8ed700331"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(403),
                            ProductId = new Guid("425f57d3-5bcd-42cd-a401-9a3a9af83c8f"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(404),
                            Url = "https://picsum.photos/1000/1000?random=21"
                        },
                        new
                        {
                            Id = new Guid("70ba13fb-30c7-45a9-8377-a5a5f04215dc"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(407),
                            ProductId = new Guid("30c4e1a7-3b0f-40e9-be69-903936c22290"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(409),
                            Url = "https://picsum.photos/1000/1000?random=22"
                        },
                        new
                        {
                            Id = new Guid("f445a83a-321f-460c-9e53-db2c80db13ac"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(412),
                            ProductId = new Guid("30c4e1a7-3b0f-40e9-be69-903936c22290"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(414),
                            Url = "https://picsum.photos/1000/1000?random=23"
                        },
                        new
                        {
                            Id = new Guid("736eb0a6-64f5-4997-a008-d692b0b06920"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(417),
                            ProductId = new Guid("30c4e1a7-3b0f-40e9-be69-903936c22290"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(418),
                            Url = "https://picsum.photos/1000/1000?random=24"
                        },
                        new
                        {
                            Id = new Guid("5c8e313b-4abe-4553-994b-9c61c8714bbd"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(421),
                            ProductId = new Guid("7f49c05a-d60c-49e6-b804-f3eb5a65522f"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(423),
                            Url = "https://picsum.photos/1000/1000?random=25"
                        },
                        new
                        {
                            Id = new Guid("562b6f0f-ce87-42ff-b87b-f171001e3ea4"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(426),
                            ProductId = new Guid("7f49c05a-d60c-49e6-b804-f3eb5a65522f"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(427),
                            Url = "https://picsum.photos/1000/1000?random=26"
                        },
                        new
                        {
                            Id = new Guid("d09395ac-f28a-4501-a07a-a449b3a60c01"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(430),
                            ProductId = new Guid("7f49c05a-d60c-49e6-b804-f3eb5a65522f"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(432),
                            Url = "https://picsum.photos/1000/1000?random=27"
                        },
                        new
                        {
                            Id = new Guid("452cb007-034e-4390-9c76-c2c27ac3f744"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(437),
                            ProductId = new Guid("ead99f26-fbfb-4b83-bf74-2ef2fd2b4754"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(439),
                            Url = "https://picsum.photos/1000/1000?random=28"
                        },
                        new
                        {
                            Id = new Guid("aa0ea44d-6b50-4db4-8b5d-d0d8c2816e92"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(442),
                            ProductId = new Guid("ead99f26-fbfb-4b83-bf74-2ef2fd2b4754"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(444),
                            Url = "https://picsum.photos/1000/1000?random=29"
                        },
                        new
                        {
                            Id = new Guid("59af1e5a-410a-40cd-b8b1-0e9b6783887a"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(447),
                            ProductId = new Guid("ead99f26-fbfb-4b83-bf74-2ef2fd2b4754"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(448),
                            Url = "https://picsum.photos/1000/1000?random=30"
                        },
                        new
                        {
                            Id = new Guid("91ea1d13-ac57-46f1-9847-a76ff16bf2bf"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(452),
                            ProductId = new Guid("052e6003-3e9b-43f3-9d59-0656df90989e"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(453),
                            Url = "https://picsum.photos/1000/1000?random=31"
                        },
                        new
                        {
                            Id = new Guid("19e8a5cd-b958-444c-b848-45d2ff31c4f6"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(456),
                            ProductId = new Guid("052e6003-3e9b-43f3-9d59-0656df90989e"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(458),
                            Url = "https://picsum.photos/1000/1000?random=32"
                        },
                        new
                        {
                            Id = new Guid("b803dff6-a23f-49b1-b62e-958219b86249"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(461),
                            ProductId = new Guid("052e6003-3e9b-43f3-9d59-0656df90989e"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(462),
                            Url = "https://picsum.photos/1000/1000?random=33"
                        },
                        new
                        {
                            Id = new Guid("8d067035-9f25-4f56-b212-c6f1784323fe"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(466),
                            ProductId = new Guid("b4143d6b-c302-4215-82e9-c9123d2f2ee5"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(468),
                            Url = "https://picsum.photos/1000/1000?random=34"
                        },
                        new
                        {
                            Id = new Guid("bccc654c-77f0-42bd-968b-6d3fbc359c3f"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(471),
                            ProductId = new Guid("b4143d6b-c302-4215-82e9-c9123d2f2ee5"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(473),
                            Url = "https://picsum.photos/1000/1000?random=35"
                        },
                        new
                        {
                            Id = new Guid("8fc1de31-95d7-4bf5-95d9-bb2b6e5400e5"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(478),
                            ProductId = new Guid("b4143d6b-c302-4215-82e9-c9123d2f2ee5"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(480),
                            Url = "https://picsum.photos/1000/1000?random=36"
                        },
                        new
                        {
                            Id = new Guid("7e671b03-4966-43ab-b214-960e5b99fa43"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(483),
                            ProductId = new Guid("41dde13b-dbcc-4f51-a31c-2231f94ddcab"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(484),
                            Url = "https://picsum.photos/1000/1000?random=37"
                        },
                        new
                        {
                            Id = new Guid("7c600a30-567d-47a2-83f3-ebf3c5067cb1"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(487),
                            ProductId = new Guid("41dde13b-dbcc-4f51-a31c-2231f94ddcab"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(490),
                            Url = "https://picsum.photos/1000/1000?random=38"
                        },
                        new
                        {
                            Id = new Guid("28ffa330-a2d4-4495-8e64-d57c7318af9d"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(493),
                            ProductId = new Guid("41dde13b-dbcc-4f51-a31c-2231f94ddcab"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(495),
                            Url = "https://picsum.photos/1000/1000?random=39"
                        },
                        new
                        {
                            Id = new Guid("4da44e7e-2302-4428-8ba5-7f79c81e03f1"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(498),
                            ProductId = new Guid("9101df8f-38e3-40de-a46a-8ca66c26222d"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(499),
                            Url = "https://picsum.photos/1000/1000?random=40"
                        },
                        new
                        {
                            Id = new Guid("96e84063-90f1-41af-bb0e-49d0e9f312f1"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(503),
                            ProductId = new Guid("9101df8f-38e3-40de-a46a-8ca66c26222d"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(504),
                            Url = "https://picsum.photos/1000/1000?random=41"
                        },
                        new
                        {
                            Id = new Guid("303628d2-94e3-4db8-966c-bf10172db3d8"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(507),
                            ProductId = new Guid("9101df8f-38e3-40de-a46a-8ca66c26222d"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(509),
                            Url = "https://picsum.photos/1000/1000?random=42"
                        },
                        new
                        {
                            Id = new Guid("2f2bc863-63f5-458c-b457-ac157290b484"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(512),
                            ProductId = new Guid("8b441114-e030-4412-8952-2370a4b7f05a"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(514),
                            Url = "https://picsum.photos/1000/1000?random=43"
                        },
                        new
                        {
                            Id = new Guid("82280075-2f24-4e02-b3f9-8377363c5511"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(519),
                            ProductId = new Guid("8b441114-e030-4412-8952-2370a4b7f05a"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(520),
                            Url = "https://picsum.photos/1000/1000?random=44"
                        },
                        new
                        {
                            Id = new Guid("68362c1e-27fb-4a9a-a792-d01f2fc1b87f"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(523),
                            ProductId = new Guid("8b441114-e030-4412-8952-2370a4b7f05a"),
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(525),
                            Url = "https://picsum.photos/1000/1000?random=45"
                        });
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<Status>("Status")
                        .HasColumnType("status")
                        .HasColumnName("status");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated_at");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_orders");

                    b.HasIndex("UserId")
                        .HasDatabaseName("ix_orders_user_id");

                    b.ToTable("orders", (string)null);
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.OrderItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uuid")
                        .HasColumnName("order_id");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric")
                        .HasColumnName("price");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid")
                        .HasColumnName("product_id");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer")
                        .HasColumnName("quantity");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated_at");

                    b.Property<Guid>("VariantId")
                        .HasColumnType("uuid")
                        .HasColumnName("variant_id");

                    b.HasKey("Id")
                        .HasName("pk_order_items");

                    b.HasIndex("OrderId")
                        .HasDatabaseName("ix_order_items_order_id");

                    b.HasIndex("ProductId")
                        .HasDatabaseName("ix_order_items_product_id");

                    b.HasIndex("VariantId")
                        .HasDatabaseName("ix_order_items_variant_id");

                    b.ToTable("order_items", (string)null);
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uuid")
                        .HasColumnName("category_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric")
                        .HasColumnName("price");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id")
                        .HasName("pk_products");

                    b.HasIndex("CategoryId")
                        .HasDatabaseName("ix_products_category_id");

                    b.ToTable("products", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("bc2983a5-b13c-49a4-9a6c-29c4dad9c355"),
                            CategoryId = new Guid("88499694-269b-4308-a64d-0e903a1f503d"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(102),
                            Description = "Description for Fashion Product 1",
                            Price = 100m,
                            Title = "Fashion Product 1",
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(105)
                        },
                        new
                        {
                            Id = new Guid("fedfd1c9-a73a-47bf-a635-370c193fc1df"),
                            CategoryId = new Guid("88499694-269b-4308-a64d-0e903a1f503d"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(111),
                            Description = "Description for Fashion Product 2",
                            Price = 140m,
                            Title = "Fashion Product 2",
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(112)
                        },
                        new
                        {
                            Id = new Guid("865770da-89af-4719-b00c-310b57d535e1"),
                            CategoryId = new Guid("88499694-269b-4308-a64d-0e903a1f503d"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(115),
                            Description = "Description for Fashion Product 3",
                            Price = 120m,
                            Title = "Fashion Product 3",
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(117)
                        },
                        new
                        {
                            Id = new Guid("bf49c60a-9173-4533-8ca6-182cc7f685eb"),
                            CategoryId = new Guid("88499694-269b-4308-a64d-0e903a1f503d"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(120),
                            Description = "Description for Fashion Product 4",
                            Price = 200m,
                            Title = "Fashion Product 4",
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(122)
                        },
                        new
                        {
                            Id = new Guid("271309f9-03ae-4a21-a98c-cb2b911d7996"),
                            CategoryId = new Guid("88499694-269b-4308-a64d-0e903a1f503d"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(124),
                            Description = "Description for Fashion Product 5",
                            Price = 104m,
                            Title = "Fashion Product 5",
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(126)
                        },
                        new
                        {
                            Id = new Guid("46e235cb-57a7-4eaa-b8c0-fc8096daee7b"),
                            CategoryId = new Guid("23b984f8-26f7-49a5-82ea-f4f5ddd16eca"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(133),
                            Description = "Description for Sport Product 1",
                            Price = 200m,
                            Title = "Sport Product 1",
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(135)
                        },
                        new
                        {
                            Id = new Guid("425f57d3-5bcd-42cd-a401-9a3a9af83c8f"),
                            CategoryId = new Guid("23b984f8-26f7-49a5-82ea-f4f5ddd16eca"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(138),
                            Description = "Description for Sport Product 2",
                            Price = 240m,
                            Title = "Sport Product 2",
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(139)
                        },
                        new
                        {
                            Id = new Guid("30c4e1a7-3b0f-40e9-be69-903936c22290"),
                            CategoryId = new Guid("23b984f8-26f7-49a5-82ea-f4f5ddd16eca"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(142),
                            Description = "Description for Sport Product 3",
                            Price = 154m,
                            Title = "Sport Product 3",
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(143)
                        },
                        new
                        {
                            Id = new Guid("7f49c05a-d60c-49e6-b804-f3eb5a65522f"),
                            CategoryId = new Guid("23b984f8-26f7-49a5-82ea-f4f5ddd16eca"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(146),
                            Description = "Description for Sport Product 4",
                            Price = 333m,
                            Title = "Sport Product 4",
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(148)
                        },
                        new
                        {
                            Id = new Guid("ead99f26-fbfb-4b83-bf74-2ef2fd2b4754"),
                            CategoryId = new Guid("23b984f8-26f7-49a5-82ea-f4f5ddd16eca"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(152),
                            Description = "Description for Sport Product 5",
                            Price = 205m,
                            Title = "Sport Product 5",
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(153)
                        },
                        new
                        {
                            Id = new Guid("052e6003-3e9b-43f3-9d59-0656df90989e"),
                            CategoryId = new Guid("e842529a-ac4a-48f4-9377-1786d94dd4e8"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(156),
                            Description = "Description for Home Product 1",
                            Price = 300m,
                            Title = "Home Product 1",
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(158)
                        },
                        new
                        {
                            Id = new Guid("b4143d6b-c302-4215-82e9-c9123d2f2ee5"),
                            CategoryId = new Guid("e842529a-ac4a-48f4-9377-1786d94dd4e8"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(161),
                            Description = "Description for Home Product 2",
                            Price = 32m,
                            Title = "Home Product 2",
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(162)
                        },
                        new
                        {
                            Id = new Guid("41dde13b-dbcc-4f51-a31c-2231f94ddcab"),
                            CategoryId = new Guid("e842529a-ac4a-48f4-9377-1786d94dd4e8"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(165),
                            Description = "Description for Home Product 3",
                            Price = 56m,
                            Title = "Home Product 3",
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(167)
                        },
                        new
                        {
                            Id = new Guid("9101df8f-38e3-40de-a46a-8ca66c26222d"),
                            CategoryId = new Guid("e842529a-ac4a-48f4-9377-1786d94dd4e8"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(169),
                            Description = "Description for Home Product 4",
                            Price = 143m,
                            Title = "Home Product 4",
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(171)
                        },
                        new
                        {
                            Id = new Guid("8b441114-e030-4412-8952-2370a4b7f05a"),
                            CategoryId = new Guid("e842529a-ac4a-48f4-9377-1786d94dd4e8"),
                            CreatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(174),
                            Description = "Description for Home Product 5",
                            Price = 3000m,
                            Title = "Home Product 5",
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(175)
                        });
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.Review", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("comment");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid")
                        .HasColumnName("product_id");

                    b.Property<int>("Rating")
                        .HasColumnType("integer")
                        .HasColumnName("rating");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated_at");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_reviews");

                    b.HasIndex("ProductId")
                        .HasDatabaseName("ix_reviews_product_id");

                    b.HasIndex("UserId", "ProductId")
                        .IsUnique()
                        .HasDatabaseName("ix_reviews_user_id_product_id");

                    b.ToTable("reviews", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("c9e3c10d-b843-434d-bcbe-bfe35e17dd52"),
                            Comment = "Great product!",
                            CreatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(938),
                            ProductId = new Guid("bc2983a5-b13c-49a4-9a6c-29c4dad9c355"),
                            Rating = 5,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(940),
                            UserId = new Guid("ad0ad1be-f7e5-47c7-b4c3-c17250cbebab")
                        },
                        new
                        {
                            Id = new Guid("71dd6268-f87a-4816-a5bf-c94769a51473"),
                            Comment = "Really enjoyed this.",
                            CreatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(946),
                            ProductId = new Guid("425f57d3-5bcd-42cd-a401-9a3a9af83c8f"),
                            Rating = 4,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(947),
                            UserId = new Guid("760454fa-4af1-4ae6-9b18-ed3aec4be2a9")
                        },
                        new
                        {
                            Id = new Guid("eb57b891-c019-46c9-9c6e-630a79d19787"),
                            Comment = "Good quality, but expensive.",
                            CreatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(950),
                            ProductId = new Guid("41dde13b-dbcc-4f51-a31c-2231f94ddcab"),
                            Rating = 3,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(951),
                            UserId = new Guid("ad0ad1be-f7e5-47c7-b4c3-c17250cbebab")
                        },
                        new
                        {
                            Id = new Guid("9aa483ac-872b-468c-af4f-2c1f94beec3a"),
                            Comment = "Loved the design!",
                            CreatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(954),
                            ProductId = new Guid("bf49c60a-9173-4533-8ca6-182cc7f685eb"),
                            Rating = 4,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(956),
                            UserId = new Guid("760454fa-4af1-4ae6-9b18-ed3aec4be2a9")
                        },
                        new
                        {
                            Id = new Guid("ca5b7d5d-309c-4973-ad8c-132a4142b5c1"),
                            Comment = "Perfect for my needs!",
                            CreatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(958),
                            ProductId = new Guid("ead99f26-fbfb-4b83-bf74-2ef2fd2b4754"),
                            Rating = 5,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(960),
                            UserId = new Guid("611a0192-8b2e-4997-a8c8-59b93674d33b")
                        },
                        new
                        {
                            Id = new Guid("a4438f9a-a573-4967-96c3-6a38fcfb6132"),
                            Comment = "Nice product, quick delivery.",
                            CreatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(963),
                            ProductId = new Guid("fedfd1c9-a73a-47bf-a635-370c193fc1df"),
                            Rating = 4,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(965),
                            UserId = new Guid("611a0192-8b2e-4997-a8c8-59b93674d33b")
                        },
                        new
                        {
                            Id = new Guid("c2cd9d37-25d0-4b5d-a336-8214ce83b648"),
                            Comment = "Outstanding quality!",
                            CreatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(968),
                            ProductId = new Guid("052e6003-3e9b-43f3-9d59-0656df90989e"),
                            Rating = 5,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(969),
                            UserId = new Guid("611a0192-8b2e-4997-a8c8-59b93674d33b")
                        },
                        new
                        {
                            Id = new Guid("dfc6ffd5-140c-4505-9428-7fe852a93afc"),
                            Comment = "Decent, but expected more.",
                            CreatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(972),
                            ProductId = new Guid("865770da-89af-4719-b00c-310b57d535e1"),
                            Rating = 3,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(973),
                            UserId = new Guid("ad0ad1be-f7e5-47c7-b4c3-c17250cbebab")
                        },
                        new
                        {
                            Id = new Guid("38fb4093-965e-4e3f-a7a2-c19103fc239e"),
                            Comment = "Absolutely love this!",
                            CreatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(976),
                            ProductId = new Guid("8b441114-e030-4412-8952-2370a4b7f05a"),
                            Rating = 5,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(977),
                            UserId = new Guid("760454fa-4af1-4ae6-9b18-ed3aec4be2a9")
                        },
                        new
                        {
                            Id = new Guid("30a4ff5e-3bd1-429d-9981-adbcd46e2537"),
                            Comment = "Not as described, disappointed.",
                            CreatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(981),
                            ProductId = new Guid("30c4e1a7-3b0f-40e9-be69-903936c22290"),
                            Rating = 2,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(983),
                            UserId = new Guid("611a0192-8b2e-4997-a8c8-59b93674d33b")
                        });
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Avatar")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("avatar");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("first_name");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("last_name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("password");

                    b.Property<Role>("Role")
                        .HasColumnType("role")
                        .HasColumnName("role");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id")
                        .HasName("pk_users");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasDatabaseName("ix_users_email");

                    b.ToTable("users", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("ad0ad1be-f7e5-47c7-b4c3-c17250cbebab"),
                            Avatar = "https://picsum.photos/1000/1000?random=150",
                            CreatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 700, DateTimeKind.Local).AddTicks(8069),
                            Email = "admin@mail.com",
                            FirstName = "Admin",
                            LastName = "admin",
                            Password = "17Yap0lCscNWHQt+nC+ENg==;vzQz9TMmpCpjpZMuTK8LDnu4yVHu1h8LUIC6aYhZrTM=",
                            Role = Role.Admin,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 700, DateTimeKind.Local).AddTicks(8123)
                        },
                        new
                        {
                            Id = new Guid("760454fa-4af1-4ae6-9b18-ed3aec4be2a9"),
                            Avatar = "https://picsum.photos/1000/1000?random=151",
                            CreatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 702, DateTimeKind.Local).AddTicks(2337),
                            Email = "cena@mail.com",
                            FirstName = "John",
                            LastName = "Cena",
                            Password = "x1JiYkgmGRpsKImu90Sl5A==;jC+EAd/d++utQbHVdUaU2g2lJU7WbwUxPykqSA/oQRg=",
                            Role = Role.Customer,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 702, DateTimeKind.Local).AddTicks(2341)
                        },
                        new
                        {
                            Id = new Guid("611a0192-8b2e-4997-a8c8-59b93674d33b"),
                            Avatar = "https://picsum.photos/1000/1000?random=152",
                            CreatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 703, DateTimeKind.Local).AddTicks(6186),
                            Email = "doe@mail.com",
                            FirstName = "John",
                            LastName = "Doe",
                            Password = "WjhRaHfkXXnjkoJE49qNqg==;Tz4FCmlU9hOXg/UVMmBDRSGiHzwBRa2uf/cZbeJnVkM=",
                            Role = Role.Customer,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 703, DateTimeKind.Local).AddTicks(6189)
                        });
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.Variant", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Color>("Color")
                        .HasColumnType("color")
                        .HasColumnName("color");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid")
                        .HasColumnName("product_id");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer")
                        .HasColumnName("quantity");

                    b.Property<Size>("Size")
                        .HasColumnType("size")
                        .HasColumnName("size");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id")
                        .HasName("pk_variants");

                    b.HasIndex("ProductId")
                        .HasDatabaseName("ix_variants_product_id");

                    b.ToTable("variants", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("72829400-68ea-4400-a093-ce943ed15ef3"),
                            Color = Color.Red,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(571),
                            ProductId = new Guid("bc2983a5-b13c-49a4-9a6c-29c4dad9c355"),
                            Quantity = 10,
                            Size = Size.L,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(573)
                        },
                        new
                        {
                            Id = new Guid("9c2e1419-39f1-4bfa-8987-a310c9de006a"),
                            Color = Color.Blue,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(583),
                            ProductId = new Guid("bc2983a5-b13c-49a4-9a6c-29c4dad9c355"),
                            Quantity = 20,
                            Size = Size.XL,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(585)
                        },
                        new
                        {
                            Id = new Guid("a3a92041-ba6c-4ce4-8ddc-47e497e52b42"),
                            Color = Color.Black,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(588),
                            ProductId = new Guid("bc2983a5-b13c-49a4-9a6c-29c4dad9c355"),
                            Quantity = 30,
                            Size = Size.XXXL,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(590)
                        },
                        new
                        {
                            Id = new Guid("9a839cab-a105-465f-b447-c6ac4b7edc89"),
                            Color = Color.Red,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(593),
                            ProductId = new Guid("fedfd1c9-a73a-47bf-a635-370c193fc1df"),
                            Quantity = 20,
                            Size = Size.L,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(595)
                        },
                        new
                        {
                            Id = new Guid("790d9a32-4a75-4799-818b-4892cf1ac56a"),
                            Color = Color.Blue,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(598),
                            ProductId = new Guid("fedfd1c9-a73a-47bf-a635-370c193fc1df"),
                            Quantity = 20,
                            Size = Size.XL,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(600)
                        },
                        new
                        {
                            Id = new Guid("e794ef55-2200-40ca-94f8-15679b8dfda2"),
                            Color = Color.Black,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(604),
                            ProductId = new Guid("fedfd1c9-a73a-47bf-a635-370c193fc1df"),
                            Quantity = 30,
                            Size = Size.XXXL,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(606)
                        },
                        new
                        {
                            Id = new Guid("9ea97a8f-6237-47cc-96e7-7fa9fc150c03"),
                            Color = Color.Red,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(611),
                            ProductId = new Guid("865770da-89af-4719-b00c-310b57d535e1"),
                            Quantity = 10,
                            Size = Size.L,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(613)
                        },
                        new
                        {
                            Id = new Guid("f5afcfdc-0c12-4135-8f9d-4bb89d58fe40"),
                            Color = Color.Blue,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(616),
                            ProductId = new Guid("865770da-89af-4719-b00c-310b57d535e1"),
                            Quantity = 20,
                            Size = Size.XL,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(618)
                        },
                        new
                        {
                            Id = new Guid("aa883094-c34c-4d48-8f1c-90c9fd8cb9a4"),
                            Color = Color.Black,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(621),
                            ProductId = new Guid("865770da-89af-4719-b00c-310b57d535e1"),
                            Quantity = 30,
                            Size = Size.XXXL,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(623)
                        },
                        new
                        {
                            Id = new Guid("c37f3dba-11a2-4e00-bff0-4ad53d6aaf4f"),
                            Color = Color.Red,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(627),
                            ProductId = new Guid("bf49c60a-9173-4533-8ca6-182cc7f685eb"),
                            Quantity = 10,
                            Size = Size.L,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(629)
                        },
                        new
                        {
                            Id = new Guid("973d3bb3-774a-4d35-835b-0c5089e82454"),
                            Color = Color.Blue,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(632),
                            ProductId = new Guid("bf49c60a-9173-4533-8ca6-182cc7f685eb"),
                            Quantity = 20,
                            Size = Size.XL,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(634)
                        },
                        new
                        {
                            Id = new Guid("f25ccc86-22f0-4cc4-9704-eaa65276aa38"),
                            Color = Color.Black,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(637),
                            ProductId = new Guid("bf49c60a-9173-4533-8ca6-182cc7f685eb"),
                            Quantity = 30,
                            Size = Size.XXXL,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(638)
                        },
                        new
                        {
                            Id = new Guid("50c5133e-4908-49c6-a1d7-adcbb5248052"),
                            Color = Color.Red,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(642),
                            ProductId = new Guid("271309f9-03ae-4a21-a98c-cb2b911d7996"),
                            Quantity = 10,
                            Size = Size.L,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(643)
                        },
                        new
                        {
                            Id = new Guid("daaab28c-83bc-4517-b523-9bd7a52c65dd"),
                            Color = Color.Blue,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(647),
                            ProductId = new Guid("271309f9-03ae-4a21-a98c-cb2b911d7996"),
                            Quantity = 20,
                            Size = Size.XL,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(648)
                        },
                        new
                        {
                            Id = new Guid("fca326db-e062-452c-be14-30b630837392"),
                            Color = Color.Black,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(653),
                            ProductId = new Guid("271309f9-03ae-4a21-a98c-cb2b911d7996"),
                            Quantity = 30,
                            Size = Size.XXXL,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(655)
                        },
                        new
                        {
                            Id = new Guid("c4fa462c-36b3-4c09-ab76-7c47bcccd175"),
                            Color = Color.Red,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(658),
                            ProductId = new Guid("46e235cb-57a7-4eaa-b8c0-fc8096daee7b"),
                            Quantity = 10,
                            Size = Size.L,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(660)
                        },
                        new
                        {
                            Id = new Guid("80fe813b-a9de-43c6-bbda-c525668f972a"),
                            Color = Color.Blue,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(663),
                            ProductId = new Guid("46e235cb-57a7-4eaa-b8c0-fc8096daee7b"),
                            Quantity = 20,
                            Size = Size.XL,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(665)
                        },
                        new
                        {
                            Id = new Guid("0df37962-6e33-49b8-9818-2e90b1a8b3ac"),
                            Color = Color.Black,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(669),
                            ProductId = new Guid("46e235cb-57a7-4eaa-b8c0-fc8096daee7b"),
                            Quantity = 30,
                            Size = Size.XXXL,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(671)
                        },
                        new
                        {
                            Id = new Guid("fb0fa79f-0e75-4cac-a098-0b23b4a3cf08"),
                            Color = Color.Red,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(674),
                            ProductId = new Guid("425f57d3-5bcd-42cd-a401-9a3a9af83c8f"),
                            Quantity = 10,
                            Size = Size.L,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(675)
                        },
                        new
                        {
                            Id = new Guid("5fbc682e-d162-4f18-aa7e-457a0bb40739"),
                            Color = Color.Blue,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(679),
                            ProductId = new Guid("425f57d3-5bcd-42cd-a401-9a3a9af83c8f"),
                            Quantity = 20,
                            Size = Size.XL,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(680)
                        },
                        new
                        {
                            Id = new Guid("8c20135e-5b2d-481d-ad96-4706f28e3b24"),
                            Color = Color.Black,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(684),
                            ProductId = new Guid("425f57d3-5bcd-42cd-a401-9a3a9af83c8f"),
                            Quantity = 30,
                            Size = Size.XXXL,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(685)
                        },
                        new
                        {
                            Id = new Guid("13af832a-d063-4eb0-a19a-be6ee3e7be8a"),
                            Color = Color.Red,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(689),
                            ProductId = new Guid("30c4e1a7-3b0f-40e9-be69-903936c22290"),
                            Quantity = 10,
                            Size = Size.L,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(690)
                        },
                        new
                        {
                            Id = new Guid("f69ace15-8eac-4f5d-8e9d-ce1f8de42e12"),
                            Color = Color.Blue,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(695),
                            ProductId = new Guid("30c4e1a7-3b0f-40e9-be69-903936c22290"),
                            Quantity = 20,
                            Size = Size.XL,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(697)
                        },
                        new
                        {
                            Id = new Guid("dbd1b725-a977-46a0-8758-be53fde11f12"),
                            Color = Color.Black,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(700),
                            ProductId = new Guid("30c4e1a7-3b0f-40e9-be69-903936c22290"),
                            Quantity = 30,
                            Size = Size.XXXL,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(702)
                        },
                        new
                        {
                            Id = new Guid("a7c2ecde-e664-4d9e-bb81-051e1c4dbb5c"),
                            Color = Color.Red,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(705),
                            ProductId = new Guid("7f49c05a-d60c-49e6-b804-f3eb5a65522f"),
                            Quantity = 10,
                            Size = Size.L,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(707)
                        },
                        new
                        {
                            Id = new Guid("4265f5d6-5573-46ca-a270-739f1a37bd41"),
                            Color = Color.Blue,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(710),
                            ProductId = new Guid("7f49c05a-d60c-49e6-b804-f3eb5a65522f"),
                            Quantity = 20,
                            Size = Size.XL,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(712)
                        },
                        new
                        {
                            Id = new Guid("f607cdd7-7479-4fda-86ca-10ae3573e49f"),
                            Color = Color.Black,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(787),
                            ProductId = new Guid("7f49c05a-d60c-49e6-b804-f3eb5a65522f"),
                            Quantity = 30,
                            Size = Size.XXXL,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(789)
                        },
                        new
                        {
                            Id = new Guid("ee8f6c8c-e5ec-468a-b26b-d3d0a3464123"),
                            Color = Color.Red,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(793),
                            ProductId = new Guid("ead99f26-fbfb-4b83-bf74-2ef2fd2b4754"),
                            Quantity = 10,
                            Size = Size.L,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(795)
                        },
                        new
                        {
                            Id = new Guid("c3271210-374e-4459-b6b7-a75cff8dca31"),
                            Color = Color.Blue,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(798),
                            ProductId = new Guid("ead99f26-fbfb-4b83-bf74-2ef2fd2b4754"),
                            Quantity = 20,
                            Size = Size.XL,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(799)
                        },
                        new
                        {
                            Id = new Guid("4c83accd-cf0a-4312-8cce-1fbd89168175"),
                            Color = Color.Black,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(803),
                            ProductId = new Guid("ead99f26-fbfb-4b83-bf74-2ef2fd2b4754"),
                            Quantity = 30,
                            Size = Size.XXXL,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(804)
                        },
                        new
                        {
                            Id = new Guid("a65686cf-42aa-411e-ab99-cc6e035b8960"),
                            Color = Color.Red,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(810),
                            ProductId = new Guid("052e6003-3e9b-43f3-9d59-0656df90989e"),
                            Quantity = 10,
                            Size = Size.L,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(811)
                        },
                        new
                        {
                            Id = new Guid("6d0653e8-3686-4f3e-b2c5-419ab80a878d"),
                            Color = Color.Blue,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(815),
                            ProductId = new Guid("052e6003-3e9b-43f3-9d59-0656df90989e"),
                            Quantity = 20,
                            Size = Size.XL,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(816)
                        },
                        new
                        {
                            Id = new Guid("27183f63-8861-4ece-8d57-62fee63eb37c"),
                            Color = Color.Black,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(819),
                            ProductId = new Guid("052e6003-3e9b-43f3-9d59-0656df90989e"),
                            Quantity = 30,
                            Size = Size.XXXL,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(821)
                        },
                        new
                        {
                            Id = new Guid("afe6d847-2fee-453f-a354-cc6d7510b012"),
                            Color = Color.Red,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(826),
                            ProductId = new Guid("b4143d6b-c302-4215-82e9-c9123d2f2ee5"),
                            Quantity = 10,
                            Size = Size.L,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(827)
                        },
                        new
                        {
                            Id = new Guid("750d4dc7-e19d-426d-a91d-4bb25fd7aafd"),
                            Color = Color.Blue,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(831),
                            ProductId = new Guid("b4143d6b-c302-4215-82e9-c9123d2f2ee5"),
                            Quantity = 20,
                            Size = Size.XL,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(833)
                        },
                        new
                        {
                            Id = new Guid("7df304e2-8233-4376-b913-9dc8c21aef63"),
                            Color = Color.Black,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(836),
                            ProductId = new Guid("b4143d6b-c302-4215-82e9-c9123d2f2ee5"),
                            Quantity = 30,
                            Size = Size.XXXL,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(838)
                        },
                        new
                        {
                            Id = new Guid("324a470b-96bc-4fb5-b8c4-23486d0beaa4"),
                            Color = Color.Red,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(841),
                            ProductId = new Guid("41dde13b-dbcc-4f51-a31c-2231f94ddcab"),
                            Quantity = 10,
                            Size = Size.L,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(842)
                        },
                        new
                        {
                            Id = new Guid("cabd12b7-ba5e-43f3-baed-b28cc3bc3308"),
                            Color = Color.Blue,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(846),
                            ProductId = new Guid("41dde13b-dbcc-4f51-a31c-2231f94ddcab"),
                            Quantity = 20,
                            Size = Size.XL,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(847)
                        },
                        new
                        {
                            Id = new Guid("95af4017-2791-4788-bfb9-69584343229a"),
                            Color = Color.Black,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(852),
                            ProductId = new Guid("41dde13b-dbcc-4f51-a31c-2231f94ddcab"),
                            Quantity = 30,
                            Size = Size.XXXL,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(854)
                        },
                        new
                        {
                            Id = new Guid("79f301f3-6459-447c-bc24-afacb9f42253"),
                            Color = Color.Red,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(857),
                            ProductId = new Guid("9101df8f-38e3-40de-a46a-8ca66c26222d"),
                            Quantity = 10,
                            Size = Size.L,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(859)
                        },
                        new
                        {
                            Id = new Guid("2d3c7bdb-54fb-4055-a309-11936001fb21"),
                            Color = Color.Blue,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(862),
                            ProductId = new Guid("9101df8f-38e3-40de-a46a-8ca66c26222d"),
                            Quantity = 20,
                            Size = Size.XL,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(863)
                        },
                        new
                        {
                            Id = new Guid("8ea9d007-b98e-4f52-ac73-4a7b90400031"),
                            Color = Color.Black,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(867),
                            ProductId = new Guid("9101df8f-38e3-40de-a46a-8ca66c26222d"),
                            Quantity = 30,
                            Size = Size.XXXL,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(868)
                        },
                        new
                        {
                            Id = new Guid("4e88069c-1f12-4e77-9cdf-3568e9c66467"),
                            Color = Color.Red,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(872),
                            ProductId = new Guid("8b441114-e030-4412-8952-2370a4b7f05a"),
                            Quantity = 10,
                            Size = Size.L,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(873)
                        },
                        new
                        {
                            Id = new Guid("22c852b7-c40e-4972-b7d2-4a6a7922163d"),
                            Color = Color.Blue,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(876),
                            ProductId = new Guid("8b441114-e030-4412-8952-2370a4b7f05a"),
                            Quantity = 20,
                            Size = Size.XL,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(878)
                        },
                        new
                        {
                            Id = new Guid("824965ff-4daf-408d-835f-68e9f83ed3be"),
                            Color = Color.Black,
                            CreatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(881),
                            ProductId = new Guid("8b441114-e030-4412-8952-2370a4b7f05a"),
                            Quantity = 30,
                            Size = Size.XXXL,
                            UpdatedAt = new DateTime(2023, 12, 27, 6, 11, 36, 705, DateTimeKind.Local).AddTicks(883)
                        });
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.Address", b =>
                {
                    b.HasOne("EcommerceAPI.Core.src.Entity.User", null)
                        .WithMany("Addresses")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_addresses_users_user_id");
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.Image", b =>
                {
                    b.HasOne("EcommerceAPI.Core.src.Entity.Product", null)
                        .WithMany("Images")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_images_products_product_id");
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.Order", b =>
                {
                    b.HasOne("EcommerceAPI.Core.src.Entity.User", null)
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_orders_users_user_id");
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.OrderItem", b =>
                {
                    b.HasOne("EcommerceAPI.Core.src.Entity.Order", null)
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_order_items_orders_order_id");

                    b.HasOne("EcommerceAPI.Core.src.Entity.Product", null)
                        .WithMany("OrderItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_order_items_products_product_id");

                    b.HasOne("EcommerceAPI.Core.src.Entity.Variant", null)
                        .WithMany("OrderItems")
                        .HasForeignKey("VariantId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_order_items_variants_variant_id");
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.Product", b =>
                {
                    b.HasOne("EcommerceAPI.Core.src.Entity.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_products_categories_category_id");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.Review", b =>
                {
                    b.HasOne("EcommerceAPI.Core.src.Entity.Product", null)
                        .WithMany("Reviews")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_reviews_products_product_id");

                    b.HasOne("EcommerceAPI.Core.src.Entity.User", null)
                        .WithMany("Reviews")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_reviews_users_user_id");
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.Variant", b =>
                {
                    b.HasOne("EcommerceAPI.Core.src.Entity.Product", null)
                        .WithMany("Variants")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_variants_products_product_id");
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.Order", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.Product", b =>
                {
                    b.Navigation("Images");

                    b.Navigation("OrderItems");

                    b.Navigation("Reviews");

                    b.Navigation("Variants");
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.User", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("Orders");

                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.Variant", b =>
                {
                    b.Navigation("OrderItems");
                });
#pragma warning restore 612, 618
        }
    }
}
