// <auto-generated />
using System;
using EcommerceAPI.Core.src.Entity;
using EcommerceAPI.WebAPI.src.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace EcommerceAPI.WebAPI.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20231227053546_AddAddressToOrder")]
    partial class AddAddressToOrder
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresEnum(modelBuilder, "color", new[] { "black", "silver", "gray", "white", "maroon", "red", "purple", "fuchsia", "green", "lime", "olive", "yellow", "navy", "blue", "teal", "aqua", "orange", "alice_blue", "coral", "dark_blue" });
            NpgsqlModelBuilderExtensions.HasPostgresEnum(modelBuilder, "role", new[] { "customer", "admin" });
            NpgsqlModelBuilderExtensions.HasPostgresEnum(modelBuilder, "size", new[] { "xs", "s", "m", "l", "xl", "xxl", "xxxl" });
            NpgsqlModelBuilderExtensions.HasPostgresEnum(modelBuilder, "status", new[] { "pending", "shipping", "received" });
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.Address", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("city");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("country");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("postal_code");

                    b.Property<string>("State")
                        .HasColumnType("text")
                        .HasColumnName("state");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("street");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated_at");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_addresses");

                    b.HasIndex("UserId")
                        .HasDatabaseName("ix_addresses_user_id");

                    b.ToTable("addresses", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("a1a1a1a1-1234-1234-1234-1234567890ab"),
                            City = "Helsinki",
                            Country = "Finland",
                            CreatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(8010),
                            PostalCode = "00100",
                            Street = "Street 1",
                            UpdatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(8012),
                            UserId = new Guid("ad0ad1be-f7e5-47c7-b4c3-c17250cbebab")
                        },
                        new
                        {
                            Id = new Guid("a2a2a2a2-1234-1234-1234-1234567890ab"),
                            City = "Helsinki",
                            Country = "Finland",
                            CreatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(8018),
                            PostalCode = "00200",
                            Street = "Street 2",
                            UpdatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(8020),
                            UserId = new Guid("ad0ad1be-f7e5-47c7-b4c3-c17250cbebab")
                        },
                        new
                        {
                            Id = new Guid("a3a3a3a3-1234-1234-1234-1234567890ab"),
                            City = "Helsinki",
                            Country = "Finland",
                            CreatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(8023),
                            PostalCode = "00300",
                            Street = "Street 3",
                            UpdatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(8024),
                            UserId = new Guid("ad0ad1be-f7e5-47c7-b4c3-c17250cbebab")
                        },
                        new
                        {
                            Id = new Guid("b1b1b1b1-1234-1234-1234-1234567890ab"),
                            City = "Espoo",
                            Country = "Finland",
                            CreatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(8027),
                            PostalCode = "02100",
                            Street = "Street 1",
                            UpdatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(8029),
                            UserId = new Guid("760454fa-4af1-4ae6-9b18-ed3aec4be2a9")
                        },
                        new
                        {
                            Id = new Guid("b2b2b2b2-1234-1234-1234-1234567890ab"),
                            City = "Espoo",
                            Country = "Finland",
                            CreatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(8032),
                            PostalCode = "02100",
                            Street = "Street 2",
                            UpdatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(8033),
                            UserId = new Guid("760454fa-4af1-4ae6-9b18-ed3aec4be2a9")
                        },
                        new
                        {
                            Id = new Guid("b3b3b3b3-1234-1234-1234-1234567890ab"),
                            City = "Espoo",
                            Country = "Finland",
                            CreatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(8037),
                            PostalCode = "02100",
                            Street = "Street 3",
                            UpdatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(8039),
                            UserId = new Guid("760454fa-4af1-4ae6-9b18-ed3aec4be2a9")
                        },
                        new
                        {
                            Id = new Guid("c1c1c1c1-1234-1234-1234-1234567890ab"),
                            City = "Tampere",
                            Country = "Finland",
                            CreatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(8042),
                            PostalCode = "33100",
                            Street = "Street 3",
                            UpdatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(8043),
                            UserId = new Guid("611a0192-8b2e-4997-a8c8-59b93674d33b")
                        },
                        new
                        {
                            Id = new Guid("c2c2c2c2-1234-1234-1234-1234567890ab"),
                            City = "Tampere",
                            Country = "Finland",
                            CreatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(8047),
                            PostalCode = "33100",
                            Street = "Street 4",
                            UpdatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(8048),
                            UserId = new Guid("611a0192-8b2e-4997-a8c8-59b93674d33b")
                        },
                        new
                        {
                            Id = new Guid("c3c3c3c3-1234-1234-1234-1234567890ab"),
                            City = "Tampere",
                            Country = "Finland",
                            CreatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(8051),
                            PostalCode = "33100",
                            Street = "Street 6",
                            UpdatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(8053),
                            UserId = new Guid("611a0192-8b2e-4997-a8c8-59b93674d33b")
                        });
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("image");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id")
                        .HasName("pk_categories");

                    b.ToTable("categories", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("88499694-269b-4308-a64d-0e903a1f503d"),
                            CreatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(6929),
                            Image = "https://picsum.photos/1000/1000?random=99",
                            Name = "Fashion",
                            UpdatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(6933)
                        },
                        new
                        {
                            Id = new Guid("23b984f8-26f7-49a5-82ea-f4f5ddd16eca"),
                            CreatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(6939),
                            Image = "https://picsum.photos/1000/1000?random=100",
                            Name = "Sport",
                            UpdatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(6940)
                        },
                        new
                        {
                            Id = new Guid("e842529a-ac4a-48f4-9377-1786d94dd4e8"),
                            CreatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(6943),
                            Image = "https://picsum.photos/1000/1000?random=101",
                            Name = "Home",
                            UpdatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(6944)
                        });
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.Image", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid")
                        .HasColumnName("product_id");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated_at");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("url");

                    b.HasKey("Id")
                        .HasName("pk_images");

                    b.HasIndex("ProductId")
                        .HasDatabaseName("ix_images_product_id");

                    b.ToTable("images", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("d2f3943e-a01e-4205-a8bb-11abb62228d8"),
                            CreatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7109),
                            ProductId = new Guid("bc2983a5-b13c-49a4-9a6c-29c4dad9c355"),
                            UpdatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7111),
                            Url = "https://picsum.photos/1000/1000?random=1"
                        },
                        new
                        {
                            Id = new Guid("54261b25-58d9-4f34-86a1-29b4ef35591b"),
                            CreatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7149),
                            ProductId = new Guid("bc2983a5-b13c-49a4-9a6c-29c4dad9c355"),
                            UpdatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7151),
                            Url = "https://picsum.photos/1000/1000?random=2"
                        },
                        new
                        {
                            Id = new Guid("7901a1cb-ccfc-41c9-8dc2-caf3824265ba"),
                            CreatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7155),
                            ProductId = new Guid("bc2983a5-b13c-49a4-9a6c-29c4dad9c355"),
                            UpdatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7156),
                            Url = "https://picsum.photos/1000/1000?random=3"
                        },
                        new
                        {
                            Id = new Guid("952d5a63-e305-4c9a-9b8f-aaadcfa7e9dd"),
                            CreatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7160),
                            ProductId = new Guid("fedfd1c9-a73a-47bf-a635-370c193fc1df"),
                            UpdatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7162),
                            Url = "https://picsum.photos/1000/1000?random=4"
                        },
                        new
                        {
                            Id = new Guid("0b8385d3-25a5-44b0-b149-61907c243bb0"),
                            CreatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7165),
                            ProductId = new Guid("fedfd1c9-a73a-47bf-a635-370c193fc1df"),
                            UpdatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7167),
                            Url = "https://picsum.photos/1000/1000?random=5"
                        },
                        new
                        {
                            Id = new Guid("08e514d1-ee14-4a88-960c-f7490a70ee98"),
                            CreatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7172),
                            ProductId = new Guid("fedfd1c9-a73a-47bf-a635-370c193fc1df"),
                            UpdatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7173),
                            Url = "https://picsum.photos/1000/1000?random=6"
                        },
                        new
                        {
                            Id = new Guid("e915dee1-9fd5-4122-ac31-98bef82932fb"),
                            CreatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7177),
                            ProductId = new Guid("865770da-89af-4719-b00c-310b57d535e1"),
                            UpdatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7178),
                            Url = "https://picsum.photos/1000/1000?random=7"
                        },
                        new
                        {
                            Id = new Guid("86523fef-e547-4fd6-a7c2-624e1c32af34"),
                            CreatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7182),
                            ProductId = new Guid("865770da-89af-4719-b00c-310b57d535e1"),
                            UpdatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7183),
                            Url = "https://picsum.photos/1000/1000?random=8"
                        },
                        new
                        {
                            Id = new Guid("b6541dc1-6037-431f-baec-5511c5e1cdd5"),
                            CreatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7187),
                            ProductId = new Guid("865770da-89af-4719-b00c-310b57d535e1"),
                            UpdatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7188),
                            Url = "https://picsum.photos/1000/1000?random=9"
                        },
                        new
                        {
                            Id = new Guid("1724e13c-44d3-4108-a87a-5fe119eccc0a"),
                            CreatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7196),
                            ProductId = new Guid("bf49c60a-9173-4533-8ca6-182cc7f685eb"),
                            UpdatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7198),
                            Url = "https://picsum.photos/1000/1000?random=10"
                        },
                        new
                        {
                            Id = new Guid("97418f83-0f7a-4c1d-8fb3-406362ecb3de"),
                            CreatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7202),
                            ProductId = new Guid("bf49c60a-9173-4533-8ca6-182cc7f685eb"),
                            UpdatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7203),
                            Url = "https://picsum.photos/1000/1000?random=11"
                        },
                        new
                        {
                            Id = new Guid("3c685680-2f35-4656-8e11-3f2f24d74c6e"),
                            CreatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7207),
                            ProductId = new Guid("bf49c60a-9173-4533-8ca6-182cc7f685eb"),
                            UpdatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7209),
                            Url = "https://picsum.photos/1000/1000?random=12"
                        },
                        new
                        {
                            Id = new Guid("6bf64500-14db-4f3d-a436-702e08331f42"),
                            CreatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7212),
                            ProductId = new Guid("271309f9-03ae-4a21-a98c-cb2b911d7996"),
                            UpdatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7214),
                            Url = "https://picsum.photos/1000/1000?random=13"
                        },
                        new
                        {
                            Id = new Guid("b402de49-22ec-433c-a9d8-9fc733cb5199"),
                            CreatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7316),
                            ProductId = new Guid("271309f9-03ae-4a21-a98c-cb2b911d7996"),
                            UpdatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7318),
                            Url = "https://picsum.photos/1000/1000?random=14"
                        },
                        new
                        {
                            Id = new Guid("bef9db7f-1f28-4084-a010-b3082b4876d4"),
                            CreatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7322),
                            ProductId = new Guid("271309f9-03ae-4a21-a98c-cb2b911d7996"),
                            UpdatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7323),
                            Url = "https://picsum.photos/1000/1000?random=15"
                        },
                        new
                        {
                            Id = new Guid("82f7442b-d5d9-45b2-b2b2-c9c141396194"),
                            CreatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7327),
                            ProductId = new Guid("46e235cb-57a7-4eaa-b8c0-fc8096daee7b"),
                            UpdatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7329),
                            Url = "https://picsum.photos/1000/1000?random=16"
                        },
                        new
                        {
                            Id = new Guid("77e414ce-8299-4084-b72a-f154393d964e"),
                            CreatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7332),
                            ProductId = new Guid("46e235cb-57a7-4eaa-b8c0-fc8096daee7b"),
                            UpdatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7334),
                            Url = "https://picsum.photos/1000/1000?random=17"
                        },
                        new
                        {
                            Id = new Guid("28d00078-9bd3-4502-8e65-8c2c89ce7ba5"),
                            CreatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7342),
                            ProductId = new Guid("46e235cb-57a7-4eaa-b8c0-fc8096daee7b"),
                            UpdatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7344),
                            Url = "https://picsum.photos/1000/1000?random=18"
                        },
                        new
                        {
                            Id = new Guid("d90317cd-f169-487d-9183-90de00bf9b8f"),
                            CreatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7347),
                            ProductId = new Guid("425f57d3-5bcd-42cd-a401-9a3a9af83c8f"),
                            UpdatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7349),
                            Url = "https://picsum.photos/1000/1000?random=19"
                        },
                        new
                        {
                            Id = new Guid("aedbfeba-2bd1-4536-9637-b1469783436e"),
                            CreatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7352),
                            ProductId = new Guid("425f57d3-5bcd-42cd-a401-9a3a9af83c8f"),
                            UpdatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7354),
                            Url = "https://picsum.photos/1000/1000?random=20"
                        },
                        new
                        {
                            Id = new Guid("4fd9a6f9-8dd8-4e8b-a233-6e7355962d8b"),
                            CreatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7357),
                            ProductId = new Guid("425f57d3-5bcd-42cd-a401-9a3a9af83c8f"),
                            UpdatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7359),
                            Url = "https://picsum.photos/1000/1000?random=21"
                        },
                        new
                        {
                            Id = new Guid("c32e666e-935d-4ded-a598-1bdd2ec13286"),
                            CreatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7362),
                            ProductId = new Guid("30c4e1a7-3b0f-40e9-be69-903936c22290"),
                            UpdatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7364),
                            Url = "https://picsum.photos/1000/1000?random=22"
                        },
                        new
                        {
                            Id = new Guid("0e136c72-3d18-48c3-933c-dac2078927d9"),
                            CreatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7367),
                            ProductId = new Guid("30c4e1a7-3b0f-40e9-be69-903936c22290"),
                            UpdatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7369),
                            Url = "https://picsum.photos/1000/1000?random=23"
                        },
                        new
                        {
                            Id = new Guid("f8fa93f7-8afa-4a49-9704-a4a5f1b8f48a"),
                            CreatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7372),
                            ProductId = new Guid("30c4e1a7-3b0f-40e9-be69-903936c22290"),
                            UpdatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7374),
                            Url = "https://picsum.photos/1000/1000?random=24"
                        },
                        new
                        {
                            Id = new Guid("0e11f75f-996a-4b1b-9f95-d0164e1aeec1"),
                            CreatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7377),
                            ProductId = new Guid("7f49c05a-d60c-49e6-b804-f3eb5a65522f"),
                            UpdatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7379),
                            Url = "https://picsum.photos/1000/1000?random=25"
                        },
                        new
                        {
                            Id = new Guid("4a31c082-faf5-4476-ac7c-e1ef978f75a3"),
                            CreatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7385),
                            ProductId = new Guid("7f49c05a-d60c-49e6-b804-f3eb5a65522f"),
                            UpdatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7387),
                            Url = "https://picsum.photos/1000/1000?random=26"
                        },
                        new
                        {
                            Id = new Guid("0540e46c-73fd-45e9-8d07-f0ba970df1b7"),
                            CreatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7391),
                            ProductId = new Guid("7f49c05a-d60c-49e6-b804-f3eb5a65522f"),
                            UpdatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7392),
                            Url = "https://picsum.photos/1000/1000?random=27"
                        },
                        new
                        {
                            Id = new Guid("ed2a0aec-ee3c-4bcb-998e-134e16d18e98"),
                            CreatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7395),
                            ProductId = new Guid("ead99f26-fbfb-4b83-bf74-2ef2fd2b4754"),
                            UpdatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7397),
                            Url = "https://picsum.photos/1000/1000?random=28"
                        },
                        new
                        {
                            Id = new Guid("c9f7a2e1-4daa-4620-988d-b245fe072ccd"),
                            CreatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7400),
                            ProductId = new Guid("ead99f26-fbfb-4b83-bf74-2ef2fd2b4754"),
                            UpdatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7402),
                            Url = "https://picsum.photos/1000/1000?random=29"
                        },
                        new
                        {
                            Id = new Guid("05240f98-3d7b-4f6f-a7da-a717e8ddb518"),
                            CreatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7405),
                            ProductId = new Guid("ead99f26-fbfb-4b83-bf74-2ef2fd2b4754"),
                            UpdatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7407),
                            Url = "https://picsum.photos/1000/1000?random=30"
                        },
                        new
                        {
                            Id = new Guid("53269afb-bb93-4c98-bc1b-721da536685a"),
                            CreatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7410),
                            ProductId = new Guid("052e6003-3e9b-43f3-9d59-0656df90989e"),
                            UpdatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7412),
                            Url = "https://picsum.photos/1000/1000?random=31"
                        },
                        new
                        {
                            Id = new Guid("f3647104-3528-4204-bf22-ce25b2398092"),
                            CreatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7415),
                            ProductId = new Guid("052e6003-3e9b-43f3-9d59-0656df90989e"),
                            UpdatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7417),
                            Url = "https://picsum.photos/1000/1000?random=32"
                        },
                        new
                        {
                            Id = new Guid("ec0c277f-3dd9-4caf-a8f9-b0a07e20c0a1"),
                            CreatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7420),
                            ProductId = new Guid("052e6003-3e9b-43f3-9d59-0656df90989e"),
                            UpdatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7422),
                            Url = "https://picsum.photos/1000/1000?random=33"
                        },
                        new
                        {
                            Id = new Guid("a0ab2194-d776-460e-84e9-18ccd2037c8e"),
                            CreatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7430),
                            ProductId = new Guid("b4143d6b-c302-4215-82e9-c9123d2f2ee5"),
                            UpdatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7432),
                            Url = "https://picsum.photos/1000/1000?random=34"
                        },
                        new
                        {
                            Id = new Guid("ca18ff7b-fd18-4962-9350-fc38e6fe2fcd"),
                            CreatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7435),
                            ProductId = new Guid("b4143d6b-c302-4215-82e9-c9123d2f2ee5"),
                            UpdatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7437),
                            Url = "https://picsum.photos/1000/1000?random=35"
                        },
                        new
                        {
                            Id = new Guid("7c72c343-eb6b-40bc-9221-efaa1407a30c"),
                            CreatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7440),
                            ProductId = new Guid("b4143d6b-c302-4215-82e9-c9123d2f2ee5"),
                            UpdatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7442),
                            Url = "https://picsum.photos/1000/1000?random=36"
                        },
                        new
                        {
                            Id = new Guid("d7d78aa5-1671-4521-960f-8b719bf43a3b"),
                            CreatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7445),
                            ProductId = new Guid("41dde13b-dbcc-4f51-a31c-2231f94ddcab"),
                            UpdatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7446),
                            Url = "https://picsum.photos/1000/1000?random=37"
                        },
                        new
                        {
                            Id = new Guid("93edf3d7-4f1d-4345-8453-ed6d97dc6ec8"),
                            CreatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7450),
                            ProductId = new Guid("41dde13b-dbcc-4f51-a31c-2231f94ddcab"),
                            UpdatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7451),
                            Url = "https://picsum.photos/1000/1000?random=38"
                        },
                        new
                        {
                            Id = new Guid("a4a6a758-4aad-4129-a8d2-7ef73c552049"),
                            CreatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7455),
                            ProductId = new Guid("41dde13b-dbcc-4f51-a31c-2231f94ddcab"),
                            UpdatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7456),
                            Url = "https://picsum.photos/1000/1000?random=39"
                        },
                        new
                        {
                            Id = new Guid("818054da-cad8-46cf-876e-2973d7dc2651"),
                            CreatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7460),
                            ProductId = new Guid("9101df8f-38e3-40de-a46a-8ca66c26222d"),
                            UpdatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7462),
                            Url = "https://picsum.photos/1000/1000?random=40"
                        },
                        new
                        {
                            Id = new Guid("9fe43dd5-d0aa-4cf8-859b-83f18f2e878c"),
                            CreatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7465),
                            ProductId = new Guid("9101df8f-38e3-40de-a46a-8ca66c26222d"),
                            UpdatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7467),
                            Url = "https://picsum.photos/1000/1000?random=41"
                        },
                        new
                        {
                            Id = new Guid("1d5d98bf-32cd-45fe-85de-b4623f40b0dd"),
                            CreatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7472),
                            ProductId = new Guid("9101df8f-38e3-40de-a46a-8ca66c26222d"),
                            UpdatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7474),
                            Url = "https://picsum.photos/1000/1000?random=42"
                        },
                        new
                        {
                            Id = new Guid("c8e41a26-680b-4bb6-8b75-fff58a9a56bb"),
                            CreatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7477),
                            ProductId = new Guid("8b441114-e030-4412-8952-2370a4b7f05a"),
                            UpdatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7479),
                            Url = "https://picsum.photos/1000/1000?random=43"
                        },
                        new
                        {
                            Id = new Guid("bb6fb117-2ada-4c60-b83a-1d02c565efd5"),
                            CreatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7482),
                            ProductId = new Guid("8b441114-e030-4412-8952-2370a4b7f05a"),
                            UpdatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7484),
                            Url = "https://picsum.photos/1000/1000?random=44"
                        },
                        new
                        {
                            Id = new Guid("3c49d643-c68d-4350-b720-01bd43ee7e3e"),
                            CreatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7487),
                            ProductId = new Guid("8b441114-e030-4412-8952-2370a4b7f05a"),
                            UpdatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7489),
                            Url = "https://picsum.photos/1000/1000?random=45"
                        });
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("AddressId")
                        .HasColumnType("uuid")
                        .HasColumnName("address_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<Status>("Status")
                        .HasColumnType("status")
                        .HasColumnName("status");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated_at");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_orders");

                    b.HasIndex("AddressId")
                        .HasDatabaseName("ix_orders_address_id");

                    b.HasIndex("UserId")
                        .HasDatabaseName("ix_orders_user_id");

                    b.ToTable("orders", (string)null);
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.OrderItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uuid")
                        .HasColumnName("order_id");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric")
                        .HasColumnName("price");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid")
                        .HasColumnName("product_id");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer")
                        .HasColumnName("quantity");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated_at");

                    b.Property<Guid>("VariantId")
                        .HasColumnType("uuid")
                        .HasColumnName("variant_id");

                    b.HasKey("Id")
                        .HasName("pk_order_items");

                    b.HasIndex("OrderId")
                        .HasDatabaseName("ix_order_items_order_id");

                    b.HasIndex("ProductId")
                        .HasDatabaseName("ix_order_items_product_id");

                    b.HasIndex("VariantId")
                        .HasDatabaseName("ix_order_items_variant_id");

                    b.ToTable("order_items", (string)null);
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uuid")
                        .HasColumnName("category_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric")
                        .HasColumnName("price");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id")
                        .HasName("pk_products");

                    b.HasIndex("CategoryId")
                        .HasDatabaseName("ix_products_category_id");

                    b.ToTable("products", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("bc2983a5-b13c-49a4-9a6c-29c4dad9c355"),
                            CategoryId = new Guid("88499694-269b-4308-a64d-0e903a1f503d"),
                            CreatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(6981),
                            Description = "Description for Fashion Product 1",
                            Price = 100m,
                            Title = "Fashion Product 1",
                            UpdatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(6983)
                        },
                        new
                        {
                            Id = new Guid("fedfd1c9-a73a-47bf-a635-370c193fc1df"),
                            CategoryId = new Guid("88499694-269b-4308-a64d-0e903a1f503d"),
                            CreatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(6990),
                            Description = "Description for Fashion Product 2",
                            Price = 140m,
                            Title = "Fashion Product 2",
                            UpdatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(6992)
                        },
                        new
                        {
                            Id = new Guid("865770da-89af-4719-b00c-310b57d535e1"),
                            CategoryId = new Guid("88499694-269b-4308-a64d-0e903a1f503d"),
                            CreatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(6995),
                            Description = "Description for Fashion Product 3",
                            Price = 120m,
                            Title = "Fashion Product 3",
                            UpdatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(6996)
                        },
                        new
                        {
                            Id = new Guid("bf49c60a-9173-4533-8ca6-182cc7f685eb"),
                            CategoryId = new Guid("88499694-269b-4308-a64d-0e903a1f503d"),
                            CreatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(6999),
                            Description = "Description for Fashion Product 4",
                            Price = 200m,
                            Title = "Fashion Product 4",
                            UpdatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7001)
                        },
                        new
                        {
                            Id = new Guid("271309f9-03ae-4a21-a98c-cb2b911d7996"),
                            CategoryId = new Guid("88499694-269b-4308-a64d-0e903a1f503d"),
                            CreatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7004),
                            Description = "Description for Fashion Product 5",
                            Price = 104m,
                            Title = "Fashion Product 5",
                            UpdatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7006)
                        },
                        new
                        {
                            Id = new Guid("46e235cb-57a7-4eaa-b8c0-fc8096daee7b"),
                            CategoryId = new Guid("23b984f8-26f7-49a5-82ea-f4f5ddd16eca"),
                            CreatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7012),
                            Description = "Description for Sport Product 1",
                            Price = 200m,
                            Title = "Sport Product 1",
                            UpdatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7014)
                        },
                        new
                        {
                            Id = new Guid("425f57d3-5bcd-42cd-a401-9a3a9af83c8f"),
                            CategoryId = new Guid("23b984f8-26f7-49a5-82ea-f4f5ddd16eca"),
                            CreatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7017),
                            Description = "Description for Sport Product 2",
                            Price = 240m,
                            Title = "Sport Product 2",
                            UpdatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7018)
                        },
                        new
                        {
                            Id = new Guid("30c4e1a7-3b0f-40e9-be69-903936c22290"),
                            CategoryId = new Guid("23b984f8-26f7-49a5-82ea-f4f5ddd16eca"),
                            CreatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7021),
                            Description = "Description for Sport Product 3",
                            Price = 154m,
                            Title = "Sport Product 3",
                            UpdatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7023)
                        },
                        new
                        {
                            Id = new Guid("7f49c05a-d60c-49e6-b804-f3eb5a65522f"),
                            CategoryId = new Guid("23b984f8-26f7-49a5-82ea-f4f5ddd16eca"),
                            CreatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7026),
                            Description = "Description for Sport Product 4",
                            Price = 333m,
                            Title = "Sport Product 4",
                            UpdatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7028)
                        },
                        new
                        {
                            Id = new Guid("ead99f26-fbfb-4b83-bf74-2ef2fd2b4754"),
                            CategoryId = new Guid("23b984f8-26f7-49a5-82ea-f4f5ddd16eca"),
                            CreatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7032),
                            Description = "Description for Sport Product 5",
                            Price = 205m,
                            Title = "Sport Product 5",
                            UpdatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7034)
                        },
                        new
                        {
                            Id = new Guid("052e6003-3e9b-43f3-9d59-0656df90989e"),
                            CategoryId = new Guid("e842529a-ac4a-48f4-9377-1786d94dd4e8"),
                            CreatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7037),
                            Description = "Description for Home Product 1",
                            Price = 300m,
                            Title = "Home Product 1",
                            UpdatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7038)
                        },
                        new
                        {
                            Id = new Guid("b4143d6b-c302-4215-82e9-c9123d2f2ee5"),
                            CategoryId = new Guid("e842529a-ac4a-48f4-9377-1786d94dd4e8"),
                            CreatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7041),
                            Description = "Description for Home Product 2",
                            Price = 32m,
                            Title = "Home Product 2",
                            UpdatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7043)
                        },
                        new
                        {
                            Id = new Guid("41dde13b-dbcc-4f51-a31c-2231f94ddcab"),
                            CategoryId = new Guid("e842529a-ac4a-48f4-9377-1786d94dd4e8"),
                            CreatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7045),
                            Description = "Description for Home Product 3",
                            Price = 56m,
                            Title = "Home Product 3",
                            UpdatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7047)
                        },
                        new
                        {
                            Id = new Guid("9101df8f-38e3-40de-a46a-8ca66c26222d"),
                            CategoryId = new Guid("e842529a-ac4a-48f4-9377-1786d94dd4e8"),
                            CreatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7050),
                            Description = "Description for Home Product 4",
                            Price = 143m,
                            Title = "Home Product 4",
                            UpdatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7051)
                        },
                        new
                        {
                            Id = new Guid("8b441114-e030-4412-8952-2370a4b7f05a"),
                            CategoryId = new Guid("e842529a-ac4a-48f4-9377-1786d94dd4e8"),
                            CreatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7054),
                            Description = "Description for Home Product 5",
                            Price = 3000m,
                            Title = "Home Product 5",
                            UpdatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7056)
                        });
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.Review", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("comment");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid")
                        .HasColumnName("product_id");

                    b.Property<int>("Rating")
                        .HasColumnType("integer")
                        .HasColumnName("rating");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated_at");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_reviews");

                    b.HasIndex("ProductId")
                        .HasDatabaseName("ix_reviews_product_id");

                    b.HasIndex("UserId", "ProductId")
                        .IsUnique()
                        .HasDatabaseName("ix_reviews_user_id_product_id");

                    b.ToTable("reviews", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("c9e3c10d-b843-434d-bcbe-bfe35e17dd52"),
                            Comment = "Great product!",
                            CreatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7926),
                            ProductId = new Guid("bc2983a5-b13c-49a4-9a6c-29c4dad9c355"),
                            Rating = 5,
                            UpdatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7929),
                            UserId = new Guid("ad0ad1be-f7e5-47c7-b4c3-c17250cbebab")
                        },
                        new
                        {
                            Id = new Guid("71dd6268-f87a-4816-a5bf-c94769a51473"),
                            Comment = "Really enjoyed this.",
                            CreatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7934),
                            ProductId = new Guid("425f57d3-5bcd-42cd-a401-9a3a9af83c8f"),
                            Rating = 4,
                            UpdatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7936),
                            UserId = new Guid("760454fa-4af1-4ae6-9b18-ed3aec4be2a9")
                        },
                        new
                        {
                            Id = new Guid("eb57b891-c019-46c9-9c6e-630a79d19787"),
                            Comment = "Good quality, but expensive.",
                            CreatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7939),
                            ProductId = new Guid("41dde13b-dbcc-4f51-a31c-2231f94ddcab"),
                            Rating = 3,
                            UpdatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7940),
                            UserId = new Guid("ad0ad1be-f7e5-47c7-b4c3-c17250cbebab")
                        },
                        new
                        {
                            Id = new Guid("9aa483ac-872b-468c-af4f-2c1f94beec3a"),
                            Comment = "Loved the design!",
                            CreatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7943),
                            ProductId = new Guid("bf49c60a-9173-4533-8ca6-182cc7f685eb"),
                            Rating = 4,
                            UpdatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7945),
                            UserId = new Guid("760454fa-4af1-4ae6-9b18-ed3aec4be2a9")
                        },
                        new
                        {
                            Id = new Guid("ca5b7d5d-309c-4973-ad8c-132a4142b5c1"),
                            Comment = "Perfect for my needs!",
                            CreatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7947),
                            ProductId = new Guid("ead99f26-fbfb-4b83-bf74-2ef2fd2b4754"),
                            Rating = 5,
                            UpdatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7949),
                            UserId = new Guid("611a0192-8b2e-4997-a8c8-59b93674d33b")
                        },
                        new
                        {
                            Id = new Guid("a4438f9a-a573-4967-96c3-6a38fcfb6132"),
                            Comment = "Nice product, quick delivery.",
                            CreatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7952),
                            ProductId = new Guid("fedfd1c9-a73a-47bf-a635-370c193fc1df"),
                            Rating = 4,
                            UpdatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7954),
                            UserId = new Guid("611a0192-8b2e-4997-a8c8-59b93674d33b")
                        },
                        new
                        {
                            Id = new Guid("c2cd9d37-25d0-4b5d-a336-8214ce83b648"),
                            Comment = "Outstanding quality!",
                            CreatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7957),
                            ProductId = new Guid("052e6003-3e9b-43f3-9d59-0656df90989e"),
                            Rating = 5,
                            UpdatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7958),
                            UserId = new Guid("611a0192-8b2e-4997-a8c8-59b93674d33b")
                        },
                        new
                        {
                            Id = new Guid("dfc6ffd5-140c-4505-9428-7fe852a93afc"),
                            Comment = "Decent, but expected more.",
                            CreatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7961),
                            ProductId = new Guid("865770da-89af-4719-b00c-310b57d535e1"),
                            Rating = 3,
                            UpdatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7962),
                            UserId = new Guid("ad0ad1be-f7e5-47c7-b4c3-c17250cbebab")
                        },
                        new
                        {
                            Id = new Guid("38fb4093-965e-4e3f-a7a2-c19103fc239e"),
                            Comment = "Absolutely love this!",
                            CreatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7965),
                            ProductId = new Guid("8b441114-e030-4412-8952-2370a4b7f05a"),
                            Rating = 5,
                            UpdatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7967),
                            UserId = new Guid("760454fa-4af1-4ae6-9b18-ed3aec4be2a9")
                        },
                        new
                        {
                            Id = new Guid("30a4ff5e-3bd1-429d-9981-adbcd46e2537"),
                            Comment = "Not as described, disappointed.",
                            CreatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7970),
                            ProductId = new Guid("30c4e1a7-3b0f-40e9-be69-903936c22290"),
                            Rating = 2,
                            UpdatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7972),
                            UserId = new Guid("611a0192-8b2e-4997-a8c8-59b93674d33b")
                        });
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Avatar")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("avatar");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("first_name");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("last_name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("password");

                    b.Property<Role>("Role")
                        .HasColumnType("role")
                        .HasColumnName("role");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id")
                        .HasName("pk_users");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasDatabaseName("ix_users_email");

                    b.ToTable("users", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("ad0ad1be-f7e5-47c7-b4c3-c17250cbebab"),
                            Avatar = "https://picsum.photos/1000/1000?random=150",
                            CreatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 452, DateTimeKind.Local).AddTicks(2479),
                            Email = "admin@mail.com",
                            FirstName = "Admin",
                            LastName = "admin",
                            Password = "UW+fszjBieakY7+gbKYIIw==;9E7m+Gy7LtzcwAF0OYJIiO+X3igqtr3kphjIbXoAUmg=",
                            Role = Role.Admin,
                            UpdatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 452, DateTimeKind.Local).AddTicks(2537)
                        },
                        new
                        {
                            Id = new Guid("760454fa-4af1-4ae6-9b18-ed3aec4be2a9"),
                            Avatar = "https://picsum.photos/1000/1000?random=151",
                            CreatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 453, DateTimeKind.Local).AddTicks(7384),
                            Email = "cena@mail.com",
                            FirstName = "John",
                            LastName = "Cena",
                            Password = "PF/NRP2kFdpp8D8nRMTxOg==;D7XDsVqsmg7rDJ5L23IT05/TwoHhdqyms/sHCzmzyOw=",
                            Role = Role.Customer,
                            UpdatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 453, DateTimeKind.Local).AddTicks(7388)
                        },
                        new
                        {
                            Id = new Guid("611a0192-8b2e-4997-a8c8-59b93674d33b"),
                            Avatar = "https://picsum.photos/1000/1000?random=152",
                            CreatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 455, DateTimeKind.Local).AddTicks(1878),
                            Email = "doe@mail.com",
                            FirstName = "John",
                            LastName = "Doe",
                            Password = "EK0YIZsJ/Vhq+ckGgLgFGA==;+BEV2Lm1j5nq0/2DES3HiuetSr8enH/aunnlatG/IhU=",
                            Role = Role.Customer,
                            UpdatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 455, DateTimeKind.Local).AddTicks(1880)
                        });
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.Variant", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Color>("Color")
                        .HasColumnType("color")
                        .HasColumnName("color");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid")
                        .HasColumnName("product_id");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer")
                        .HasColumnName("quantity");

                    b.Property<Size>("Size")
                        .HasColumnType("size")
                        .HasColumnName("size");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id")
                        .HasName("pk_variants");

                    b.HasIndex("ProductId")
                        .HasDatabaseName("ix_variants_product_id");

                    b.ToTable("variants", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("18905cab-67de-4708-9c7d-13d266da6d35"),
                            Color = Color.Red,
                            CreatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7551),
                            ProductId = new Guid("bc2983a5-b13c-49a4-9a6c-29c4dad9c355"),
                            Quantity = 10,
                            Size = Size.L,
                            UpdatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7553)
                        },
                        new
                        {
                            Id = new Guid("8343bb71-4ee3-4eed-aaf8-9e7bd72c38fb"),
                            Color = Color.Blue,
                            CreatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7562),
                            ProductId = new Guid("bc2983a5-b13c-49a4-9a6c-29c4dad9c355"),
                            Quantity = 20,
                            Size = Size.XL,
                            UpdatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7563)
                        },
                        new
                        {
                            Id = new Guid("e5239e24-d4f0-4571-ac9e-495913c9d769"),
                            Color = Color.Black,
                            CreatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7567),
                            ProductId = new Guid("bc2983a5-b13c-49a4-9a6c-29c4dad9c355"),
                            Quantity = 30,
                            Size = Size.XXXL,
                            UpdatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7568)
                        },
                        new
                        {
                            Id = new Guid("ff49ecc8-1455-4595-83ee-38dece47e6d4"),
                            Color = Color.Red,
                            CreatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7572),
                            ProductId = new Guid("fedfd1c9-a73a-47bf-a635-370c193fc1df"),
                            Quantity = 20,
                            Size = Size.L,
                            UpdatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7573)
                        },
                        new
                        {
                            Id = new Guid("b1a5d64e-54b1-417c-8691-442c1c484992"),
                            Color = Color.Blue,
                            CreatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7580),
                            ProductId = new Guid("fedfd1c9-a73a-47bf-a635-370c193fc1df"),
                            Quantity = 20,
                            Size = Size.XL,
                            UpdatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7581)
                        },
                        new
                        {
                            Id = new Guid("b6a3d278-567d-4eda-ad67-529513bea9f7"),
                            Color = Color.Black,
                            CreatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7586),
                            ProductId = new Guid("fedfd1c9-a73a-47bf-a635-370c193fc1df"),
                            Quantity = 30,
                            Size = Size.XXXL,
                            UpdatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7587)
                        },
                        new
                        {
                            Id = new Guid("d8a0f9db-3a6d-4bd8-a704-a094cdd010ea"),
                            Color = Color.Red,
                            CreatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7591),
                            ProductId = new Guid("865770da-89af-4719-b00c-310b57d535e1"),
                            Quantity = 10,
                            Size = Size.L,
                            UpdatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7593)
                        },
                        new
                        {
                            Id = new Guid("e67872a9-9835-4f98-9924-733d19dd8490"),
                            Color = Color.Blue,
                            CreatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7596),
                            ProductId = new Guid("865770da-89af-4719-b00c-310b57d535e1"),
                            Quantity = 20,
                            Size = Size.XL,
                            UpdatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7598)
                        },
                        new
                        {
                            Id = new Guid("62f61535-1e3c-4e47-afbc-faf94c7fdff1"),
                            Color = Color.Black,
                            CreatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7602),
                            ProductId = new Guid("865770da-89af-4719-b00c-310b57d535e1"),
                            Quantity = 30,
                            Size = Size.XXXL,
                            UpdatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7603)
                        },
                        new
                        {
                            Id = new Guid("47cda36f-581c-4694-bba8-14672e939bad"),
                            Color = Color.Red,
                            CreatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7608),
                            ProductId = new Guid("bf49c60a-9173-4533-8ca6-182cc7f685eb"),
                            Quantity = 10,
                            Size = Size.L,
                            UpdatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7610)
                        },
                        new
                        {
                            Id = new Guid("a73fc07d-6ac9-4b08-adc9-92552d97222f"),
                            Color = Color.Blue,
                            CreatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7613),
                            ProductId = new Guid("bf49c60a-9173-4533-8ca6-182cc7f685eb"),
                            Quantity = 20,
                            Size = Size.XL,
                            UpdatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7615)
                        },
                        new
                        {
                            Id = new Guid("fb814e85-8689-448f-a1c9-cb763c190543"),
                            Color = Color.Black,
                            CreatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7618),
                            ProductId = new Guid("bf49c60a-9173-4533-8ca6-182cc7f685eb"),
                            Quantity = 30,
                            Size = Size.XXXL,
                            UpdatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7620)
                        },
                        new
                        {
                            Id = new Guid("3c472e03-4152-4be0-81a5-2984f7974b4f"),
                            Color = Color.Red,
                            CreatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7626),
                            ProductId = new Guid("271309f9-03ae-4a21-a98c-cb2b911d7996"),
                            Quantity = 10,
                            Size = Size.L,
                            UpdatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7627)
                        },
                        new
                        {
                            Id = new Guid("295a8832-62a1-49be-88f2-51af3ce3b58f"),
                            Color = Color.Blue,
                            CreatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7631),
                            ProductId = new Guid("271309f9-03ae-4a21-a98c-cb2b911d7996"),
                            Quantity = 20,
                            Size = Size.XL,
                            UpdatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7633)
                        },
                        new
                        {
                            Id = new Guid("240ffac6-935f-4768-ab60-7ea131c40f62"),
                            Color = Color.Black,
                            CreatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7636),
                            ProductId = new Guid("271309f9-03ae-4a21-a98c-cb2b911d7996"),
                            Quantity = 30,
                            Size = Size.XXXL,
                            UpdatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7638)
                        },
                        new
                        {
                            Id = new Guid("eb30d735-1c90-4d99-bec5-27c4205ed817"),
                            Color = Color.Red,
                            CreatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7641),
                            ProductId = new Guid("46e235cb-57a7-4eaa-b8c0-fc8096daee7b"),
                            Quantity = 10,
                            Size = Size.L,
                            UpdatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7643)
                        },
                        new
                        {
                            Id = new Guid("c9c5a326-6df4-4a7c-a5f7-c58f82bfa818"),
                            Color = Color.Blue,
                            CreatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7647),
                            ProductId = new Guid("46e235cb-57a7-4eaa-b8c0-fc8096daee7b"),
                            Quantity = 20,
                            Size = Size.XL,
                            UpdatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7648)
                        },
                        new
                        {
                            Id = new Guid("5ffa57bb-6172-453d-8625-ce65e82eabb6"),
                            Color = Color.Black,
                            CreatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7653),
                            ProductId = new Guid("46e235cb-57a7-4eaa-b8c0-fc8096daee7b"),
                            Quantity = 30,
                            Size = Size.XXXL,
                            UpdatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7655)
                        },
                        new
                        {
                            Id = new Guid("43c74052-ff24-4ace-b6da-83a3ab65e129"),
                            Color = Color.Red,
                            CreatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7658),
                            ProductId = new Guid("425f57d3-5bcd-42cd-a401-9a3a9af83c8f"),
                            Quantity = 10,
                            Size = Size.L,
                            UpdatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7660)
                        },
                        new
                        {
                            Id = new Guid("44f936bb-3280-4d7f-9a61-eee7243e8580"),
                            Color = Color.Blue,
                            CreatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7664),
                            ProductId = new Guid("425f57d3-5bcd-42cd-a401-9a3a9af83c8f"),
                            Quantity = 20,
                            Size = Size.XL,
                            UpdatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7665)
                        },
                        new
                        {
                            Id = new Guid("e56aab04-505c-4f3f-a700-c25ed27a9ad6"),
                            Color = Color.Black,
                            CreatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7671),
                            ProductId = new Guid("425f57d3-5bcd-42cd-a401-9a3a9af83c8f"),
                            Quantity = 30,
                            Size = Size.XXXL,
                            UpdatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7673)
                        },
                        new
                        {
                            Id = new Guid("e694ad0f-33cb-47b2-9e02-c684f4f1c237"),
                            Color = Color.Red,
                            CreatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7676),
                            ProductId = new Guid("30c4e1a7-3b0f-40e9-be69-903936c22290"),
                            Quantity = 10,
                            Size = Size.L,
                            UpdatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7678)
                        },
                        new
                        {
                            Id = new Guid("ec582842-9dfd-4f8c-bd7d-0f466fd3cf8c"),
                            Color = Color.Blue,
                            CreatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7681),
                            ProductId = new Guid("30c4e1a7-3b0f-40e9-be69-903936c22290"),
                            Quantity = 20,
                            Size = Size.XL,
                            UpdatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7683)
                        },
                        new
                        {
                            Id = new Guid("3d75c869-b7ab-4d5f-b418-159135762679"),
                            Color = Color.Black,
                            CreatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7686),
                            ProductId = new Guid("30c4e1a7-3b0f-40e9-be69-903936c22290"),
                            Quantity = 30,
                            Size = Size.XXXL,
                            UpdatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7688)
                        },
                        new
                        {
                            Id = new Guid("37cb6e02-b9c3-4cc9-8a74-8a16fcf59c8c"),
                            Color = Color.Red,
                            CreatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7692),
                            ProductId = new Guid("7f49c05a-d60c-49e6-b804-f3eb5a65522f"),
                            Quantity = 10,
                            Size = Size.L,
                            UpdatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7693)
                        },
                        new
                        {
                            Id = new Guid("f23a6b86-3658-4029-8aaa-e5d4c2377776"),
                            Color = Color.Blue,
                            CreatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7697),
                            ProductId = new Guid("7f49c05a-d60c-49e6-b804-f3eb5a65522f"),
                            Quantity = 20,
                            Size = Size.XL,
                            UpdatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7699)
                        },
                        new
                        {
                            Id = new Guid("dc05ed7f-c868-46f9-9d51-c738161ea666"),
                            Color = Color.Black,
                            CreatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7702),
                            ProductId = new Guid("7f49c05a-d60c-49e6-b804-f3eb5a65522f"),
                            Quantity = 30,
                            Size = Size.XXXL,
                            UpdatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7704)
                        },
                        new
                        {
                            Id = new Guid("512db5e3-d9d4-49eb-bb52-6c073056e5fd"),
                            Color = Color.Red,
                            CreatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7707),
                            ProductId = new Guid("ead99f26-fbfb-4b83-bf74-2ef2fd2b4754"),
                            Quantity = 10,
                            Size = Size.L,
                            UpdatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7709)
                        },
                        new
                        {
                            Id = new Guid("dc4f954c-4664-42b9-b2c9-f4bded44beee"),
                            Color = Color.Blue,
                            CreatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7714),
                            ProductId = new Guid("ead99f26-fbfb-4b83-bf74-2ef2fd2b4754"),
                            Quantity = 20,
                            Size = Size.XL,
                            UpdatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7716)
                        },
                        new
                        {
                            Id = new Guid("de9c2d5c-b920-444d-beac-2bce85bed493"),
                            Color = Color.Black,
                            CreatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7720),
                            ProductId = new Guid("ead99f26-fbfb-4b83-bf74-2ef2fd2b4754"),
                            Quantity = 30,
                            Size = Size.XXXL,
                            UpdatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7721)
                        },
                        new
                        {
                            Id = new Guid("10509d07-e968-4297-8eb5-2b021cda8bf4"),
                            Color = Color.Red,
                            CreatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7725),
                            ProductId = new Guid("052e6003-3e9b-43f3-9d59-0656df90989e"),
                            Quantity = 10,
                            Size = Size.L,
                            UpdatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7726)
                        },
                        new
                        {
                            Id = new Guid("e9c4c892-2781-4fd4-aa39-6726bd8f7d1f"),
                            Color = Color.Blue,
                            CreatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7730),
                            ProductId = new Guid("052e6003-3e9b-43f3-9d59-0656df90989e"),
                            Quantity = 20,
                            Size = Size.XL,
                            UpdatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7731)
                        },
                        new
                        {
                            Id = new Guid("595204a8-fc60-4568-83bc-0e86c4880102"),
                            Color = Color.Black,
                            CreatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7735),
                            ProductId = new Guid("052e6003-3e9b-43f3-9d59-0656df90989e"),
                            Quantity = 30,
                            Size = Size.XXXL,
                            UpdatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7736)
                        },
                        new
                        {
                            Id = new Guid("067877d3-097e-4507-8a09-016c46f51349"),
                            Color = Color.Red,
                            CreatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7795),
                            ProductId = new Guid("b4143d6b-c302-4215-82e9-c9123d2f2ee5"),
                            Quantity = 10,
                            Size = Size.L,
                            UpdatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7797)
                        },
                        new
                        {
                            Id = new Guid("c3ae01af-3bcf-4744-a071-0670ef9e8ecc"),
                            Color = Color.Blue,
                            CreatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7801),
                            ProductId = new Guid("b4143d6b-c302-4215-82e9-c9123d2f2ee5"),
                            Quantity = 20,
                            Size = Size.XL,
                            UpdatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7803)
                        },
                        new
                        {
                            Id = new Guid("6034d7a6-fa2c-4d98-ab21-17d1ce0c2270"),
                            Color = Color.Black,
                            CreatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7806),
                            ProductId = new Guid("b4143d6b-c302-4215-82e9-c9123d2f2ee5"),
                            Quantity = 30,
                            Size = Size.XXXL,
                            UpdatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7808)
                        },
                        new
                        {
                            Id = new Guid("0aabc0e7-ac38-40da-a851-26c7d80c7840"),
                            Color = Color.Red,
                            CreatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7814),
                            ProductId = new Guid("41dde13b-dbcc-4f51-a31c-2231f94ddcab"),
                            Quantity = 10,
                            Size = Size.L,
                            UpdatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7816)
                        },
                        new
                        {
                            Id = new Guid("9f60d5a3-c687-4126-aa5c-028b59abf989"),
                            Color = Color.Blue,
                            CreatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7819),
                            ProductId = new Guid("41dde13b-dbcc-4f51-a31c-2231f94ddcab"),
                            Quantity = 20,
                            Size = Size.XL,
                            UpdatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7821)
                        },
                        new
                        {
                            Id = new Guid("4102f553-14aa-441a-8278-c0f3ec8da8cb"),
                            Color = Color.Black,
                            CreatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7824),
                            ProductId = new Guid("41dde13b-dbcc-4f51-a31c-2231f94ddcab"),
                            Quantity = 30,
                            Size = Size.XXXL,
                            UpdatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7826)
                        },
                        new
                        {
                            Id = new Guid("592d4c18-c41d-429e-bdbd-1c2f934cad81"),
                            Color = Color.Red,
                            CreatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7829),
                            ProductId = new Guid("9101df8f-38e3-40de-a46a-8ca66c26222d"),
                            Quantity = 10,
                            Size = Size.L,
                            UpdatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7831)
                        },
                        new
                        {
                            Id = new Guid("c21fdaf2-a8af-4c22-b4c5-6cc2bd199299"),
                            Color = Color.Blue,
                            CreatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7834),
                            ProductId = new Guid("9101df8f-38e3-40de-a46a-8ca66c26222d"),
                            Quantity = 20,
                            Size = Size.XL,
                            UpdatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7836)
                        },
                        new
                        {
                            Id = new Guid("18ea00d7-0f2d-4f18-bdfe-6c19bf0e65a6"),
                            Color = Color.Black,
                            CreatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7840),
                            ProductId = new Guid("9101df8f-38e3-40de-a46a-8ca66c26222d"),
                            Quantity = 30,
                            Size = Size.XXXL,
                            UpdatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7841)
                        },
                        new
                        {
                            Id = new Guid("607d840a-54be-40f4-a82d-25a1e714dcbe"),
                            Color = Color.Red,
                            CreatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7845),
                            ProductId = new Guid("8b441114-e030-4412-8952-2370a4b7f05a"),
                            Quantity = 10,
                            Size = Size.L,
                            UpdatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7846)
                        },
                        new
                        {
                            Id = new Guid("a2036864-c935-4339-a31e-b88a5fd94258"),
                            Color = Color.Blue,
                            CreatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7850),
                            ProductId = new Guid("8b441114-e030-4412-8952-2370a4b7f05a"),
                            Quantity = 20,
                            Size = Size.XL,
                            UpdatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7851)
                        },
                        new
                        {
                            Id = new Guid("233089e2-f77c-41bf-b578-8892b013aedc"),
                            Color = Color.Black,
                            CreatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7857),
                            ProductId = new Guid("8b441114-e030-4412-8952-2370a4b7f05a"),
                            Quantity = 30,
                            Size = Size.XXXL,
                            UpdatedAt = new DateTime(2023, 12, 27, 7, 35, 46, 456, DateTimeKind.Local).AddTicks(7859)
                        });
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.Address", b =>
                {
                    b.HasOne("EcommerceAPI.Core.src.Entity.User", null)
                        .WithMany("Addresses")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_addresses_users_user_id");
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.Image", b =>
                {
                    b.HasOne("EcommerceAPI.Core.src.Entity.Product", null)
                        .WithMany("Images")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_images_products_product_id");
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.Order", b =>
                {
                    b.HasOne("EcommerceAPI.Core.src.Entity.Address", null)
                        .WithMany("Orders")
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_orders_addresses_address_id");

                    b.HasOne("EcommerceAPI.Core.src.Entity.User", null)
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_orders_users_user_id");
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.OrderItem", b =>
                {
                    b.HasOne("EcommerceAPI.Core.src.Entity.Order", null)
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_order_items_orders_order_id");

                    b.HasOne("EcommerceAPI.Core.src.Entity.Product", null)
                        .WithMany("OrderItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_order_items_products_product_id");

                    b.HasOne("EcommerceAPI.Core.src.Entity.Variant", null)
                        .WithMany("OrderItems")
                        .HasForeignKey("VariantId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_order_items_variants_variant_id");
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.Product", b =>
                {
                    b.HasOne("EcommerceAPI.Core.src.Entity.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_products_categories_category_id");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.Review", b =>
                {
                    b.HasOne("EcommerceAPI.Core.src.Entity.Product", null)
                        .WithMany("Reviews")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_reviews_products_product_id");

                    b.HasOne("EcommerceAPI.Core.src.Entity.User", null)
                        .WithMany("Reviews")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_reviews_users_user_id");
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.Variant", b =>
                {
                    b.HasOne("EcommerceAPI.Core.src.Entity.Product", null)
                        .WithMany("Variants")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_variants_products_product_id");
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.Address", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.Order", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.Product", b =>
                {
                    b.Navigation("Images");

                    b.Navigation("OrderItems");

                    b.Navigation("Reviews");

                    b.Navigation("Variants");
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.User", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("Orders");

                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("EcommerceAPI.Core.src.Entity.Variant", b =>
                {
                    b.Navigation("OrderItems");
                });
#pragma warning restore 612, 618
        }
    }
}
